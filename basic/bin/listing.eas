0000 :                               ramstart=$4000
0000 :                               kernelend=$1000
0000 :                               pixelwidth=$0140
0000 :                               pixelheight=$00f0
0000 :                               charwidth=$0028
0000 :                               charheight=$001e
0000 :                               blitterbase=$ff20
0000 :                               blitterstatus=$ff20
0000 :                               blitterx=$ff20
0000 :                               blittery=$ff21
0000 :                               blitterdata=$ff22
0000 :                               blittercmask=$ff23
0000 :                               blittercmd=$ff24
0000 :                               paletteregister=$ff10
0000 :                               keyboardport=$ff00
0000 :                               hwtimer=$ff30
0000 :                               audioclock=$4b40
0000 :                               sndnoise=$ff40
0000 :                               sndtone1=$ff41
0000 :                               sndtone2=$ff42
0000 :                               repeatdelay=$0050
0000 :                               repeatspeed=$000a
0000 :                               tabstop=$0004
0000 :                               maxistrsize=$000a
0000 :                               oswaitblitter=$0002
0000 :                               osprintcharacter=$0004
0000 :                               osprintinline=$0006
0000 :                               osprintstring=$0008
0000 :                               osgetkeyboard=$000a
0000 :                               osdrawcharacter=$000c
0000 :                               osdrawsolidcharacter=$000e
0000 :                               oscursorget=$0010
0000 :                               oslineinput=$0012
0000 :                               osudivide16=$0014
0000 :                               ossdivide16=$0016
0000 :                               osrandom16=$0018
0000 :                               osstrtoint=$001a
0000 :                               osinttostr=$001c
0000 :                               osuppercase=$001e
0000 :                               oslowercase=$0020
0000 :                               oswordlength=$0022
0000 :                               osmanager=$0024
0000 :                               osbeep=$0025
0000 :                               bootcode=$0027
0000 :                               palettetable=$0089
0000 :                               osxcursorget=$0091
0000 :                               osxgetkeyboard=$00c0
0000 :                               osxlineinput=$0150
0000 :                               osxwaitblitter=$016e
0000 :                               osiclearscreen=$0178
0000 :                               osifillscreen=$0189
0000 :                               osxdrawsolidcharacter=$01aa
0000 :                               osxdrawcharacter=$01bc
0000 :                               osxprintcharacter=$01e9
0000 :                               osxprintstring=$030b
0000 :                               osxprintinline=$0314
0000 :                               osxbeep=$0336
0000 :                               osxudivide16=$034a
0000 :                               osxsdivide16=$0364
0000 :                               osxrandom16=$037d
0000 :                               osxstrtoint=$038d
0000 :                               osxinttostr=$03cd
0000 :                               osxuppercase=$0414
0000 :                               osxlowercase=$0426
0000 :                               osxwordlength=$0438
0000 :                               keyboardmapping=$043e
0000 :                               shifttable=$0466
0000 :                               bootprompt=$047a
0000 :                               fontdata=$0d00
0000 :                               initialisedstart=$4000
0000 :                               highmemory=$4000
0000 :                               textmemory=$4001
0000 :                               xgraphic=$4002
0000 :                               ygraphic=$4003
0000 :                               colourmask=$4004
0000 :                               fgrcolour=$4005
0000 :                               bgrcolour=$4006
0000 :                               xtextpos=$4007
0000 :                               ytextpos=$4008
0000 :                               currentkey=$4009
0000 :                               currentrowstatus=$400a
0000 :                               keyrepeattime=$400f
0000 :                               initialisedend=$4010
0000 :                               randomseed=$4010
0000 :                               convbuffer=$4011
0000 :                               fontbuffer=$401b
0000 :                               freememory=$4023
0000 :                               tok_and = $2200
0000 :                               tok_or = $2201
0000 :                               tok_xor = $2202
0000 :                               tok_greater = $2403
0000 :                               tok_greaterequal = $2404
0000 :                               tok_less = $2405
0000 :                               tok_lessequal = $2406
0000 :                               tok_equal = $2407
0000 :                               tok_lessgreater = $2408
0000 :                               tok_plus = $2609
0000 :                               tok_minus = $260a
0000 :                               tok_star = $280b
0000 :                               tok_slash = $280c
0000 :                               tok_mod = $280d
0000 :                               tok_pling = $2a0e
0000 :                               tok_lparen = $300f
0000 :                               tok_ampersand = $3010
0000 :                               tok_percent = $3011
0000 :                               tok_vbarconstshift = $3012
0000 :                               tok_abslparen = $3013
0000 :                               tok_asclparen = $3014
0000 :                               tok_chrdollarlparen = $3015
0000 :                               tok_getlparen = $3016
0000 :                               tok_getdollarlparen = $3017
0000 :                               tok_inkeylparen = $3018
0000 :                               tok_inkeydollarlparen = $3019
0000 :                               tok_leftdollarlparen = $301a
0000 :                               tok_lenlparen = $301b
0000 :                               tok_middollarlparen = $301c
0000 :                               tok_peeklparen = $301d
0000 :                               tok_rightdollarlparen = $301e
0000 :                               tok_rndlparen = $301f
0000 :                               tok_sgnlparen = $3020
0000 :                               tok_strdollarlparen = $3021
0000 :                               tok_vallparen = $3022
0000 :                               tok_lengthlparen = $3023
0000 :                               tok_randomlparen = $3024
0000 :                               tok_todotstringdollarlparen = $3025
0000 :                               tok_todotnumberlparen = $3026
0000 :                               tok_signlparen = $3027
0000 :                               tok_rparen = $3228
0000 :                               tok_comma = $3229
0000 :                               tok_semicolon = $322a
0000 :                               tok_to = $322b
0000 :                               tok_step = $322c
0000 :                               tok_for = $3e2d
0000 :                               tok_if = $3e2e
0000 :                               tok_repeat = $3e2f
0000 :                               tok_while = $3e30
0000 :                               tok_endif = $3a31
0000 :                               tok_next = $3a32
0000 :                               tok_then = $3a33
0000 :                               tok_until = $3a34
0000 :                               tok_wend = $3a35
0000 :                               tok_quote = $3c36
0000 :                               tok_colon = $3c37
0000 :                               tok_assert = $3c38
0000 :                               tok_call = $3c39
0000 :                               tok_clear = $3c3a
0000 :                               tok_dim = $3c3b
0000 :                               tok_else = $3c3c
0000 :                               tok_end = $3c3d
0000 :                               tok_endproc = $3c3e
0000 :                               tok_gosub = $3c3f
0000 :                               tok_goto = $3c40
0000 :                               tok_input = $3c41
0000 :                               tok_let = $3c42
0000 :                               tok_list = $3c43
0000 :                               tok_load = $3c44
0000 :                               tok_new = $3c45
0000 :                               tok_old = $3c46
0000 :                               tok_poke = $3c47
0000 :                               tok_print = $3c48
0000 :                               tok_proc = $3c49
0000 :                               tok_rem = $3c4a
0000 :                               tok_return = $3c4b
0000 :                               tok_run = $3c4c
0000 :                               tok_save = $3c4d
0000 :                               tok_stop = $3c4e
0000 :                               tok_sys = $3c4f
0000 :                               maxstringsize = 255
0000 :                               extrastringalloc = 8
0000 :                               hashtablesize = 16
0000 :                               hashtablepower = 4
0000 :                               stacksize = 32
0000 :                               stackelementsize = 3
0000 :                               esvalue1 = 0
0000 :                               estype1 = 1
0000 :                               esreference1 = 2
0000 :                               esvalue2 = 0+stackelementsize
0000 :                               estype2 = 1+stackelementsize
0000 :                               esreference2 = 2+stackelementsize
0000 :                               returnstacksize = 256
0000 :                               stackpossize = 2
1000 :                               .coldstart
1000 : 5ce1                          dec  sp
1001 : 2cf0 402b                     stm  sp,#returnstacktop
1003 : 5cf0 0100                     sub  sp,#returnstacksize
1005 : 2cf0 402c                     stm  sp,#returnstackbottom
1007 : 2cf0 4023                     stm  sp,#initialsp
1009 : 00f0 4200                     mov  r0,#freebasiccode
100b : 20f0 4025                     stm  r0,#programcode
100d : aff0 131a                     jmp  #runprogram
100f : adf0 1282                     jsr  #command_new
1011 :                               .warmstart
1011 : 1cf0 4023                     ldm  sp,#initialsp
1013 : 00f0 0012                     mov  r0,#$12
1015 : ade4                          jsr  #osprintcharacter
1016 : adf0 0012                     .h1  jsr  #oslineinput
1018 : 0000                          break
1019 : aff0 1016                     jmp  #h1
101b :                               .command_call
101b : 5ce1 2dc0                     push  link
101d : 11f0 4029                     ldm  r1,#proctable
101f :                               ._ccaloop
101f : 1210                          ldm  r2,r1,#0
1020 : 31e1                          inc  r1
1021 : c1e0                          sknz  r1
1022 : aff0 1811                     jmp  #callerror
1024 : 0323                          mov  r3,r2,#3
1025 : 04b0                          mov  r4,r11,#0
1026 :                               ._ccacheck
1026 : 1030                          ldm  r0,r3,#0
1027 : 1540                          ldm  r5,r4,#0
1028 : 33e1                          inc  r3
1029 : 34e1                          inc  r4
102a : 7050                          xor  r0,r5,#0
102b : b0e0                          skz  r0
102c : aff0 101f                     jmp  #_ccaloop
102e : 95ee                          ror  r5,#14
102f : e5e0                          skm  r5
1030 : aff0 1026                     jmp  #_ccacheck
1032 : 0b40                          mov  r11,r4,#0
1033 : adf0 18f3                     jsr  #stackpushposition
1035 : adf0 1904                     jsr  #stackpushmarker
1037 : 0063                          word  'c'
1038 : 0b30                          mov  r11,r3,#0
1039 : 22f0 4024                     stm  r2,#currentline
103b : 1dc0 3ce1                     pop  link
103d : afd0                          ret
103e :                               .command_proc
103e : aff0 17ac                     jmp  #syntaxerror
1040 :                               .command_endproc
1040 : 5ce1 2dc0                     push  link
1042 : adf0 1913                     jsr  #stackcheckmarker
1044 : 0063                          word  'c'
1045 : aff0 1872                     jmp  #endprocerror
1047 : adf0 18fd                     jsr  #stackpopposition
1049 : 00e3                          mov  r0,#1+stackpossize
104a : adf0 191c                     jsr  #stackpopwords
104c : 1dc0 3ce1                     pop  link
104e : afd0                          ret
104f :                               .scanforprocedures
104f : 12f0 4028                     ldm  r2,#memallocbottom
1051 : 22f0 4029                     stm  r2,#proctable
1053 : 13f0 4025                     ldm  r3,#programcode
1055 :                               ._sfploop
1055 : 1030                          ldm  r0,r3,#0
1056 : c0e0                          sknz  r0
1057 : aff0 1073                     jmp  #_sfpexit
1059 : 1132                          ldm  r1,r3,#2
105a : 71f0 3c49                     xor  r1,#tok_proc
105c : b1e0                          skz  r1
105d : aff0 1070                     jmp  #_sfpnext
105f : 1133                          ldm  r1,r3,#3
1060 : 61f0 c000                     and  r1,#$c000
1062 : 71f0 4000                     xor  r1,#$4000
1064 : b1e0                          skz  r1
1065 : aff0 1070                     jmp  #_sfpnext
1067 : 2320                          stm  r3,r2,#0
1068 : 32e1                          inc  r2
1069 : 0124                          mov  r1,r2,#4
106a : 14f0 4027                     ldm  r4,#memalloctop
106c : 5140                          sub  r1,r4,#0
106d : ffe0                          sklt
106e : aff0 17ec                     jmp  #memoryerror
1070 :                               ._sfpnext
1070 : 3300                          add  r3,r0,#0
1071 : aff0 1055                     jmp  #_sfploop
1073 :                               ._sfpexit
1073 : 2e20                          stm  r14,r2,#0
1074 : 32e1                          inc  r2
1075 : 22f0 4028                     stm  r2,#memallocbottom
1077 : afd0                          ret
1078 :                               .command_clear
1078 : 5ce1 2dc0                     push  link
107a : 00c0                          mov  r0,sp,#0
107b : 50f0 0200                     sub  r0,#512
107d : 20f0 4026                     stm  r0,#endmemory
107f : 20f0 4027                     stm   r0,#memalloctop
1081 : adf0 1980                     jsr  #varerasehashtables
1083 : 10f0 4025                     ldm  r0,#programcode
1085 :                               ._ccfindend
1085 : 1100                          ldm  r1,r0,#0
1086 : 3010                          add  r0,r1,#0
1087 : b1e0                          skz  r1
1088 : aff0 1085                     jmp  #_ccfindend
108a : 30e1                          inc  r0
108b : 20f0 4028                     stm  r0,#memallocbottom
108d : adf0 18ed                     jsr  #stackreset
108f : adf0 104f                     jsr  #scanforprocedures
1091 : 1dc0 3ce1                     pop  link
1093 : afd0                          ret
1094 :                               .command_dim
1094 : 5ce1 2dc0                     push  link
1096 :                               ._cdinextarray
1096 : 10b0                          ldm  r0,r11,#0
1097 : 90ec                          ror  r0,#12
1098 : e0e0                          skm  r0
1099 : aff0 17ac                     jmp  #syntaxerror
109b : adf0 19ce                     jsr  #findvariable
109d : b0e0                          skz  r0
109e : aff0 1808                     jmp  #arrayexistserror
10a0 : 07b0                          mov  r7,r11,#0
10a1 :                               ._cdiadvance
10a1 : 11b0                          ldm  r1,r11,#0
10a2 : 0210                          mov  r2,r1,#0
10a3 : 3be1                          inc  r11
10a4 : 91ee                          ror  r1,#14
10a5 : e1e0                          skm  r1
10a6 : aff0 10a1                     jmp  #_cdiadvance
10a8 : adf0 158a                     jsr  #evaluateinteger
10aa : 0500                          mov  r5,r0,#0
10ab : 7880                          clr  r8
10ac : 10b0                          ldm  r0,r11,#0
10ad : 70f0 3229                     xor  r0,#tok_comma
10af : b0e0                          skz  r0
10b0 : aff0 10b9                     jmp  #_cdihavedimension
10b2 : 3be1                          inc  r11
10b3 : adf0 158a                     jsr  #evaluateinteger
10b5 : 0800                          mov  r8,r0,#0
10b6 : c8e0                          sknz  r8
10b7 : aff0 17dc                     jmp  #badnumbererror
10b9 :                               ._cdihavedimension
10b9 : adf0 176d                     jsr  #checkrightbracket
10bb : 0051                          mov  r0,r5,#1
10bc : 0181                          mov  r1,r8,#1
10bd : 8010                          mult  r0,r1,#0
10be : ffe0                          sknc
10bf : aff0 17dc                     jmp  #badnumbererror
10c1 : 0400                          mov  r4,r0,#0
10c2 : 30e4                          add  r0,#4
10c3 : 5ce1 2bc0                     push  r11
10c5 : 0b70                          mov  r11,r7,#0
10c6 : adf0 19f6                     jsr  #createvariablerecord
10c8 : 1bc0 3ce1                     pop  r11
10ca : 0104                          mov  r1,r0,#4
10cb : 1202                          ldm  r2,r0,#2
10cc :                               ._cdifill
10cc : 2210                          stm  r2,r1,#0
10cd : 31e1                          inc  r1
10ce : 54e1                          dec  r4
10cf : b4e0                          skz  r4
10d0 : aff0 10cc                     jmp  #_cdifill
10d2 : 2502                          stm  r5,r0,#2
10d3 : 2803                          stm  r8,r0,#3
10d4 : 10b0                          ldm  r0,r11,#0
10d5 : 3be1                          inc  r11
10d6 : 70f0 3229                     xor  r0,#tok_comma
10d8 : c0e0                          sknz  r0
10d9 : aff0 1096                     jmp  #_cdinextarray
10db : 5be1                          dec  r11
10dc : 1dc0 3ce1                     pop  link
10de : afd0                          ret
10df :                               .command_for
10df : 5ce1 2dc0                     push  link
10e1 : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
10e3 : adf0 14e4                     jsr  #evaluator
10e5 : 10a2                          ldm  r0,r10,#esreference1
10e6 : c0e0                          sknz  r0
10e7 : aff0 17b2                     jmp   #typemismatcherror
10e9 : 10a1                          ldm  r0,r10,#estype1
10ea : b0e0                          skz  r0
10eb : aff0 17b2                     jmp   #typemismatcherror
10ed : 10a0                          ldm  r0,r10,#esvalue1
10ee : 0100                          mov  r1,r0,#0
10ef : adf0 1922                     jsr  #stackpushr0
10f1 : 00f0 2407                     mov  r0,#tok_equal
10f3 : adf0 1762                     jsr  #checknexttoken
10f5 : adf0 158a                     jsr  #evaluateinteger
10f7 : 2010                          stm  r0,r1,#0
10f8 : 00f0 322b                     mov  r0,#tok_to
10fa : adf0 1762                     jsr  #checknexttoken
10fc : adf0 158a                     jsr  #evaluateinteger
10fe : adf0 1922                     jsr  #stackpushr0
1100 : 11b0                          ldm  r1,r11,#0
1101 : 71f0 322c                     xor  r1,#tok_step
1103 : 00e1                          mov  r0,#1
1104 : b1e0                          skz  r1
1105 : aff0 110a                     jmp  #_cfhavestep
1107 : 3be1                          inc  r11
1108 : adf0 158a                     jsr  #evaluateinteger
110a :                               ._cfhavestep
110a : adf0 1922                     jsr  #stackpushr0
110c : adf0 18f3                     jsr  #stackpushposition
110e : adf0 1904                     jsr  #stackpushmarker
1110 : 0066                          word  'f'
1111 : 1dc0 3ce1                     pop  link
1113 : afd0                          ret
1114 :                               .command_next
1114 : 5ce1 2dc0                     push  link
1116 : adf0 1913                     jsr  #stackcheckmarker
1118 : 0066                          word  'f'
1119 : aff0 187f                     jmp  #nexterror
111b : 12f0 402d                     ldm  r2,#returnstackptr
111d : 10b0                          ldm  r0,r11,#0
111e : 60f0 c000                     and  r0,#$c000
1120 : 70f0 4000                     xor  r0,#$4000
1122 : b0e0                          skz  r0
1123 : aff0 112f                     jmp  #_cndefaultidentifier
1125 : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
1127 : adf0 14e4                     jsr  #evaluator
1129 : 13a0                          ldm  r3,r10,#esvalue1
112a : 1125                          ldm  r1,r2,#stackpossize+3
112b : 7130                          xor  r1,r3,#0
112c : b1e0                          skz  r1
112d : aff0 17e4                     jmp  #badindexerror
112f :                               ._cndefaultidentifier
112f : 1325                          ldm  r3,r2,#stackpossize+3
1130 : 1424                          ldm  r4,r2,#stackpossize+2
1131 : 1530                          ldm  r5,r3,#0
1132 : 1623                          ldm  r6,r2,#stackpossize+1
1133 : d6e0                          skp  r6
1134 : 54e1                          dec  r4
1135 : 0140                          mov  r1,r4,#0
1136 : 1530                          ldm  r5,r3,#0
1137 : 5150                          sub  r1,r5,#0
1138 : 3560                          add  r5,r6,#0
1139 : 2530                          stm  r5,r3,#0
113a : 5450                          sub  r4,r5,#0
113b : d410                          skse  r4,r1,#0
113c : aff0 1143                     jmp  #_cnendloop
113e :                               ._cnloop
113e : adf0 18fd                     jsr  #stackpopposition
1140 : 1dc0 3ce1                     pop  link
1142 : afd0                          ret
1143 :                               ._cnendloop
1143 : 00e6                          mov  r0,#4+stackpossize
1144 : adf0 191c                     jsr  #stackpopwords
1146 : 1dc0 3ce1                     pop  link
1148 : afd0                          ret
1149 :                               .command_if
1149 : 5ce1 2dc0                     push  link
114b : adf0 158a                     jsr  #evaluateinteger
114d : 11b0                          ldm  r1,r11,#0
114e : 71f0 3a33                     xor  r1,#tok_then
1150 : b1e0                          skz  r1
1151 : aff0 115f                     jmp  #_cifmultiline
1153 : 3be1                          inc  r11
1154 : b0e0                          skz  r0
1155 : aff0 115c                     jmp  #_cifexit
1157 : 1bf0 4024                     ldm  r11,#currentline
1159 : 10b0                          ldm  r0,r11,#0
115a : 3b00                          add  r11,r0,#0
115b : 5be1                          dec  r11
115c :                               ._cifexit
115c : 1dc0 3ce1                     pop  link
115e : afd0                          ret
115f :                               ._cifmultiline
115f : c0e0                          sknz  r0
1160 : aff0 1168                     jmp  #_cifmultiline_false
1162 : adf0 1904                     jsr  #stackpushmarker
1164 : 0069                          word  'i'
1165 : 1dc0 3ce1                     pop  link
1167 : afd0                          ret
1168 :                               ._cifmultiline_false
1168 : 00f0 3c3c                     mov  r0,#tok_else
116a : 01f0 3a31                     mov  r1,#tok_endif
116c : adf0 18af                     jsr  #skipstructure
116e : 5be1                          dec  r11
116f : 10b0                          ldm  r0,r11,#0
1170 : 3be1                          inc  r11
1171 : 70f0 3a31                     xor  r0,#tok_endif
1173 : c0e0                          sknz  r0
1174 : aff0 115c                     jmp  #_cifexit
1176 : adf0 1904                     jsr  #stackpushmarker
1178 : 0069                          word  'i'
1179 : 1dc0 3ce1                     pop  link
117b : afd0                          ret
117c :                               .command_else
117c : 5ce1 2dc0                     push  link
117e : adf0 1913                     jsr  #stackcheckmarker
1180 : 0069                          word  'i'
1181 : aff0 185c                     jmp  #elseerror
1183 : 00e1                          mov  r0,#1
1184 : adf0 191c                     jsr  #stackpopwords
1186 : 00f0 3a31                     mov  r0,#tok_endif
1188 : 0100                          mov  r1,r0,#0
1189 : adf0 18af                     jsr  #skipstructure
118b : 1dc0 3ce1                     pop  link
118d : afd0                          ret
118e :                               .command_endif
118e : 5ce1 2dc0                     push  link
1190 : adf0 1913                     jsr  #stackcheckmarker
1192 : 0069                          word  'i'
1193 : aff0 1867                     jmp  #endiferror
1195 : 00e1                          mov  r0,#1
1196 : adf0 191c                     jsr  #stackpopwords
1198 : 1dc0 3ce1                     pop  link
119a : afd0                          ret
119b :                               .command_let
119b : 5ce2 29c0 2dc1                push  r9,link
119e : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
11a0 : adf0 14e4                     jsr  #evaluator
11a2 : 10a2                          ldm  r0,r10,#esreference1
11a3 : c0e0                          sknz  r0
11a4 : aff0 17ac                     jmp  #syntaxerror
11a6 : 00f0 2407                     mov  r0,#tok_equal
11a8 : adf0 1762                     jsr  #checknexttoken
11aa : 10a1                          ldm  r0,r10,#estype1
11ab : b0e0                          skz  r0
11ac : aff0 11b6                     jmp  #_clstring
11ae : 11a0                          ldm  r1,r10,#esvalue1
11af : adf0 158a                     jsr  #evaluateinteger
11b1 : 2010                          stm  r0,r1,#0
11b2 : 19c0 1dc1 3ce2                pop  r9,link
11b5 : afd0                          ret
11b6 :                               ._clstring
11b6 : 11a0                          ldm  r1,r10,#esvalue1
11b7 : adf0 1580                     jsr  #evaluatestring
11b9 : adf0 1945                     jsr  #stringassign
11bb : 19c0 1dc1 3ce2                pop  r9,link
11be : afd0                          ret
11bf :                               .command_list
11bf : 7660                          clr  r6
11c0 : 7770                          clr  r7
11c1 : 08ea                          mov  r8,#10
11c2 : 10b0                          ldm  r0,r11,#0
11c3 : c0e0                          sknz  r0
11c4 : aff0 11ce                     jmp  #_clhaveline
11c6 : 70f0 3c37                     xor  r0,#tok_colon
11c8 : c0e0                          sknz  r0
11c9 : aff0 11ce                     jmp  #_clhaveline
11cb : adf0 158a                     jsr  #evaluateinteger
11cd : 0600                          mov  r6,r0,#0
11ce :                               ._clhaveline
11ce : 1bf0 4025                     ldm  r11,#programcode
11d0 :                               ._cllistloop
11d0 : 10b0                          ldm  r0,r11,#0
11d1 : c0e0                          sknz  r0
11d2 : aff0 1011                     jmp  #warmstart
11d4 : 10b1                          ldm  r0,r11,#1
11d5 : d0e0                          skp  r0
11d6 : aff0 11dc                     jmp  #_cllistnextline
11d8 : 5060                          sub  r0,r6,#0
11d9 : ffe0                          sklt
11da : adf0 11e0                     jsr  #listoneline
11dc :                               ._cllistnextline
11dc : 10b0                          ldm  r0,r11,#0
11dd : 3b00                          add  r11,r0,#0
11de : aff0 11d0                     jmp  #_cllistloop
11e0 :                               .listoneline
11e0 : 5ce3 26c0 2bc1 2dc2           push  r6,r11,link
11e4 : 10b1                          ldm  r0,r11,#1
11e5 : 01ea                          mov  r1,#10
11e6 : adf0 001c                     jsr  #osinttostr
11e8 : ade8                          jsr  #osprintstring
11e9 : 1000                          ldm  r0,r0,#0
11ea : 0176                          mov  r1,r7,#6
11eb : 5100                          sub  r1,r0,#0
11ec :                               ._lolspacing
11ec : 00f0 0020                     mov  r0,#$20
11ee : ade4                          jsr  #osprintcharacter
11ef : 51e1                          dec  r1
11f0 : b1e0                          skz  r1
11f1 : aff0 11ec                     jmp  #_lolspacing
11f3 : 3be2                          add  r11,#2
11f4 : 7880                          clr  r8
11f5 :                               ._lolloop
11f5 : 10b0                          ldm  r0,r11,#0
11f6 : c0e0                          sknz  r0
11f7 : aff0 11fd                     jmp  #_lolexit
11f9 : adf0 1204                     jsr  #decodetoken
11fb : aff0 11f5                     jmp  #_lolloop
11fd :                               ._lolexit
11fd : 00ed                          mov  r0,#13
11fe : ade4                          jsr  #osprintcharacter
11ff : 16c0 1bc1 1dc2 3ce3           pop  r6,r11,link
1203 : afd0                          ret
1204 :                               .decodetoken
1204 : 5ce1 2dc0                     push  link
1206 : 7990                          clr  r9
1207 : 00f0 0061                     mov  r0,#'a'
1209 : adf0 121b                     jsr  #listprintcharacter
120b : 00f0 0030                     mov  r0,#'0'
120d : adf0 121b                     jsr  #listprintcharacter
120f : 00f0 0062                     mov  r0,#'b'
1211 : adf0 121b                     jsr  #listprintcharacter
1213 : 00f0 0039                     mov  r0,#'9'
1215 : adf0 121b                     jsr  #listprintcharacter
1217 : 3be1                          inc  r11
1218 : 1dc0 3ce1                     pop  link
121a : afd0                          ret
121b :                               .listprintcharacter
121b : 60f0 00ff                     and  r0,#$00ff
121d : c0e0                          sknz  r0
121e : afd0                          ret
121f : 5ce3 26c0 27c1 2dc2           push  r6,r7,link
1223 : 0600                          mov  r6,r0,#0
1224 : adf0 1785                     jsr  #getcharactertype
1226 : 0700                          mov  r7,r0,#0
1227 : b9e0                          skz  r9
1228 : aff0 1233                     jmp  #_lpcprint
122a : c7e0                          sknz  r7
122b : aff0 1233                     jmp  #_lpcprint
122d : c8e0                          sknz  r8
122e : aff0 1233                     jmp  #_lpcprint
1230 : 00f0 0020                     mov  r0,#' '
1232 : ade4                          jsr  #osprintcharacter
1233 :                               ._lpcprint
1233 : 0870                          mov  r8,r7,#0
1234 : 39e1                          inc  r9
1235 : 0060                          mov  r0,r6,#0
1236 : ade4                          jsr  #osprintcharacter
1237 : 16c0 17c1 1dc2 3ce3           pop  r6,r7,link
123b : afd0                          ret
123c :                               .listprintstring
123c : 5ce3 21c0 22c1 2dc2           push  r1,r2,link
1240 : adf0 0022                     jsr  #oswordlength
1242 : 0200                          mov  r2,r0,#0
1243 :                               ._lpsloop
1243 : c2e0                          sknz  r2
1244 : aff0 1250                     jmp  #_lpsexit
1246 : 1010                          ldm  r0,r1,#0
1247 : adf0 121b                     jsr  #listprintcharacter
1249 : 90e8                          ror  r0,#8
124a : adf0 121b                     jsr  #listprintcharacter
124c : 31e1                          inc  r1
124d : 52e1                          dec  r2
124e : aff0 1243                     jmp  #_lpsloop
1250 :                               ._lpsexit
1250 : 0010                          mov  r0,r1,#0
1251 : 11c0 12c1 1dc2 3ce3           pop  r1,r2,link
1255 : afd0                          ret
1256 :                               .commandassert
1256 : 01d0                          mov  r1,link,#0
1257 : adf0 158a                     jsr  #evaluateinteger
1259 : c0e0                          sknz  r0
125a : aff0 17c5                     jmp  #asserterror
125c : 0d10                          mov  link,r1,#0
125d : afd0                          ret
125e :                               .commandpoke
125e : 5ce1 2dc0                     push  link
1260 : adf0 158a                     jsr  #evaluateinteger
1262 : 0100                          mov  r1,r0,#0
1263 : adf0 1779                     jsr  #checkcomma
1265 : adf0 158a                     jsr  #evaluateinteger
1267 : 2010                          stm  r0,r1,#0
1268 : 1dc0 3ce1                     pop  link
126a : afd0                          ret
126b :                               .commandsys
126b : 5ce1 2dc0                     push  link
126d : adf0 158a                     jsr  #evaluateinteger
126f : 0100                          mov  r1,r0,#0
1270 : 00f0 408e                     mov  r0,#fixedvariables
1272 : ad10                          brl  link,r1,#0
1273 : 1dc0 3ce1                     pop  link
1275 : afd0                          ret
1276 :                               .commentcommand1
1276 :                               .commentcommand2
1276 : 10b0                          ldm  r0,r11,#0
1277 : 0100                          mov  r1,r0,#0
1278 : 61f0 00ff                     and  r1,#$00ff
127a : 60f0 ff00                     and  r0,#$ff00
127c : 70f0 0100                     xor  r0,#$0100
127e : c0e0                          sknz  r0
127f : 3b10                          add  r11,r1,#0
1280 : afd0                          ret
1281 :                               .colonhandler
1281 : afd0                          ret
1282 :                               .dummy1
1282 :                               .dummy2
1282 :                               .dummy3
1282 :                               .dummy4
1282 :                               .dummy5
1282 :                               .dummy6
1282 :                               .command_new
1282 : 10f0 4025                     ldm  r0,#programcode
1284 : 2e00                          stm  r14,r0,#0
1285 : adf0 1078                     jsr  #command_clear
1287 : aff0 1011                     jmp  #warmstart
1289 :                               .command_old
1289 : 10f0 4025                     ldm  r0,#programcode
128b : 0200                          mov  r2,r0,#0
128c : 30e1                          inc  r0
128d :                               ._conext
128d : 30e1                          inc  r0
128e :                               ._conext2
128e : 1100                          ldm  r1,r0,#0
128f : c1e0                          sknz  r1
1290 : aff0 129f                     jmp  #_cofoundend
1292 : 61f0 ff00                     and  r1,#$ff00
1294 : 71f0 0100                     xor  r1,#$0100
1296 : b1e0                          skz  r1
1297 : aff0 128d                     jmp  #_conext
1299 : 1100                          ldm  r1,r0,#0
129a : 61f0 00ff                     and  r1,#$00ff
129c : 3010                          add  r0,r1,#0
129d : aff0 128e                     jmp  #_conext2
129f :                               ._cofoundend
129f : 0000                          break
12a0 : 5020                          sub  r0,r2,#0
12a1 : 30e1                          inc  r0
12a2 : 2020                          stm  r0,r2,#0
12a3 : adf0 1078                     jsr  #command_clear
12a5 : aff0 1011                     jmp  #warmstart
12a7 :                               .command_print
12a7 : 5ce1 2dc0                     push  link
12a9 :                               ._cprloop
12a9 : 10b0                          ldm  r0,r11,#0
12aa : c0e0                          sknz r0
12ab : aff0 12f4                     jmp  #_cprexitcr
12ad : 70f0 3c37                     xor  r0,#tok_colon
12af : c0e0                          sknz  r0
12b0 : aff0 12f4                     jmp  #_cprexitcr
12b2 : 3be1                          inc  r11
12b3 : 70f0 0e1d                     xor  r0,#tok_semicolon^tok_colon
12b5 : c0e0                          sknz  r0
12b6 : aff0 12e9                     jmp  #_cprsemicolon
12b8 : 70e3                          xor  r0,#tok_semicolon^tok_comma
12b9 : c0e0                          sknz  r0
12ba : aff0 12e7                     jmp  #_cprtab
12bc : 70f0 0e1f                     xor  r0,#tok_comma^tok_quote
12be : c0e0                          sknz  r0
12bf : aff0 12e3                     jmp  #_cprnewline
12c1 : 5be1                          dec  r11
12c2 : 03ea                          mov  r3,#10
12c3 : 10b0                          ldm  r0,r11,#0
12c4 : 70f0 3011                     xor  r0,#tok_percent
12c6 : c0e0                          sknz  r0
12c7 : 03e2                          mov  r3,#2
12c8 : 70e1                          xor  r0,#tok_percent^tok_ampersand
12c9 : c0e0                          sknz  r0
12ca : 03f0 0010                     mov  r3,#16
12cc : adf0 14da                     jsr  #evaluateexpression
12ce : 10a0                          ldm  r0,r10,#esvalue1
12cf : 12a2                          ldm  r2,r10,#esreference1
12d0 : b2e0                          skz  r2
12d1 : 1000                          ldm  r0,r0,#0
12d2 : 12a1                          ldm  r2,r10,#estype1
12d3 : b2e0                          skz  r2
12d4 : aff0 12e0                     jmp  #_cprprintstr
12d6 : 0200                          mov  r2,r0,#0
12d7 : 00f0 0020                     mov  r0,#' '
12d9 : ade4                          jsr  #osprintcharacter
12da : 0020                          mov  r0,r2,#0
12db : 0130                          mov  r1,r3,#0
12dc : 31f0 8000                     add  r1,#$8000
12de : adf0 001c                     jsr  #osinttostr
12e0 :                               ._cprprintstr
12e0 : ade8                          jsr  #osprintstring
12e1 : aff0 12a9                     jmp  #_cprloop
12e3 :                               ._cprnewline
12e3 : 00ed                          mov  r0,#13
12e4 : ade4                          jsr  #osprintcharacter
12e5 : aff0 12a9                     jmp  #_cprloop
12e7 :                               ._cprtab
12e7 : 00e9                          mov  r0,#9
12e8 : ade4                          jsr  #osprintcharacter
12e9 :                               ._cprsemicolon
12e9 : 10b0                          ldm  r0,r11,#0
12ea : c0e0                          sknz r0
12eb : aff0 12f6                     jmp  #_cprexit
12ed : 70f0 3c37                     xor  r0,#tok_colon
12ef : c0e0                          sknz  r0
12f0 : aff0 12f6                     jmp  #_cprexit
12f2 : aff0 12a9                     jmp  #_cprloop
12f4 :                               ._cprexitcr
12f4 : 00ed                          mov  r0,#13
12f5 : ade4                          jsr  #osprintcharacter
12f6 :                               ._cprexit
12f6 : 1dc0 3ce1                     pop  link
12f8 : afd0                          ret
12f9 :                               .command_repeat
12f9 : 5ce1 2dc0                     push  link
12fb : adf0 18f3                     jsr  #stackpushposition
12fd : adf0 1904                     jsr  #stackpushmarker
12ff : 0072                          word  'r'
1300 : 1dc0 3ce1                     pop  link
1302 : afd0                          ret
1303 :                               .command_until
1303 : 5ce1 2dc0                     push  link
1305 : adf0 1913                     jsr  #stackcheckmarker
1307 : 0072                          word  'r'
1308 : aff0 1843                     jmp  #untilerror
130a : adf0 158a                     jsr  #evaluateinteger
130c : b0e0                          skz  r0
130d : aff0 1314                     jmp  #_crpassed
130f : adf0 18fd                     jsr  #stackpopposition
1311 : 1dc0 3ce1                     pop  link
1313 : afd0                          ret
1314 :                               ._crpassed
1314 : 00e3                          mov  r0,#1+stackpossize
1315 : adf0 191c                     jsr  #stackpopwords
1317 : 1dc0 3ce1                     pop  link
1319 : afd0                          ret
131a :                               .runprogram
131a : 1cf0 4023                     ldm  sp,#initialsp
131c : 0af0 402e                     mov  r10,#evalstack
131e : adf0 1078                     jsr  #command_clear
1320 : 00f0 0017                     mov  r0,#$17
1322 : ade4                          jsr  #osprintcharacter
1323 : 1bf0 4025                     ldm  r11,#programcode
1325 :                               ._rpnewline
1325 : 2bf0 4024                     stm  r11,#currentline
1327 : 10b0                          ldm  r0,r11,#0
1328 : c0e0                          sknz  r0
1329 : aff0 1011                     jmp  #warmstart
132b : 3be2                          add  r11,#2
132c :                               ._rpnewcommand
132c : adf0 0024                     jsr  #osmanager
132e : 2ef0 402a                     stm  r14,#tempstringalloc
1330 : 10b0                          ldm  r0,r11,#0
1331 : 0100                          mov  r1,r0,#0
1332 : 3be1                          inc  r11
1333 : 60f0 f800                     and  r0,#$f800
1335 : 70f0 3800                     xor  r0,#$3800
1337 : b0e0                          skz  r0
1338 : aff0 1342                     jmp  #_rpnotcommandtoken
133a : 61f0 01ff                     and  r1,#$01ff
133c : 31f0 1b38                     add  r1,#tokenvectors
133e : 1010                          ldm  r0,r1,#0
133f : ad00                          brl  link,r0,#0
1340 : aff0 132c                     jmp  #_rpnewcommand
1342 :                               ._rpnotcommandtoken
1342 : c1e0                          sknz  r1
1343 : aff0 1325                     jmp  #_rpnewline
1345 : 5be1                          dec  r11
1346 : 10b0                          ldm  r0,r11,#0
1347 : 70f0 2a0e                     xor  r0,#tok_pling
1349 : c0e0                          sknz  r0
134a : aff0 1354                     jmp  #_rpdolet
134c : 10b0                          ldm  r0,r11,#0
134d : 61f0 c000                     and  r1,#$c000
134f : 71f0 4000                     xor  r1,#$4000
1351 : b1e0                          skz  r1
1352 : aff0 17ac                     jmp  #syntaxerror
1354 :                               ._rpdolet
1354 : adf0 119b                     jsr  #command_let
1356 : aff0 132c                     jmp  #_rpnewcommand
1358 :                               .command_goto
1358 : 5ce1 2dc0                     push  link
135a : adf0 158a                     jsr  #evaluateinteger
135c :                               ._cgmain
135c : 1bf0 4025                     ldm  r11,#programcode
135e :                               ._cgsearch
135e : 11b0                          ldm  r1,r11,#0
135f : c1e0                          sknz  r1
1360 : aff0 17cb                     jmp  #lineerror
1362 : 14b1                          ldm  r4,r11,#1
1363 : 7400                          xor  r4,r0,#0
1364 : c4e0                          sknz  r4
1365 : aff0 136a                     jmp  #_cgfound
1367 : 3b10                          add  r11,r1,#0
1368 : aff0 135e                     jmp  #_cgsearch
136a :                               ._cgfound
136a : 2bf0 4024                     stm  r11,#currentline
136c : 3be2                          add  r11,#2
136d : 1dc0 3ce1                     pop  link
136f : afd0                          ret
1370 :                               .command_gosub
1370 : 5ce1 2dc0                     push  link
1372 : adf0 158a                     jsr  #evaluateinteger
1374 : 5ce1 20c0                     push  r0
1376 : adf0 18f3                     jsr  #stackpushposition
1378 : adf0 1904                     jsr  #stackpushmarker
137a : 0073                          word  's'
137b : 10c0 3ce1                     pop  r0
137d : aff0 135c                     jmp  #_cgmain
137f :                               .command_return
137f : 5ce1 2dc0                     push  link
1381 : adf0 1913                     jsr  #stackcheckmarker
1383 : 0073                          word  's'
1384 : aff0 1836                     jmp  #returnerror
1386 : adf0 18fd                     jsr  #stackpopposition
1388 : 00e3                          mov  r0,#1+stackpossize
1389 : adf0 191c                     jsr  #stackpopwords
138b : 1dc0 3ce1                     pop  link
138d : afd0                          ret
138e :                               .command_while
138e : 5ce1 2dc0                     push  link
1390 : 5be1                          dec  r11
1391 : adf0 18f3                     jsr  #stackpushposition
1393 : adf0 1904                     jsr  #stackpushmarker
1395 : 0077                          word  'w'
1396 : 3be1                          inc  r11
1397 : adf0 158a                     jsr  #evaluateinteger
1399 : b0e0                          skz  r0
139a : aff0 13a4                     jmp  #_cwexit
139c : 00e3                          mov  r0,#1+stackpossize
139d : adf0 191c                     jsr  #stackpopwords
139f : 00f0 3a35                     mov  r0,#tok_wend
13a1 : 0100                          mov  r1,r0,#0
13a2 : adf0 18af                     jsr  #skipstructure
13a4 :                               ._cwexit
13a4 : 1dc0 3ce1                     pop  link
13a6 : afd0                          ret
13a7 :                               .command_wend
13a7 : 5ce1 2dc0                     push  link
13a9 : adf0 1913                     jsr  #stackcheckmarker
13ab : 0077                          word  'w'
13ac : aff0 1850                     jmp  #wenderror
13ae : adf0 18fd                     jsr  #stackpopposition
13b0 : 00e3                          mov  r0,#1+stackpossize
13b1 : adf0 191c                     jsr  #stackpopwords
13b3 : 1dc0 3ce1                     pop  link
13b5 : afd0                          ret
13b6 :                               .binaryop_add
13b6 : 5ce1 2dc0                     push  link
13b8 : adf0 1440                     jsr  #multitypedispatch
13ba : aff0 15a1                     jmp  #stringconcat
13bc : adf0 142c                     jsr  #checkintdereference
13be : 10a0                          ldm  r0,r10,#esvalue1
13bf : 11a3                          ldm  r1,r10,#esvalue2
13c0 : 3010                          add  r0,r1,#0
13c1 : 20a0                          stm  r0,r10,#esvalue1
13c2 : 1dc0 3ce1                     pop  link
13c4 : afd0                          ret
13c5 :                               .binaryop_sub
13c5 : 5ce1 2dc0                     push  link
13c7 : adf0 142c                     jsr  #checkintdereference
13c9 : 10a0                          ldm  r0,r10,#esvalue1
13ca : 11a3                          ldm  r1,r10,#esvalue2
13cb : 5010                          sub  r0,r1,#0
13cc : 20a0                          stm  r0,r10,#esvalue1
13cd : 1dc0 3ce1                     pop  link
13cf : afd0                          ret
13d0 :                               .binaryop_mult
13d0 : 5ce1 2dc0                     push  link
13d2 : adf0 142c                     jsr  #checkintdereference
13d4 : 10a0                          ldm  r0,r10,#esvalue1
13d5 : 11a3                          ldm  r1,r10,#esvalue2
13d6 : 8010                          mult  r0,r1,#0
13d7 : 20a0                          stm  r0,r10,#esvalue1
13d8 : 1dc0 3ce1                     pop  link
13da : afd0                          ret
13db :                               .binaryop_divide
13db : 5ce1 2dc0                     push  link
13dd : adf0 142c                     jsr  #checkintdereference
13df : 10a0                          ldm  r0,r10,#esvalue1
13e0 : 11a3                          ldm  r1,r10,#esvalue2
13e1 : c1e0                          sknz  r1
13e2 : aff0 17ba                     jmp  #dividezeroerror
13e4 : adf0 0016                     jsr  #ossdivide16
13e6 : 20a0                          stm  r0,r10,#esvalue1
13e7 : 1dc0 3ce1                     pop  link
13e9 : afd0                          ret
13ea :                               .binaryop_mod
13ea : 5ce1 2dc0                     push  link
13ec : adf0 142c                     jsr  #checkintdereference
13ee : 10a0                          ldm  r0,r10,#esvalue1
13ef : 11a3                          ldm  r1,r10,#esvalue2
13f0 : c1e0                          sknz  r1
13f1 : aff0 17ba                     jmp  #dividezeroerror
13f3 : adf0 0016                     jsr  #ossdivide16
13f5 : 21a0                          stm  r1,r10,#esvalue1
13f6 : 1dc0 3ce1                     pop  link
13f8 : afd0                          ret
13f9 :                               .binaryop_and
13f9 : 5ce1 2dc0                     push  link
13fb : adf0 142c                     jsr  #checkintdereference
13fd : 10a0                          ldm  r0,r10,#esvalue1
13fe : 11a3                          ldm  r1,r10,#esvalue2
13ff : 6010                          and  r0,r1,#0
1400 : 20a0                          stm  r0,r10,#esvalue1
1401 : 1dc0 3ce1                     pop  link
1403 : afd0                          ret
1404 :                               .binaryop_or
1404 : 5ce1 2dc0                     push  link
1406 : adf0 142c                     jsr  #checkintdereference
1408 : 10a0                          ldm  r0,r10,#esvalue1
1409 : 70f0 ffff                     xor  r0,#$ffff
140b : 11a3                          ldm  r1,r10,#esvalue2
140c : 71f0 ffff                     xor  r1,#$ffff
140e : 6010                          and  r0,r1,#0
140f : 70f0 ffff                     xor  r0,#$ffff
1411 : 20a0                          stm  r0,r10,#esvalue1
1412 : 1dc0 3ce1                     pop  link
1414 : afd0                          ret
1415 :                               .binaryop_xor
1415 : 5ce1 2dc0                     push  link
1417 : adf0 142c                     jsr  #checkintdereference
1419 : 10a0                          ldm  r0,r10,#esvalue1
141a : 11a3                          ldm  r1,r10,#esvalue2
141b : 7010                          xor  r0,r1,#0
141c : 20a0                          stm  r0,r10,#esvalue1
141d : 1dc0 3ce1                     pop  link
141f : afd0                          ret
1420 :                               .binaryop_indirect
1420 : 5ce1 2dc0                     push  link
1422 : adf0 142c                     jsr  #checkintdereference
1424 : 10a0                          ldm  r0,r10,#esvalue1
1425 : 11a3                          ldm  r1,r10,#esvalue2
1426 : 3010                          add  r0,r1,#0
1427 : 20a0                          stm  r0,r10,#esvalue1
1428 : 2fa2                          stm  r15,r10,#esreference1
1429 : 1dc0 3ce1                     pop  link
142b : afd0                          ret
142c :                               .checkintdereference
142c : 10a1                          ldm  r0,r10,#estype1
142d : 11a4                          ldm  r1,r10,#estype2
142e : 3010                          add  r0,r1,#0
142f : b0e0                          skz  r0
1430 : aff0 17b2                     jmp  #typemismatcherror
1432 :                               .dereferencebinary
1432 : 10a5                          ldm  r0,r10,#esreference2
1433 : 11a3                          ldm  r1,r10,#esvalue2
1434 : b0e0                          skz  r0
1435 : 1110                          ldm  r1,r1,#0
1436 : 21a3                          stm  r1,r10,#esvalue2
1437 : 2ea5                          stm  r14,r10,#esreference2
1438 :                               .dereferenceunary
1438 : 10a2                          ldm  r0,r10,#esreference1
1439 : c0e0                          sknz  r0
143a : afd0                          ret
143b : 10a0                          ldm  r0,r10,#esvalue1
143c : 1000                          ldm  r0,r0,#0
143d : 20a0                          stm  r0,r10,#esvalue1
143e : 2ea2                          stm  r14,r10,#esreference1
143f : afd0                          ret
1440 :                               .multitypedispatch
1440 : 10a1                          ldm  r0,r10,#estype1
1441 : 11a4                          ldm  r1,r10,#estype2
1442 : 3010                          add  r0,r1,#0
1443 : 3de2                          add  link,#2
1444 : c0e0                          sknz  r0
1445 : afd0                          ret
1446 : 5ce1 2dc0                     push  link
1448 : c1e0                          sknz  r1
1449 : aff0 17b2                     jmp  #typemismatcherror
144b : 10a1                          ldm  r0,r10,#estype1
144c : c0e0                          sknz  r0
144d : aff0 17b2                     jmp  #typemismatcherror
144f : 1dc0 3ce1                     pop  link
1451 : 5de2                          sub  link,#2
1452 : afd0                          ret
1453 :                               .binaryop_notequal
1453 : 5ce1 2dc0                     push  link
1455 : adf0 1440                     jsr  #multitypedispatch
1457 : aff0 1465                     jmp  #_bnestring
1459 : adf0 142c                     jsr  #checkintdereference
145b : 10a0                          ldm  r0,r10,#esvalue1
145c : 11a3                          ldm  r1,r10,#esvalue2
145d : 7010                          xor  r0,r1,#0
145e :                               ._bnereturn
145e : b0e0                          skz  r0
145f : 00f0 ffff                     mov  r0,#-1
1461 : 20a0                          stm  r0,r10,#esvalue1
1462 : 1dc0 3ce1                     pop  link
1464 : afd0                          ret
1465 :                               ._bnestring
1465 : adf0 14bc                     jsr  #comparestrings
1467 : aff0 145e                     jmp  #_bnereturn
1469 :                               .binaryop_greaterequal
1469 : 5ce1 2dc0                     push  link
146b : adf0 1440                     jsr  #multitypedispatch
146d : aff0 1480                     jmp  #_bgestring
146f : adf0 142c                     jsr  #checkintdereference
1471 : 10a0                          ldm  r0,r10,#esvalue1
1472 : 11a3                          ldm  r1,r10,#esvalue2
1473 :                               .binarycompare
1473 : 30f0 8000                     add  r0,#$8000
1475 : 31f0 8000                     add  r1,#$8000
1477 : 5010                          sub  r0,r1,#0
1478 : 00e0                          mov  r0,#0
1479 : ffe0                          sklt
147a : 00f0 ffff                     mov  r0,#-1
147c : 20a0                          stm  r0,r10,#esvalue1
147d : 1dc0 3ce1                     pop  link
147f : afd0                          ret
1480 :                               ._bgestring
1480 : adf0 14bc                     jsr  #comparestrings
1482 : e0e0                          skm  r0
1483 : aff0 1489                     jmp  #_bgereturntrue
1485 :                               ._bgereturnfalse
1485 : 2ea0                          stm  r14,r10,#esvalue1
1486 : 1dc0 3ce1                     pop  link
1488 : afd0                          ret
1489 :                               ._bgereturntrue
1489 : 00f0 ffff                     mov  r0,#-1
148b : 20a0                          stm  r0,r10,#esvalue1
148c : 1dc0 3ce1                     pop  link
148e : afd0                          ret
148f :                               .binaryop_lessequal
148f : 5ce1 2dc0                     push  link
1491 : adf0 1440                     jsr  #multitypedispatch
1493 : aff0 149b                     jmp  #_blestring
1495 : adf0 142c                     jsr  #checkintdereference
1497 : 11a0                          ldm  r1,r10,#esvalue1
1498 : 10a3                          ldm  r0,r10,#esvalue2
1499 : aff0 1473                     jmp  #binarycompare
149b :                               ._blestring
149b : adf0 14bc                     jsr  #comparestrings
149d : c0e0                          sknz  r0
149e : aff0 1489                     jmp  #_bgereturntrue
14a0 : d0e0                          skp  r0
14a1 : aff0 1489                     jmp  #_bgereturntrue
14a3 : aff0 1485                     jmp  #_bgereturnfalse
14a5 :                               .binaryop_equal
14a5 : 5ce1 2dc0                     push  link
14a7 : adf0 1453                     jsr  #binaryop_notequal
14a9 :                               .reverseresult
14a9 : 10a0                          ldm  r0,r10,#esvalue1
14aa : 70f0 ffff                     xor  r0,#$ffff
14ac : 20a0                          stm  r0,r10,#esvalue1
14ad : 1dc0 3ce1                     pop  link
14af : afd0                          ret
14b0 :                               .binaryop_greater
14b0 : 5ce1 2dc0                     push  link
14b2 : adf0 148f                     jsr  #binaryop_lessequal
14b4 : aff0 14a9                     jmp  #reverseresult
14b6 :                               .binaryop_less
14b6 : 5ce1 2dc0                     push  link
14b8 : adf0 1469                     jsr  #binaryop_greaterequal
14ba : aff0 14a9                     jmp  #reverseresult
14bc :                               .comparestrings
14bc : 2ea1                          stm  r14,r10,#estype1
14bd : 11a0                          ldm  r1,r10,#esvalue1
14be : 12a3                          ldm  r2,r10,#esvalue2
14bf : 1310                          ldm  r3,r1,#0
14c0 : 1420                          ldm  r4,r2,#0
14c1 : 0530                          mov  r5,r3,#0
14c2 : 5540                          sub  r5,r4,#0
14c3 : e5e0                          skm  r5
14c4 : 0340                          mov  r3,r4,#0
14c5 : 33e1                          inc  r3
14c6 : 93e1                          ror  r3,#1
14c7 : 63f0 7fff                     and  r3,#$7fff
14c9 :                               ._cslloop
14c9 : c3e0                          sknz  r3
14ca : aff0 14d8                     jmp  #_cslstartmatch
14cc : 53e1                          dec  r3
14cd : 31e1                          inc  r1
14ce : 32e1                          inc  r2
14cf : 1010                          ldm  r0,r1,#0
14d0 : 1420                          ldm  r4,r2,#0
14d1 : 90e8                          ror  r0,#8
14d2 : 94e8                          ror  r4,#8
14d3 : 5040                          sub  r0,r4,#0
14d4 : c0e0                          sknz  r0
14d5 : aff0 14c9                     jmp  #_cslloop
14d7 : afd0                          ret
14d8 :                               ._cslstartmatch
14d8 : 0050                          mov  r0,r5,#0
14d9 : afd0                          ret
14da :                               .evaluateexpression
14da : 5ce2 29c0 2dc1                push  r9,link
14dd : 7990                          clr  r9
14de : adf0 14e4                     jsr  #evaluator
14e0 : 19c0 1dc1 3ce2                pop  r9,link
14e3 : afd0                          ret
14e4 :                               .evaluator
14e4 : 5ce8 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,r5,r6,link
14ed : 10b0                          ldm  r0,r11,#0
14ee : e0e0                          skm  r0
14ef : aff0 14f9                     jmp  #_evnotconstant
14f1 : 60f0 7fff                     and  r0,#$7fff
14f3 : 20a0                          stm  r0,r10,#esvalue1
14f4 : 2ea1                          stm  r14,r10,#estype1
14f5 : 2ea2                          stm  r14,r10,#esreference1
14f6 : 3be1                          inc  r11
14f7 : aff0 150c                     jmp  #_evhaveterm
14f9 :                               ._evnotconstant
14f9 : c0e0                          sknz  r0
14fa : aff0 17ac                     jmp  #syntaxerror
14fc : 3000                          add  r0,r0,#0
14fd : d0e0                          skp  r0
14fe : aff0 1539                     jmp  #_evvariable
1500 : 3000                          add  r0,r0,#0
1501 : d0e0                          skp  r0
1502 : aff0 153d                     jmp  #_evunaryfunction
1504 : 00b1                          mov  r0,r11,#1
1505 : 20a0                          stm  r0,r10,#esvalue1
1506 : 2fa1                          stm  r15,r10,#estype1
1507 : 2ea2                          stm  r14,r10,#esreference1
1508 : 10b0                          ldm  r0,r11,#0
1509 : 60f0 00ff                     and  r0,#$00ff
150b : 3b00                          add  r11,r0,#0
150c :                               ._evhaveterm
150c : 10b0                          ldm  r0,r11,#0
150d : 60f0 f000                     and  r0,#$f000
150f : 70f0 2000                     xor  r0,#$2000
1511 : b0e0                          skz  r0
1512 : aff0 152f                     jmp  #_evexit
1514 : 10b0                          ldm  r0,r11,#0
1515 : 60f0 1e00                     and  r0,#$1e00
1517 : 5090                          sub  r0,r9,#0
1518 : 50e1                          dec  r0
1519 : d0e0                          skp  r0
151a : aff0 152f                     jmp  #_evexit
151c : 11b0                          ldm  r1,r11,#0
151d : 3be1                          inc  r11
151e : 0290                          mov  r2,r9,#0
151f : 0910                          mov  r9,r1,#0
1520 : 69f0 1e00                     and  r9,#$1e00
1522 : 3ae3                          add  r10,#stackelementsize
1523 : adf0 14e4                     jsr  #evaluator
1525 : 5ae3                          sub  r10,#stackelementsize
1526 : 0920                          mov  r9,r2,#0
1527 :                               ._evcallhandler
1527 : 61f0 01ff                     and  r1,#$01ff
1529 : 31f0 1b38                     add  r1,#tokenvectors
152b : 1010                          ldm  r0,r1,#0
152c : ad00                          brl  link,r0,#0
152d : aff0 150c                     jmp  #_evhaveterm
152f :                               ._evexit
152f : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,r5,r6,link
1538 : afd0                          ret
1539 :                               ._evvariable
1539 : adf0 198b                     jsr  #getvariablereference
153b : aff0 150c                     jmp  #_evhaveterm
153d :                               ._evunaryfunction
153d : 10b0                          ldm  r0,r11,#0
153e : 70f0 260a                     xor  r0,#tok_minus
1540 : b0e0                          skz  r0
1541 : aff0 154b                     jmp  #_evcheckpling
1543 : 3be1                          inc  r11
1544 : adf0 1568                     jsr  #evaluateterminteger
1546 : 7110                          clr  r1
1547 : 5100                          sub  r1,r0,#0
1548 : 21a0                          stm  r1,r10,#esvalue1
1549 : aff0 150c                     jmp  #_evhaveterm
154b :                               ._evcheckpling
154b : 70f0 0c04                     xor  r0,#tok_minus^tok_pling
154d : b0e0                          skz  r0
154e : aff0 1556                     jmp  #_evcheckunary
1550 : 3be1                          inc  r11
1551 : adf0 1568                     jsr  #evaluateterminteger
1553 : 2fa2                          stm  r15,r10,#esreference1
1554 : aff0 150c                     jmp  #_evhaveterm
1556 :                               ._evcheckunary
1556 : 10b0                          ldm  r0,r11,#0
1557 : 60f0 1e00                     and  r0,#$1e00
1559 : 70f0 1000                     xor  r0,#$1000
155b : b0e0                          skz  r0
155c : aff0 17ac                     jmp  #syntaxerror
155e : 11b0                          ldm  r1,r11,#0
155f : 3be1                          inc  r11
1560 : aff0 1527                     jmp  #_evcallhandler
1562 :                               .constshifthandler
1562 : 10b0                          ldm  r0,r11,#0
1563 : 20a0                          stm  r0,r10,#esvalue1
1564 : 2ea1                          stm  r14,r10,#estype1
1565 : 2ea2                          stm  r14,r10,#esreference1
1566 : 3be1                          inc  r11
1567 : afd0                          ret
1568 :                               .evaluateterminteger
1568 : 5ce3 21c0 29c1 2dc2           push  r1,r9,link
156c : 09f0 4000                     mov  r9,#$4000
156e : adf0 14e4                     jsr  #evaluator
1570 : 11a0                          ldm  r1,r10,#esvalue1
1571 : 19a2                          ldm  r9,r10,#esreference1
1572 : b9e0                          skz  r9
1573 : 1110                          ldm  r1,r1,#0
1574 : 21a0                          stm  r1,r10,#esvalue1
1575 : 2ea2                          stm  r14,r10,#esreference1
1576 : 19a1                          ldm  r9,r10,#estype1
1577 : b9e0                          skz  r9
1578 : aff0 17b2                     jmp  #typemismatcherror
157a : 10a0                          ldm  r0,r10,#esvalue1
157b : 11c0 19c1 1dc2 3ce3           pop  r1,r9,link
157f : afd0                          ret
1580 :                               .evaluatestring
1580 : 5ce1 2dc0                     push  link
1582 : adf0 14da                     jsr  #evaluateexpression
1584 : 10a1                          ldm  r0,r10,#estype1
1585 : b0e0                          skz  r0
1586 : aff0 1592                     jmp  #evaluatecommon
1588 : aff0 17b2                     jmp  #typemismatcherror
158a :                               .evaluateinteger
158a : 5ce1 2dc0                     push  link
158c : adf0 14da                     jsr  #evaluateexpression
158e : 10a1                          ldm  r0,r10,#estype1
158f : b0e0                          skz  r0
1590 : aff0 17b2                     jmp  #typemismatcherror
1592 :                               .evaluatecommon
1592 : 10a2                          ldm  r0,r10,#esreference1
1593 : b0e0                          skz  r0
1594 : aff0 159a                     jmp  #_ecreference
1596 : 10a0                          ldm  r0,r10,#esvalue1
1597 : 1dc0 3ce1                     pop  link
1599 : afd0                          ret
159a :                               ._ecreference
159a : 10a0                          ldm  r0,r10,#esvalue1
159b : 1000                          ldm  r0,r0,#0
159c : 20a0                          stm  r0,r10,#esvalue1
159d : 2ea2                          stm  r14,r10,#esreference1
159e : 1dc0 3ce1                     pop  link
15a0 : afd0                          ret
15a1 :                               .stringconcat
15a1 : adf0 1432                     jsr  #dereferencebinary
15a3 : 10a0                          ldm   r0,r10,#esvalue1
15a4 : 1100                          ldm  r1,r0,#0
15a5 : 10a3                          ldm  r0,r10,#esvalue2
15a6 : 1000                          ldm  r0,r0,#0
15a7 : 3010                          add  r0,r1,#0
15a8 : 0100                          mov  r1,r0,#0
15a9 : 51f0 0100                     sub  r1,#maxstringsize+1
15ab : ffe0                          sklt
15ac : aff0 1822                     jmp  #strlenerror
15ae : 90e1                          ror  r0,#1
15af : 60f0 7fff                     and  r0,#$7fff
15b1 : 30e2                          add  r0,#2
15b2 : adf0 15d5                     jsr  #sfallocate
15b4 : 13a0                          ldm  r3,r10,#esvalue1
15b5 : 21a0                          stm  r1,r10,#esvalue1
15b6 : adf0 15be                     jsr  #_scoutput
15b8 : 13a3                          ldm  r3,r10,#esvalue2
15b9 : adf0 15be                     jsr  #_scoutput
15bb : 1dc0 3ce1                     pop  link
15bd : afd0                          ret
15be :                               ._scoutput
15be : 5ce1 2dc0                     push  link
15c0 : 0030                          mov  r0,r3,#0
15c1 : adf0 0022                     jsr  #oswordlength
15c3 : 0400                          mov  r4,r0,#0
15c4 :                               ._scoutloop
15c4 : 33e1                          inc  r3
15c5 : c4e0                          sknz  r4
15c6 : aff0 15d2                     jmp  #_scoutexit
15c8 : 54e1                          dec  r4
15c9 : 1030                          ldm  r0,r3,#0
15ca : adf0 15e0                     jsr  #sfaddcharacter
15cc : 1030                          ldm  r0,r3,#0
15cd : 90e8                          ror  r0,#8
15ce : adf0 15e0                     jsr  #sfaddcharacter
15d0 : aff0 15c4                     jmp  #_scoutloop
15d2 :                               ._scoutexit
15d2 : 1dc0 3ce1                     pop  link
15d4 : afd0                          ret
15d5 :                               .sfallocate
15d5 : 5ce1 2dc0                     push  link
15d7 : adf0 192d                     jsr  #allocatetempmemory
15d9 : 0100                          mov  r1,r0,#0
15da : 7220                          clr  r2
15db : 2e10                          stm  r14,r1,#0
15dc : 2e11                          stm  r14,r1,#1
15dd : 1dc0 3ce1                     pop  link
15df : afd0                          ret
15e0 :                               .sfaddcharacter
15e0 : 60f0 00ff                     and  r0,#$00ff
15e2 : c0e0                          sknz  r0
15e3 : afd0                          ret
15e4 : 5ce2 23c0 24c1                push  r3,r4
15e7 : 0420                          mov  r4,r2,#0
15e8 : 94e1                          ror  r4,#1
15e9 : d4e0                          skp  r4
15ea : 90e8                          ror  r0,#8
15eb : 64f0 7fff                     and  r4,#$7fff
15ed : 3411                          add  r4,r1,#1
15ee : 1340                          ldm  r3,r4,#0
15ef : 3300                          add  r3,r0,#0
15f0 : 2340                          stm  r3,r4,#0
15f1 : 2e41                          stm  r14,r4,#1
15f2 : 32e1                          inc  r2
15f3 : 2210                          stm  r2,r1,#0
15f4 : 13c0 14c1 3ce2                pop  r3,r4
15f7 : afd0                          ret
15f8 :                               .unary_mid
15f8 : 5ce1 2dc0                     push  link
15fa : adf0 1580                     jsr  #evaluatestring
15fc : 0300                          mov  r3,r0,#0
15fd : adf0 1779                     jsr  #checkcomma
15ff : adf0 158a                     jsr  #evaluateinteger
1601 : 0400                          mov  r4,r0,#0
1602 : 05f0 00ff                     mov  r5,#maxstringsize
1604 : 10b0                          ldm  r0,r11,#0
1605 : 70f0 3228                     xor  r0,#tok_rparen
1607 : c0e0                          sknz r0
1608 : aff0 160f                     jmp  #unarystringslicecommon
160a : adf0 1779                     jsr  #checkcomma
160c : adf0 158a                     jsr  #evaluateinteger
160e : 0500                          mov  r5,r0,#0
160f :                               .unarystringslicecommon
160f : adf0 176d                     jsr  #checkrightbracket
1611 : 54e1                          dec  r4
1612 : d4e0                          skp  r4
1613 : aff0 17dc                     jmp  #badnumbererror
1615 : d5e0                          skp  r5
1616 : aff0 17dc                     jmp  #badnumbererror
1618 : c5e0                          sknz  r5
1619 : aff0 1641                     jmp  #_usscnull
161b : 1030                          ldm  r0,r3,#0
161c : 0140                          mov  r1,r4,#0
161d : 5100                          sub  r1,r0,#0
161e : ffe0                          sklt
161f : aff0 1641                     jmp  #_usscnull
1621 : 0050                          mov  r0,r5,#0
1622 : 90e1                          ror  r0,#1
1623 : 60f0 7fff                     and  r0,#$7fff
1625 : 30e2                          add  r0,#2
1626 : adf0 15d5                     jsr  #sfallocate
1628 : 20a0                          stm  r0,r10,#esvalue1
1629 : 7660                          clr  r6
162a : 33e1                          inc  r3
162b :                               ._ussccopyloop
162b : 54e1                          dec  r4
162c : e4e0                          skm  r4
162d : aff0 163c                     jmp  #_usscnextcharacter
162f : 1030                          ldm  r0,r3,#0
1630 : 9060                          ror  r0,r6,#0
1631 : 60f0 00ff                     and  r0,#$00ff
1633 : c0e0                          sknz  r0
1634 : aff0 1645                     jmp  #_usscexit
1636 : adf0 15e0                     jsr  #sfaddcharacter
1638 : 55e1                          dec  r5
1639 : c5e0                          sknz  r5
163a : aff0 1645                     jmp  #_usscexit
163c :                               ._usscnextcharacter
163c : 76e8                          xor  r6,#8
163d : c6e0                          sknz  r6
163e : 33e1                          inc  r3
163f : aff0 162b                     jmp  #_ussccopyloop
1641 :                               ._usscnull
1641 : 00e1                          mov  r0,#1
1642 : adf0 15d5                     jsr  #sfallocate
1644 : 20a0                          stm  r0,r10,#esvalue1
1645 :                               ._usscexit
1645 : 2ea2                          stm  r14,r10,#esreference1
1646 : 2fa1                          stm  r15,r10,#estype1
1647 : 1dc0 3ce1                     pop  link
1649 : afd0                          ret
164a :                               .unary_left
164a : 5ce1 2dc0                     push  link
164c : adf0 1580                     jsr  #evaluatestring
164e : 0300                          mov  r3,r0,#0
164f : adf0 1779                     jsr  #checkcomma
1651 : 04e1                          mov  r4,#1
1652 : adf0 158a                     jsr  #evaluateinteger
1654 : 0500                          mov  r5,r0,#0
1655 : aff0 160f                     jmp  #unarystringslicecommon
1657 :                               .unary_right
1657 : 5ce1 2dc0                     push  link
1659 : adf0 1580                     jsr  #evaluatestring
165b : 0300                          mov  r3,r0,#0
165c : 1430                          ldm  r4,r3,#0
165d : 34e1                          inc  r4
165e : adf0 1779                     jsr  #checkcomma
1660 : adf0 158a                     jsr  #evaluateinteger
1662 : 5400                          sub  r4,r0,#0
1663 : d4e0                          skp  r4
1664 : 04e1                          mov  r4,#1
1665 : c4e0                          sknz  r4
1666 : 04e1                          mov  r4,#1
1667 : 05f0 00ff                     mov  r5,#maxstringsize
1669 : aff0 160f                     jmp  #unarystringslicecommon
166b :                               .unary_hex
166b :                               .unary_bin
166b : aff0 1568                     jmp  #evaluateterminteger
166d :                               .unary_parenthesis
166d : 5ce1 2dc0                     push  link
166f : adf0 14da                     jsr  #evaluateexpression
1671 : adf0 176d                     jsr  #checkrightbracket
1673 : 1dc0 3ce1                     pop  link
1675 : afd0                          ret
1676 :                               .unary_abs
1676 : 5ce1 2dc0                     push  link
1678 : adf0 158a                     jsr  #evaluateinteger
167a : 7110                          clr  r1
167b : 5100                          sub  r1,r0,#0
167c : d0e0                          skp  r0
167d : 0010                          mov  r0,r1,#0
167e : 20a0                          stm  r0,r10,#esvalue1
167f : adf0 176d                     jsr  #checkrightbracket
1681 : 1dc0 3ce1                     pop  link
1683 : afd0                          ret
1684 :                               .unary_sgn
1684 :                               .unary_sgn2
1684 : 5ce1 2dc0                     push  link
1686 : adf0 158a                     jsr  #evaluateinteger
1688 : 01e1                          mov  r1,#1
1689 : d0e0                          skp  r0
168a : 01f0 ffff                     mov  r1,#-1
168c : c0e0                          sknz r0
168d : 7110                          clr  r1
168e : 21a0                          stm  r1,r10,#esvalue1
168f : adf0 176d                     jsr  #checkrightbracket
1691 : 1dc0 3ce1                     pop  link
1693 : afd0                          ret
1694 :                               .unary_len
1694 :                               .unary_len2
1694 : 5ce1 2dc0                     push  link
1696 : adf0 1580                     jsr  #evaluatestring
1698 : 1000                          ldm  r0,r0,#0
1699 : 20a0                          stm  r0,r10,#esvalue1
169a : 2ea1                          stm  r14,r10,#estype1
169b : adf0 176d                     jsr  #checkrightbracket
169d : 1dc0 3ce1                     pop  link
169f : afd0                          ret
16a0 :                               .unary_asc
16a0 : 5ce1 2dc0                     push  link
16a2 : adf0 1580                     jsr  #evaluatestring
16a4 : 1001                          ldm  r0,r0,#1
16a5 : 60f0 00ff                     and  r0,#$00ff
16a7 : 20a0                          stm  r0,r10,#esvalue1
16a8 : 2ea1                          stm  r14,r10,#estype1
16a9 : adf0 176d                     jsr  #checkrightbracket
16ab : 1dc0 3ce1                     pop  link
16ad : afd0                          ret
16ae :                               .unary_peek
16ae : 5ce1 2dc0                     push  link
16b0 : adf0 158a                     jsr  #evaluateinteger
16b2 : 1000                          ldm  r0,r0,#0
16b3 : 20a0                          stm  r0,r10,#esvalue1
16b4 : adf0 176d                     jsr  #checkrightbracket
16b6 : 1dc0 3ce1                     pop  link
16b8 : afd0                          ret
16b9 :                               .unary_inkey
16b9 : 5ce1 2dc0                     push  link
16bb : adf0 176d                     jsr  #checkrightbracket
16bd : 1dc0 3ce1                     pop  link
16bf :                               .unaryinkeynocheck
16bf : 5ce1 2dc0                     push  link
16c1 : adea                          jsr  #osgetkeyboard
16c2 : 20a0                          stm  r0,r10,#esvalue1
16c3 : 2ea1                          stm  r14,r10,#estype1
16c4 : 2ea2                          stm  r14,r10,#esreference1
16c5 : 1dc0 3ce1                     pop  link
16c7 : afd0                          ret
16c8 :                               .unary_get
16c8 : 5ce1 2dc0                     push  link
16ca : adf0 176d                     jsr  #checkrightbracket
16cc :                               ._ugwait
16cc : adf0 16bf                     jsr  #unaryinkeynocheck
16ce : 10a0                          ldm  r0,r10,#esvalue1
16cf : c0e0                          sknz r0
16d0 : aff0 16cc                     jmp  #_ugwait
16d2 : 1dc0 3ce1                     pop  link
16d4 : afd0                          ret
16d5 :                               .unary_rnd
16d5 :                               .unary_rnd2
16d5 : 5ce1 2dc0                     push  link
16d7 : adf0 0018                     jsr  #osrandom16
16d9 : 11b0                          ldm  r1,r11,#0
16da : 71f0 3228                     xor  r1,#tok_rparen
16dc : c1e0                          sknz  r1
16dd : aff0 16ee                     jmp  #unary_rndexit
16df : 0200                          mov  r2,r0,#0
16e0 : adf0 158a                     jsr  #evaluateinteger
16e2 : 0300                          mov  r3,r0,#0
16e3 : adf0 1779                     jsr  #checkcomma
16e5 : adf0 158a                     jsr  #evaluateinteger
16e7 : 0101                          mov  r1,r0,#1
16e8 : 5130                          sub  r1,r3,#0
16e9 : 0020                          mov  r0,r2,#0
16ea : adf0 0014                     jsr  #osudivide16
16ec : 0010                          mov  r0,r1,#0
16ed : 3030                          add  r0,r3,#0
16ee :                               .unary_rndexit
16ee : 20a0                          stm  r0,r10,#esvalue1
16ef : 2ea1                          stm  r14,r10,#estype1
16f0 : 2ea2                          stm  r14,r10,#esreference1
16f1 : adf0 176d                     jsr  #checkrightbracket
16f3 : 1dc0 3ce1                     pop  link
16f5 : afd0                          ret
16f6 :                               .unary_val
16f6 :                               .unary_val2
16f6 : 5ce1 2dc0                     push  link
16f8 : adf0 1580                     jsr  #evaluatestring
16fa : adf0 176d                     jsr  #checkrightbracket
16fc : 5ce3 29c0 2ac1 2bc2           push  r9,r10,r11
1700 : 7bb0                          clr  r11
1701 : 0a01                          mov  r10,r0,#1
1702 : 1900                          ldm  r9,r0,#0
1703 : 00f0 1715                     mov  r0,#stringextract
1705 : 01ea                          mov  r1,#10
1706 : adf0 001a                     jsr  #osstrtoint
1708 : b1e0                          skz  r1
1709 : aff0 17dc                     jmp  #badnumbererror
170b : 19c0 1ac1 1bc2 3ce3           pop  r9,r10,r11
170f : 20a0                          stm  r0,r10,#esvalue1
1710 : 2ea1                          stm  r14,r10,#estype1
1711 : 2ea2                          stm   r14,r10,#esreference1
1712 : 1dc0 3ce1                     pop  link
1714 : afd0                          ret
1715 :                               .stringextract
1715 : 7000                          clr  r0
1716 : c9e0                          sknz  r9
1717 : afd0                          ret
1718 : 59e1                          dec  r9
1719 : 10a0                          ldm  r0,r10,#0
171a : bbe0                          skz  r11
171b : 90e8                          ror  r0,#8
171c : 60f0 00ff                     and  r0,#$00ff
171e : 7be1                          xor  r11,#1
171f : cbe0                          sknz  r11
1720 : 3ae1                          inc  r10
1721 : afd0                          ret
1722 :                               .unary_chr
1722 : 5ce1 2dc0                     push  link
1724 : adf0 158a                     jsr  #evaluateinteger
1726 : adf0 176d                     jsr  #checkrightbracket
1728 : 60f0 00ff                     and  r0,#$00ff
172a :                               .unaryreturncharacter
172a : 0100                          mov  r1,r0,#0
172b : 00e2                          mov  r0,#2
172c : adf0 192d                     jsr  #allocatetempmemory
172e : 2101                          stm  r1,r0,#1
172f : 01e1                          mov  r1,#1
1730 : 2100                          stm  r1,r0,#0
1731 : 20a0                          stm  r0,r10,#esvalue1
1732 : 2fa1                          stm  r15,r10,#estype1
1733 : 2ea2                          stm  r14,r10,#esreference1
1734 : 1dc0 3ce1                     pop  link
1736 : afd0                          ret
1737 :                               .unary_getstring
1737 : 5ce1 2dc0                     push  link
1739 : adf0 16c8                     jsr  #unary_get
173b : 10a0                          ldm  r0,r10,#esvalue1
173c : aff0 172a                     jmp  #unaryreturncharacter
173e :                               .unary_inkeystring
173e : 5ce1 2dc0                     push  link
1740 : adf0 16b9                     jsr  #unary_inkey
1742 : 10a0                          ldm  r0,r10,#esvalue1
1743 : aff0 172a                     jmp  #unaryreturncharacter
1745 :                               .unary_str
1745 :                               .unary_str2
1745 : 5ce1 2dc0                     push  link
1747 : adf0 158a                     jsr  #evaluateinteger
1749 : adf0 176d                     jsr  #checkrightbracket
174b : 01f0 800a                     mov  r1,#$800a
174d : adf0 001c                     jsr  #osinttostr
174f : 0100                          mov  r1,r0,#0
1750 : 00ea                          mov  r0,#maxistrsize
1751 : adf0 192d                     jsr  #allocatetempmemory
1753 : 20a0                          stm  r0,r10,#esvalue1
1754 : 2fa1                          stm  r15,r10,#estype1
1755 : 2ea2                          stm  r14,r10,#esreference1
1756 : 02ea                          mov  r2,#maxistrsize
1757 :                               ._uscopy
1757 : 1310                          ldm  r3,r1,#0
1758 : 2300                          stm  r3,r0,#0
1759 : 31e1                          inc  r1
175a : 30e1                          inc  r0
175b : 52e1                          dec  r2
175c : b2e0                          skz  r2
175d : aff0 1757                     jmp  #_uscopy
175f : 1dc0 3ce1                     pop  link
1761 : afd0                          ret
1762 :                               .checknexttoken
1762 : 5ce1 21c0                     push  r1
1764 : 11b0                          ldm  r1,r11,#0
1765 : 3be1                          inc  r11
1766 : 7010                          xor  r0,r1,#0
1767 : b0e0                          skz  r0
1768 : aff0 17ac                     jmp  #syntaxerror
176a : 11c0 3ce1                     pop  r1
176c : afd0                          ret
176d :                               .checkrightbracket
176d : 5ce1 20c0                     push  r0
176f : 10b0                          ldm  r0,r11,#0
1770 : 3be1                          inc  r11
1771 : 70f0 3228                     xor  r0,#tok_rparen
1773 : b0e0                          skz  r0
1774 : aff0 17d4                     jmp  #missingbracketerror
1776 : 10c0 3ce1                     pop  r0
1778 : afd0                          ret
1779 :                               .checkcomma
1779 : 5ce1 20c0                     push  r0
177b : 10b0                          ldm  r0,r11,#0
177c : 3be1                          inc  r11
177d : 70f0 3229                     xor  r0,#tok_comma
177f : b0e0                          skz  r0
1780 : aff0 17f6                     jmp  #missingcommaerror
1782 : 10c0 3ce1                     pop  r0
1784 : afd0                          ret
1785 :                               .getcharactertype
1785 : 5ce1 21c0                     push  r1
1787 : 0100                          mov  r1,r0,#0
1788 : 51f0 0060                     sub  r1,#96
178a : ffe0                          sklt
178b : 50f0 0020                     sub  r0,#32
178d : 7110                          clr  r1
178e : 50f0 0030                     sub  r0,#'0'
1790 : ffe1                          skge
1791 : aff0 17a8                     jmp  #_gctexit
1793 : 01e2                          mov  r1,#2
1794 : 50ea                          sub  r0,#10
1795 : ffe1                          skge
1796 : aff0 17a8                     jmp  #_gctexit
1798 : 7110                          clr  r1
1799 : 50e7                          sub  r0,#7
179a : ffe1                          skge
179b : aff0 17a8                     jmp  #_gctexit
179d : 50f0 001a                     sub  r0,#26
179f : 01e1                          mov  r1,#1
17a0 : ffe1                          skge
17a1 : aff0 17a8                     jmp  #_gctexit
17a3 : 01e2                          mov  r1,#2
17a4 : 70f0 ffd3                     xor  r0,#'.'-'0'-10-7-26
17a6 : c0e0                          sknz  r0
17a7 : 7110                          clr  r1
17a8 :                               ._gctexit
17a8 : 0010                          mov  r0,r1,#0
17a9 : 11c0 3ce1                     pop  r1
17ab : afd0                          ret
17ac :                               .syntaxerror
17ac : adf0 1896                     jsr  #generrorhandler
17ae : 0006 7953 746e 7861           string "syntax"
17b2 :                               .typemismatcherror
17b2 : adf0 1896                     jsr  #generrorhandler
17b4 : 000a 7257 6e6f 2067 7974      string "wrong type"
17ba :                               .dividezeroerror
17ba : adf0 1896                     jsr  #generrorhandler
17bc : 0010 6944 6976 6973 6e6f      string  "division by zero"
17c5 :                               .asserterror
17c5 : adf0 1896                     jsr  #generrorhandler
17c7 : 0006 7341 6573 7472           string  "assert"
17cb :                               .lineerror
17cb : adf0 1896                     jsr  #generrorhandler
17cd : 000c 694c 656e 7520 6b6e      string  "line unknown"
17d4 :                               .missingbracketerror
17d4 : adf0 1896                     jsr  #generrorhandler
17d6 : 0009 694d 7373 6e69 2067      string  "missing )"
17dc :                               .badnumbererror
17dc : adf0 1896                     jsr  #generrorhandler
17de : 000a 6142 2064 754e 626d      string  "bad number"
17e4 :                               .badindexerror
17e4 : adf0 1896                     jsr  #generrorhandler
17e6 : 0009 6142 2064 6e49 6564      string  "bad index"
17ec :                               .memoryerror
17ec : adf0 1896                     jsr  #generrorhandler
17ee : 000d 754f 2074 666f 4d20      string  "out of memory"
17f6 :                               .missingcommaerror
17f6 : adf0 1896                     jsr  #generrorhandler
17f8 : 0009 694d 7373 6e69 2067      string  "missing ,"
17fe :                               .arrayautoerror
17fe : adf0 1896                     jsr  #generrorhandler
1800 : 000d 6e55 6e6b 776f 206e      string  "unknown array"
1808 :                               .arrayexistserror
1808 : adf0 1896                     jsr  #generrorhandler
180a : 000c 7241 6172 2079 7865      string  "array exists"
1811 :                               .callerror
1811 : adf0 1896                     jsr  #generrorhandler
1813 : 0011 6e55 6e6b 776f 206e      string  "unknown procedure"
181d :                               .stoperror
181d : adf0 1896                     jsr  #generrorhandler
181f : 0004 7453 706f                string  "stop"
1822 :                               .strlenerror
1822 : adf0 1896                     jsr  #generrorhandler
1824 : 000b 7453 6972 676e 5320      string  "string size"
182b :                               .structureerror
182b : adf0 1896                     jsr  #generrorhandler
182d : 0010 7453 7572 7463 7275      string  "structures wrong"
1836 :                               .returnerror
1836 : adf0 1896                     jsr  #generrorhandler
1838 : 0014 6552 7574 6e72 7720      string  "return without gosub"
1843 :                               .untilerror
1843 : adf0 1896                     jsr  #generrorhandler
1845 : 0014 6e55 6974 206c 6977      string  "until without repeat"
1850 :                               .wenderror
1850 : adf0 1896                     jsr  #generrorhandler
1852 : 0012 6557 646e 7720 7469      string  "wend without while"
185c :                               .elseerror
185c : adf0 1896                     jsr  #generrorhandler
185e : 000f 6c45 6573 7720 7469      string  "else without if"
1867 :                               .endiferror
1867 : adf0 1896                     jsr  #generrorhandler
1869 : 0010 6e45 6964 2066 6977      string  "endif without if"
1872 :                               .endprocerror
1872 : adf0 1896                     jsr  #generrorhandler
1874 : 0014 6e45 5064 6f72 2063      string  "endproc without proc"
187f :                               .nexterror
187f : adf0 1896                     jsr  #generrorhandler
1881 : 0010 654e 7478 7720 7469      string  "next without for"
188a :                               .returnstackerror
188a : adf0 1896                     jsr  #generrorhandler
188c : 0012 7453 7572 7463 7275      string  "structure too deep"
1896 :                               .generrorhandler
1896 : 01d0                          mov  r1,r13,#0
1897 : 00f0 0011                     mov  r0,#$11
1899 : ade4                          jsr  #osprintcharacter
189a : 0010                          mov  r0,r1,#0
189b : ade8                          jsr  #osprintstring
189c : 10f0 4024                     ldm  r0,#currentline
189e : 1001                          ldm  r0,r0,#1
189f : c0e0                          sknz  r0
18a0 : aff0 18ad                     jmp  #_ehexit
18a2 : ade6                          jsr  #osprintinline
18a3 : 0003 4020 0020                string  " @ "
18a6 : 01ea                          mov  r1,#10
18a7 : adf0 001c                     jsr  #osinttostr
18a9 : ade8                          jsr  #osprintstring
18aa : ade6                          jsr  #osprintinline
18ab : 0002 120d                     string  "[0d][12]"
18ad :                               ._ehexit
18ad : aff0 1011                     jmp  #warmstart
18af :                               .skipstructure
18af : 7330                          clr  r3
18b0 :                               ._ssloop
18b0 : 12b0                          ldm  r2,r11,#0
18b1 : c2e0                          sknz  r2
18b2 : aff0 18e3                     jmp  #_ssnextline
18b4 : b3e0                          skz  r3
18b5 : aff0 18c0                     jmp  #_ssnext
18b7 : 7200                          xor  r2,r0,#0
18b8 : c2e0                          sknz  r2
18b9 : aff0 18e1                     jmp  #_ssfound
18bb : 12b0                          ldm  r2,r11,#0
18bc : 7210                          xor  r2,r1,#0
18bd : c2e0                          sknz  r2
18be : aff0 18e1                     jmp  #_ssfound
18c0 :                               ._ssnext
18c0 : 12b0                          ldm  r2,r11,#0
18c1 : 62f0 ff00                     and  r2,#$ff00
18c3 : 72f0 0100                     xor  r2,#$0100
18c5 : c2e0                          sknz  r2
18c6 : aff0 18db                     jmp  #_ssstring
18c8 : 12b0                          ldm  r2,r11,#0
18c9 : 0420                          mov  r4,r2,#0
18ca : 3be1                          inc  r11
18cb : 62f0 f800                     and  r2,#$f800
18cd : 72f0 3800                     xor  r2,#$3800
18cf : b2e0                          skz  r2
18d0 : aff0 18b0                     jmp  #_ssloop
18d2 : 94e9                          ror  r4,#9
18d3 : 64e3                          and  r4,#3
18d4 : 54e2                          sub  r4,#2
18d5 : 3340                          add  r3,r4,#0
18d6 : e3e0                          skm  r3
18d7 : aff0 18b0                     jmp  #_ssloop
18d9 : aff0 182b                     jmp  #structureerror
18db :                               ._ssstring
18db : 12b0                          ldm  r2,r11,#0
18dc : 62f0 00ff                     and  r2,#$00ff
18de : 3b20                          add  r11,r2,#0
18df : aff0 18b0                     jmp  #_ssloop
18e1 :                               ._ssfound
18e1 : 3be1                          inc  r11
18e2 : afd0                          ret
18e3 :                               ._ssnextline
18e3 : 3be1                          inc  r11
18e4 : 12b0                          ldm  r2,r11,#0
18e5 : c2e0                          sknz  r2
18e6 : aff0 182b                     jmp  #structureerror
18e8 : 2bf0 4024                     stm  r11,#currentline
18ea : 3be2                          add  r11,#2
18eb : aff0 18b0                     jmp  #_ssloop
18ed :                               .stackreset
18ed : 10f0 402b                     ldm  r0,#returnstacktop
18ef : 20f0 402d                     stm  r0,#returnstackptr
18f1 : 2e00                          stm  r14,r0,#0
18f2 : afd0                          ret
18f3 :                               .stackpushposition
18f3 : 10f0 402d                     ldm  r0,#returnstackptr
18f5 : 50e2                          sub  r0,#2
18f6 : 20f0 402d                     stm  r0,#returnstackptr
18f8 : 2b00                          stm  r11,r0,#0
18f9 : 11f0 4024                     ldm  r1,#currentline
18fb : 2101                          stm  r1,r0,#1
18fc : afd0                          ret
18fd :                               .stackpopposition
18fd : 10f0 402d                     ldm  r0,#returnstackptr
18ff : 1b01                          ldm  r11,r0,#1
1900 : 1002                          ldm  r0,r0,#2
1901 : 20f0 4024                     stm  r0,#currentline
1903 : afd0                          ret
1904 :                               .stackpushmarker
1904 : 10f0 402d                     ldm  r0,#returnstackptr
1906 : 50e1                          dec  r0
1907 : 20f0 402d                     stm  r0,#returnstackptr
1909 : 11d0                          ldm  r1,link,#0
190a : 2100                          stm  r1,r0,#0
190b : 3de1                          inc  link
190c : 11f0 402c                     ldm  r1,#returnstackbottom
190e : 5010                          sub  r0,r1,#0
190f : ffe1                          skge
1910 : aff0 188a                     jmp  #returnstackerror
1912 : afd0                          ret
1913 :                               .stackcheckmarker
1913 : 10f0 402d                     ldm  r0,#returnstackptr
1915 : 1000                          ldm  r0,r0,#0
1916 : 11d0                          ldm  r1,link,#0
1917 : 3de1                          inc  link
1918 : 7010                          xor  r0,r1,#0
1919 : c0e0                          sknz  r0
191a : 3de2                          add  link,#2
191b : afd0                          ret
191c :                               .stackpopwords
191c : 11f0 402d                     ldm  r1,#returnstackptr
191e : 3010                          add  r0,r1,#0
191f : 20f0 402d                     stm  r0,#returnstackptr
1921 : afd0                          ret
1922 :                               .stackpushr0
1922 : 5ce1 21c0                     push  r1
1924 : 11f0 402d                     ldm  r1,#returnstackptr
1926 : 51e1                          dec  r1
1927 : 21f0 402d                     stm  r1,#returnstackptr
1929 : 2010                          stm  r0,r1,#0
192a : 11c0 3ce1                     pop  r1
192c : afd0                          ret
192d :                               .allocatetempmemory
192d : 5ce1 21c0                     push  r1
192f : 11f0 402a                     ldm  r1,#tempstringalloc
1931 : b1e0                          skz  r1
1932 : aff0 1938                     jmp  #_atmnoinitialise
1934 : 11f0 4027                     ldm  r1,#memalloctop
1936 : 51f0 0080                     sub  r1,#(maxstringsize>>1)+1
1938 :                               ._atmnoinitialise
1938 : 5100                          sub  r1,r0,#0
1939 : 21f0 402a                     stm  r1,#tempstringalloc
193b : 10f0 4028                     ldm  r0,#memallocbottom
193d : 5010                          sub  r0,r1,#0
193e : ffe0                          sklt  r0
193f : aff0 17ec                     jmp  #memoryerror
1941 : 0010                          mov  r0,r1,#0
1942 : 11c0 3ce1                     pop  r1
1944 : afd0                          ret
1945 :                               .stringassign
1945 : 5ce6 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,link
194c : 0200                          mov  r2,r0,#0
194d : adf0 0022                     jsr  #oswordlength
194f : 13f0 4027                     ldm  r3,#memalloctop
1951 : 1410                          ldm   r4,r1,#0
1952 : 5430                          sub  r4,r3,#0
1953 : ffe1                          skge
1954 : aff0 195e                     jmp  #_ssaconcrete
1956 : 1410                          ldm  r4,r1,#0
1957 : 54e1                          dec  r4
1958 : 1340                          ldm  r3,r4,#0
1959 : 53e1                          dec  r3
195a : 5300                          sub  r3,r0,#0
195b : ffe0                          sklt
195c : aff0 196f                     jmp  #_ssausecurrent
195e :                               ._ssaconcrete
195e : 0409                          mov  r4,r0,#1+extrastringalloc
195f : 13f0 4027                     ldm  r3,#memalloctop
1961 : 5340                          sub  r3,r4,#0
1962 : 23f0 4027                     stm  r3,#memalloctop
1964 : 2430                          stm  r4,r3,#0
1965 : 33e1                          inc  r3
1966 : 2310                          stm  r3,r1,#0
1967 : 14f0 4028                     ldm  r4,#memallocbottom
1969 : 34f0 0100                     add  r4,#256
196b : 5430                          sub  r4,r3,#0
196c : ffe0                          sklt
196d : aff0 17ec                     jmp  #memoryerror
196f :                               ._ssausecurrent
196f : 1310                          ldm  r3,r1,#0
1970 :                               ._ssacopy
1970 : 1420                          ldm  r4,r2,#0
1971 : 2430                          stm  r4,r3,#0
1972 : 32e1                          inc  r2
1973 : 33e1                          inc  r3
1974 : 50e1                          dec  r0
1975 : e0e0                          skm  r0
1976 : aff0 1970                     jmp  #_ssacopy
1978 : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,link
197f : afd0                          ret
1980 :                               .varerasehashtables
1980 : 00f0 40a8                     mov  r0,#variablehashtable
1982 : 01f0 0040                     mov  r1,#hashtablesize*4
1984 :                               ._vehtloop
1984 : 2e00                          stm  r14,r0,#0
1985 : 30e1                          inc  r0
1986 : 51e1                          dec  r1
1987 : b1e0                          skz  r1
1988 : aff0 1984                     jmp  #_vehtloop
198a : afd0                          ret
198b :                               .getvariablereference
198b : 10b0                          ldm  r0,r11,#0
198c : 50f0 6000                     sub  r0,#$6000
198e : 50f0 001b                     sub  r0,#26+1
1990 : ffe0                          sklt  r0
1991 : aff0 199b                     jmp  #_gvrnotfixedvariable
1993 : 01f0 40a8                     mov  r1,#fixedvariables+26
1995 : 3100                          add  r1,r0,#0
1996 : 21a0                          stm  r1,r10,#esvalue1
1997 : 2fa2                          stm  r15,r10,#esreference1
1998 : 2ea1                          stm  r14,r10,#estype1
1999 : 3be1                          inc  r11
199a : afd0                          ret
199b :                               ._gvrnotfixedvariable
199b : 5ce8 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,r5,r6,link
19a4 : adf0 19ce                     jsr  #findvariable
19a6 : b0e0                          skz  r0
19a7 : aff0 19b1                     jmp  #_gvrhavevariable
19a9 :                               ._gvrnotfound
19a9 : 10b0                          ldm  r0,r11,#0
19aa : 90ec                          ror  r0,#12
19ab : d0e0                          skp  r0
19ac : aff0 17fe                     jmp  #arrayautoerror
19ae : 00e3                          mov  r0,#3
19af : adf0 19f6                     jsr  #createvariablerecord
19b1 :                               ._gvrhavevariable
19b1 : 11b0                          ldm  r1,r11,#0
19b2 : 0210                          mov  r2,r1,#0
19b3 : 3be1                          inc  r11
19b4 : 91ee                          ror  r1,#14
19b5 : e1e0                          skm  r1
19b6 : aff0 19b1                     jmp  #_gvrhavevariable
19b8 : 91ee                          ror  r1,#14
19b9 : d1e0                          skp  r1
19ba : adf0 1a14                     jsr  #indexarray
19bc : e1e0                          skm  r1
19bd : 30e2                          add  r0,#2
19be : 20a0                          stm  r0,r10,#esvalue1
19bf : 2fa2                          stm  r15,r10,#esreference1
19c0 : 62f0 1000                     and  r2,#$1000
19c2 : 22a1                          stm  r2,r10,#estype1
19c3 : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,r5,r6,link
19cc : afd0                          ret
19cd :                               ._gvrnullstring
19cd : 0000                          word  0
19ce :                               .findvariable
19ce : 10b0                          ldm  r0,r11,#0
19cf : 60f0 c000                     and  r0,#$c000
19d1 : 70f0 4000                     xor  r0,#$4000
19d3 : b0e0                          skz  r0
19d4 : aff0 17ac                     jmp  #syntaxerror
19d6 : 16b0                          ldm  r6,r11,#0
19d7 : 0060                          mov  r0,r6,#0
19d8 : 90e6                          ror  r0,#6
19d9 : 3600                          add  r6,r0,#0
19da : 66ef                          and  r6,#hashtablesize-1
19db : 10b0                          ldm  r0,r11,#0
19dc : 60f0 1800                     and  r0,#$1800
19de : 90e7                          ror  r0,#11-hashtablepower
19df : 3600                          add  r6,r0,#0
19e0 : 36f0 40a8                     add  r6,#variablehashtable
19e2 : 0060                          mov  r0,r6,#0
19e3 :                               ._fvrsearch
19e3 : 1000                          ldm  r0,r0,#0
19e4 : c0e0                          sknz  r0
19e5 : aff0 19f5                     jmp  #_fvrexit
19e7 : 1101                          ldm  r1,r0,#1
19e8 : 02b0                          mov  r2,r11,#0
19e9 :                               ._fvrcompare
19e9 : 1310                          ldm  r3,r1,#0
19ea : 1420                          ldm  r4,r2,#0
19eb : 7340                          xor  r3,r4,#0
19ec : b3e0                          skz  r3
19ed : aff0 19e3                     jmp  #_fvrsearch
19ef : 31e1                          inc  r1
19f0 : 32e1                          inc  r2
19f1 : 94ee                          ror  r4,#14
19f2 : e4e0                          skm  r4
19f3 : aff0 19e9                     jmp  #_fvrcompare
19f5 :                               ._fvrexit
19f5 : afd0                          ret
19f6 :                               .createvariablerecord
19f6 : 11f0 4028                     ldm  r1,#memallocbottom
19f8 : 1260                          ldm  r2,r6,#0
19f9 : 2210                          stm  r2,r1,#0
19fa : 2b11                          stm  r11,r1,#1
19fb : 13b0                          ldm  r3,r11,#0
19fc : 93ed                          ror  r3,#13
19fd : 7220                          clr  r2
19fe : d3e0                          skp  r3
19ff : 02f0 19cd                     mov  r2,#_gvrnullstring
1a01 : 2212                          stm  r2,r1,#2
1a02 : 0210                          mov  r2,r1,#0
1a03 : 3200                          add  r2,r0,#0
1a04 : ffe0                          sknc
1a05 : aff0 17ec                     jmp  #memoryerror
1a07 : 22f0 4028                     stm  r2,#memallocbottom
1a09 : 13f0 4027                     ldm  r3,#memalloctop
1a0b : 53f0 0100                     sub  r3,#256
1a0d : 5230                          sub  r2,r3,#0
1a0e : ffe0                          sklt
1a0f : aff0 17ec                     jmp  #memoryerror
1a11 : 2160                          stm  r1,r6,#0
1a12 : 0010                          mov  r0,r1,#0
1a13 : afd0                          ret
1a14 :                               .indexarray
1a14 : 5ce5 21c0 22c1 23c2 24c3      push  r1,r2,r3,r4,link
1a1a : 0300                          mov  r3,r0,#0
1a1b : adf0 158a                     jsr  #evaluateinteger
1a1d : 1232                          ldm  r2,r3,#2
1a1e : 5200                          sub  r2,r0,#0
1a1f : ffe1                          skge
1a20 : aff0 17e4                     jmp  #badindexerror
1a22 : 11b0                          ldm  r1,r11,#0
1a23 : 71f0 3229                     xor  r1,#tok_comma
1a25 : c1e0                          sknz  r1
1a26 : aff0 1a36                     jmp  #_iadimension2
1a28 : 1233                          ldm  r2,r3,#3
1a29 : b2e0                          skz  r2
1a2a : aff0 17f6                     jmp  #missingcommaerror
1a2c :                               ._iadone
1a2c : 3034                          add  r0,r3,#4
1a2d : adf0 176d                     jsr  #checkrightbracket
1a2f : 11c0 12c1 13c2 14c3 1dc4      pop  r1,r2,r3,r4,link
1a35 : afd0                          ret
1a36 :                               ._iadimension2
1a36 : 3be1                          inc  r11
1a37 : 0400                          mov  r4,r0,#0
1a38 : adf0 158a                     jsr  #evaluateinteger
1a3a : 1233                          ldm  r2,r3,#3
1a3b : c2e0                          sknz  r2
1a3c : aff0 17d4                     jmp  #missingbracketerror
1a3e : 5200                          sub  r2,r0,#0
1a3f : ffe1                          skge
1a40 : aff0 17e4                     jmp  #badindexerror
1a42 : 1232                          ldm  r2,r3,#2
1a43 : 8021                          mult  r0,r2,#1
1a44 : 3040                          add  r0,r4,#0
1a45 : aff0 1a2c                     jmp  #_iadone
1a47 :                               .tokeniserwords
1a47 : 0102 4231 6004                word $0102,$4231,$6004
1a4a : 0101 62df                     word $0101,$62df
1a4c : 0102 4270 6012                word $0102,$4270,$6012
1a4f : 0201 803e                     word $0201,$803e
1a51 : 0201 bd3e                     word $0201,$bd3e
1a53 : 0201 803c                     word $0201,$803c
1a55 : 0201 bd3c                     word $0201,$bd3c
1a57 : 0201 803d                     word $0201,$803d
1a59 : 0201 be3c                     word $0201,$be3c
1a5b : 0301 802b                     word $0301,$802b
1a5d : 0301 802d                     word $0301,$802d
1a5f : 0401 802a                     word $0401,$802a
1a61 : 0401 802f                     word $0401,$802f
1a63 : 0402 4265 6004                word $0402,$4265,$6004
1a66 : 0501 8021                     word $0501,$8021
1a68 : 0801 8028                     word $0801,$8028
1a6a : 0801 8026                     word $0801,$8026
1a6c : 0801 8025                     word $0801,$8025
1a6e : 0801 ffff                     word $0801,$ffff
1a70 : 0802 4851 6813                word $0802,$4851,$6813
1a73 : 0802 4af9 6803                word $0802,$4af9,$6803
1a76 : 0802 5943 7812                word $0802,$5943,$7812
1a79 : 0802 48cf 6814                word $0802,$48cf,$6814
1a7c : 0802 58cf 7814                word $0802,$58cf,$7814
1a7f : 0803 4a39 48d3 6819           word $0803,$4a39,$48d3,$6819
1a83 : 0803 5a39 58d3 7819           word $0803,$5a39,$58d3,$7819
1a87 : 0802 58d4 7b26                word $0802,$58d4,$7b26
1a8a : 0802 48d4 680e                word $0802,$48d4,$680e
1a8d : 0802 5975 7804                word $0802,$5975,$7804
1a90 : 0802 48d8 69bd                word $0802,$48d8,$69bd
1a93 : 0803 597a 5947 7814           word $0803,$597a,$5947,$7814
1a97 : 0802 4a42 6804                word $0802,$4a42,$6804
1a9a : 0802 492b 680e                word $0802,$492b,$680e
1a9d : 0802 5b33 7812                word $0802,$5b33,$7812
1aa0 : 0802 483e 680c                word $0802,$483e,$680c
1aa3 : 0803 48d4 4926 6954           word $0803,$48d4,$4926,$6954
1aa7 : 0803 483a 48ae 6a17           word $0803,$483a,$48ae,$6a17
1aab : 0805 5a6c 5b1d 5ae4 5a39      word $0805,$5a6c,$5b1d,$5ae4,$5a39,$7807
1ab1 : 0805 4a6c 4a55 4a1d 48ca      word $0805,$4a6c,$4a55,$4a1d,$48ca,$6812
1ab7 : 0802 497b 6a37                word $0802,$497b,$6a37
1aba : 0901 8029                     word $0901,$8029
1abc : 0901 802c                     word $0901,$802c
1abe : 0901 803b                     word $0901,$803b
1ac0 : 0901 626c                     word $0901,$626c
1ac2 : 0902 4333 6285                word $0902,$4333,$6285
1ac5 : 0f02 425e 6012                word $0f02,$425e,$6012
1ac8 : 0f01 60f9                     word $0f01,$60f9
1aca : 0f03 40da 40d8 6321           word $0f03,$40da,$40d8,$6321
1ace : 0f03 4157 41e9 6005           word $0f03,$4157,$41e9,$6005
1ad2 : 0d03 4235 416c 6006           word $0d03,$4235,$416c,$6006
1ad6 : 0d02 40d6 6338                word $0d02,$40d6,$6338
1ad9 : 0d02 4154 6235                word $0d02,$4154,$6235
1adc : 0d03 4245 417c 600c           word $0d03,$4245,$417c,$600c
1ae0 : 0d02 40df 60ae                word $0d02,$40df,$60ae
1ae3 : 0e01 8027                     word $0e01,$8027
1ae5 : 0e01 803a                     word $0e01,$803a
1ae7 : 0e03 42f9 40db 6332           word $0e03,$42f9,$40db,$6332
1aeb : 0e02 402b 61ec                word $0e02,$402b,$61ec
1aee : 0e03 41e3 402d 6012           word $0e03,$41e3,$402d,$6012
1af2 : 0e02 416c 600d                word $0e02,$416c,$600d
1af5 : 0e02 41e5 60db                word $0e02,$41e5,$60db
1af8 : 0e02 4235 6004                word $0e02,$4235,$6004
1afb : 0e04 4235 4284 426a 6003      word $0e04,$4235,$4284,$426a,$6003
1b00 : 0e03 425f 435b 6002           word $0e03,$425f,$435b,$6002
1b04 : 0e02 425f 626c                word $0e02,$425f,$626c
1b07 : 0e03 4239 4358 6014           word $0e03,$4239,$4358,$6014
1b0b : 0e02 40d4 6014                word $0e02,$40d4,$6014
1b0e : 0e02 4174 6333                word $0e02,$4174,$6333
1b11 : 0e02 4264 60a1                word $0e02,$4264,$60a1
1b14 : 0e02 40d6 6017                word $0e02,$40d6,$6017
1b17 : 0e02 41ef 6004                word $0e02,$41ef,$6004
1b1a : 0e02 4268 60d3                word $0e02,$4268,$60d3
1b1d : 0e03 42e0 4239 6014           word $0e03,$42e0,$4239,$6014
1b21 : 0e02 42e0 6087                word $0e02,$42e0,$6087
1b24 : 0e02 40da 600d                word $0e02,$40da,$600d
1b27 : 0e03 40da 435c 6242           word $0e03,$40da,$435c,$6242
1b2b : 0e02 435a 600e                word $0e02,$435a,$600e
1b2e : 0e02 403b 60de                word $0e02,$403b,$60de
1b31 : 0e02 4333 628f                word $0e02,$4333,$628f
1b34 : 0e02 43fb 6013                word $0e02,$43fb,$6013
1b37 : 0000                          word $0000
1b38 :                               .tokenvectors
1b38 : 13f9                          word binaryop_and
1b39 : 1404                          word binaryop_or
1b3a : 1415                          word binaryop_xor
1b3b : 14b0                          word binaryop_greater
1b3c : 1469                          word binaryop_greaterequal
1b3d : 14b6                          word binaryop_less
1b3e : 148f                          word binaryop_lessequal
1b3f : 14a5                          word binaryop_equal
1b40 : 1453                          word binaryop_notequal
1b41 : 13b6                          word binaryop_add
1b42 : 13c5                          word binaryop_sub
1b43 : 13d0                          word binaryop_mult
1b44 : 13db                          word binaryop_divide
1b45 : 13ea                          word binaryop_mod
1b46 : 1420                          word binaryop_indirect
1b47 : 166d                          word unary_parenthesis
1b48 : 166b                          word unary_hex
1b49 : 166b                          word unary_bin
1b4a : 1562                          word constshifthandler
1b4b : 1676                          word unary_abs
1b4c : 16a0                          word unary_asc
1b4d : 1722                          word unary_chr
1b4e : 16c8                          word unary_get
1b4f : 1737                          word unary_getstring
1b50 : 16b9                          word unary_inkey
1b51 : 173e                          word unary_inkeystring
1b52 : 164a                          word unary_left
1b53 : 1694                          word unary_len
1b54 : 15f8                          word unary_mid
1b55 : 16ae                          word unary_peek
1b56 : 1657                          word unary_right
1b57 : 16d5                          word unary_rnd
1b58 : 1684                          word unary_sgn
1b59 : 1745                          word unary_str
1b5a : 16f6                          word unary_val
1b5b : 1694                          word unary_len2
1b5c : 16d5                          word unary_rnd2
1b5d : 1745                          word unary_str2
1b5e : 16f6                          word unary_val2
1b5f : 1684                          word unary_sgn2
1b60 : 1282                          word dummy1
1b61 : 1282                          word dummy2
1b62 : 1282                          word dummy3
1b63 : 1282                          word dummy4
1b64 : 1282                          word dummy5
1b65 : 10df                          word command_for
1b66 : 1149                          word command_if
1b67 : 12f9                          word command_repeat
1b68 : 138e                          word command_while
1b69 : 118e                          word command_endif
1b6a : 1114                          word command_next
1b6b : 1282                          word dummy6
1b6c : 1303                          word command_until
1b6d : 13a7                          word command_wend
1b6e : 1276                          word commentcommand1
1b6f : 1281                          word colonhandler
1b70 : 1256                          word commandassert
1b71 : 101b                          word command_call
1b72 : 1078                          word command_clear
1b73 : 1094                          word command_dim
1b74 : 117c                          word command_else
1b75 : 1011                          word warmstart
1b76 : 1040                          word command_endproc
1b77 : 1370                          word command_gosub
1b78 : 1358                          word command_goto
1b79 : 17ac                          word syntaxerror
1b7a : 119b                          word command_let
1b7b : 11bf                          word command_list
1b7c : 17ac                          word syntaxerror
1b7d : 1282                          word command_new
1b7e : 1289                          word command_old
1b7f : 125e                          word commandpoke
1b80 : 12a7                          word command_print
1b81 : 103e                          word command_proc
1b82 : 1276                          word commentcommand2
1b83 : 137f                          word command_return
1b84 : 131a                          word runprogram
1b85 : 17ac                          word syntaxerror
1b86 : 181d                          word stoperror
1b87 : 126b                          word commandsys
1b88 :                               .basicprogram
1b88 : 0004 03de 3c43 0000 0004      word $0004,$03de,$3c43,$0000,$0004,$03e8,$3c4a,$00
1bcd : 0000                          word $0000
1bce :                               .endbasicprogram
4023 :                               .initialsp
4024 :                               .currentline
4025 :                               .programcode
4026 :                               .endmemory
4027 :                               .memalloctop
4028 :                               .memallocbottom
4029 :                               .proctable
402a :                               .tempstringalloc
402b :                               .returnstacktop
402c :                               .returnstackbottom
402d :                               .returnstackptr
402e :                               .evalstack
408e :                               .fixedvariables
40a8 :                               .variablehashtable
40e8 :                               .tokenbuffer
41e8 :                               .endofdata
41e8 :                               freebasiccode = ramstart + $200
