0000 :                               ramstart=$4000
0000 :                               kernelend=$1000
0000 :                               pixelwidth=$0140
0000 :                               pixelheight=$00f0
0000 :                               charwidth=$0028
0000 :                               charheight=$001e
0000 :                               blitterbase=$ff20
0000 :                               blitterstatus=$ff20
0000 :                               blitterx=$ff20
0000 :                               blittery=$ff21
0000 :                               blitterdata=$ff22
0000 :                               blittercmask=$ff23
0000 :                               blittercmd=$ff24
0000 :                               paletteregister=$ff10
0000 :                               keyboardport=$ff00
0000 :                               hwtimer=$ff30
0000 :                               audioclock=$4b40
0000 :                               sndnoise=$ff40
0000 :                               sndtone1=$ff41
0000 :                               sndtone2=$ff42
0000 :                               repeatdelay=$0050
0000 :                               repeatspeed=$000a
0000 :                               tabstop=$0004
0000 :                               maxistrsize=$000a
0000 :                               theme_line=$0002
0000 :                               theme_keyword=$0006
0000 :                               theme_ident=$0003
0000 :                               theme_const=$0001
0000 :                               theme_string=$0005
0000 :                               theme_punc=$0002
0000 :                               oswaitblitter=$0002
0000 :                               osprintcharacter=$0004
0000 :                               osprintinline=$0006
0000 :                               osprintstring=$0008
0000 :                               osgetkeyboard=$000a
0000 :                               oscursorget=$000c
0000 :                               oslineinput=$000e
0000 :                               osinputlimit=$0010
0000 :                               oscheckbreak=$0012
0000 :                               osgettextpos=$0014
0000 :                               osdrawcharacter=$0016
0000 :                               osdrawsolidcharacter=$0018
0000 :                               osbeep=$001a
0000 :                               osudivide16=$001c
0000 :                               ossdivide16=$001e
0000 :                               osrandom16=$0020
0000 :                               osstrtoint=$0022
0000 :                               osinttostr=$0024
0000 :                               osuppercase=$0026
0000 :                               oslowercase=$0028
0000 :                               oswordlength=$002a
0000 :                               osmanager=$002c
0000 :                               bootprompt=$002d
0000 :                               kernelprompt=$004d
0000 :                               bootcode=$0055
0000 :                               palettetable=$00ba
0000 :                               osxcheckbreak=$00c2
0000 :                               osxcursorget=$00d4
0000 :                               osxgetkeyboard=$0103
0000 :                               osxinputlimit=$0193
0000 :                               osxlineinput=$01e8
0000 :                               osxwaitblitter=$0205
0000 :                               osiclearscreen=$020f
0000 :                               osifillscreen=$0220
0000 :                               osxdrawsolidcharacter=$0241
0000 :                               osxdrawcharacter=$0255
0000 :                               osxprintcharacter=$0282
0000 :                               osxgettextpos=$03a5
0000 :                               osxprintstring=$03aa
0000 :                               osxprintinline=$03b3
0000 :                               osxbeep=$03d5
0000 :                               osxudivide16=$03e9
0000 :                               osxsdivide16=$0403
0000 :                               osxrandom16=$041c
0000 :                               osxstrtoint=$042c
0000 :                               osxinttostr=$046c
0000 :                               osxuppercase=$04b3
0000 :                               osxlowercase=$04c5
0000 :                               osxwordlength=$04d7
0000 :                               keyboardmapping=$04dd
0000 :                               shifttable=$0505
0000 :                               fontdata=$0d00
0000 :                               initialisedstart=$4000
0000 :                               highmemory=$4000
0000 :                               textmemory=$4001
0000 :                               xgraphic=$4002
0000 :                               ygraphic=$4003
0000 :                               colourmask=$4004
0000 :                               fgrcolour=$4005
0000 :                               bgrcolour=$4006
0000 :                               xtextpos=$4007
0000 :                               ytextpos=$4008
0000 :                               currentkey=$4009
0000 :                               currentrowstatus=$400a
0000 :                               keyrepeattime=$400f
0000 :                               initialisedend=$4010
0000 :                               randomseed=$4010
0000 :                               convbuffer=$4011
0000 :                               fontbuffer=$401b
0000 :                               freememory=$4023
0000 :                               tok_and = $2200
0000 :                               tok_or = $2201
0000 :                               tok_xor = $2202
0000 :                               tok_greater = $2403
0000 :                               tok_greaterequal = $2404
0000 :                               tok_less = $2405
0000 :                               tok_lessequal = $2406
0000 :                               tok_equal = $2407
0000 :                               tok_lessgreater = $2408
0000 :                               tok_plus = $2609
0000 :                               tok_minus = $260a
0000 :                               tok_star = $280b
0000 :                               tok_slash = $280c
0000 :                               tok_mod = $280d
0000 :                               tok_pling = $2a0e
0000 :                               tok_lparen = $300f
0000 :                               tok_ampersand = $3010
0000 :                               tok_percent = $3011
0000 :                               tok_vbarconstshift = $3012
0000 :                               tok_abslparen = $3013
0000 :                               tok_asclparen = $3014
0000 :                               tok_chrdollarlparen = $3015
0000 :                               tok_getlparen = $3016
0000 :                               tok_getdollarlparen = $3017
0000 :                               tok_inkeylparen = $3018
0000 :                               tok_inkeydollarlparen = $3019
0000 :                               tok_leftdollarlparen = $301a
0000 :                               tok_lenlparen = $301b
0000 :                               tok_middollarlparen = $301c
0000 :                               tok_peeklparen = $301d
0000 :                               tok_rightdollarlparen = $301e
0000 :                               tok_rndlparen = $301f
0000 :                               tok_sgnlparen = $3020
0000 :                               tok_strdollarlparen = $3021
0000 :                               tok_vallparen = $3022
0000 :                               tok_lengthlparen = $3023
0000 :                               tok_randomlparen = $3024
0000 :                               tok_todotstringdollarlparen = $3025
0000 :                               tok_todotnumberlparen = $3026
0000 :                               tok_signlparen = $3027
0000 :                               tok_rparen = $3228
0000 :                               tok_comma = $3229
0000 :                               tok_semicolon = $322a
0000 :                               tok_to = $322b
0000 :                               tok_step = $322c
0000 :                               tok_for = $3e2d
0000 :                               tok_if = $3e2e
0000 :                               tok_repeat = $3e2f
0000 :                               tok_while = $3e30
0000 :                               tok_proc = $3e31
0000 :                               tok_endif = $3a32
0000 :                               tok_next = $3a33
0000 :                               tok_then = $3a34
0000 :                               tok_until = $3a35
0000 :                               tok_wend = $3a36
0000 :                               tok_endproc = $3a37
0000 :                               tok_quote = $3c38
0000 :                               tok_colon = $3c39
0000 :                               tok_assert = $3c3a
0000 :                               tok_call = $3c3b
0000 :                               tok_clear = $3c3c
0000 :                               tok_dim = $3c3d
0000 :                               tok_else = $3c3e
0000 :                               tok_end = $3c3f
0000 :                               tok_gosub = $3c40
0000 :                               tok_goto = $3c41
0000 :                               tok_input = $3c42
0000 :                               tok_let = $3c43
0000 :                               tok_list = $3c44
0000 :                               tok_load = $3c45
0000 :                               tok_new = $3c46
0000 :                               tok_old = $3c47
0000 :                               tok_poke = $3c48
0000 :                               tok_print = $3c49
0000 :                               tok_rem = $3c4a
0000 :                               tok_return = $3c4b
0000 :                               tok_run = $3c4c
0000 :                               tok_save = $3c4d
0000 :                               tok_stop = $3c4e
0000 :                               tok_sys = $3c4f
0000 :                               maxstringsize = 255
0000 :                               extrastringalloc = 8
0000 :                               hashtablesize = 16
0000 :                               hashtablepower = 4
0000 :                               stacksize = 32
0000 :                               stackelementsize = 3
0000 :                               esvalue1 = 0
0000 :                               estype1 = 1
0000 :                               esreference1 = 2
0000 :                               esvalue2 = 0+stackelementsize
0000 :                               estype2 = 1+stackelementsize
0000 :                               esreference2 = 2+stackelementsize
0000 :                               returnstacksize = 256
0000 :                               stackpossize = 2
0000 :                               indentstep = 2
1000 :                               .coldstart
1000 : 5ce1                          dec  sp
1001 : 2cf0 402b                     stm  sp,#returnstacktop
1003 : 5cf0 0100                     sub  sp,#returnstacksize
1005 : 2cf0 402c                     stm  sp,#returnstackbottom
1007 : 2cf0 4023                     stm  sp,#initialsp
1009 : 00f0 4200                     mov  r0,#freebasiccode
100b : 20f0 4025                     stm  r0,#programcode
100d : 00f0 1023                     mov  r0,#basicprompt
100f : ade8                          jsr  #osprintstring
1010 : 0080                          mov  r0,r8,#0
1011 : 0180                          mov  r1,r8,#0
1012 : 0280                          mov  r2,r8,#0
1013 : 0380                          mov  r3,r8,#0
1014 : aff0 1f4f                     jmp  #testtokeniserroutine
1016 : aff0 1460                     jmp  #runprogram
1018 : adf0 13d3                     jsr  #command_new
101a :                               .warmstart
101a : 1cf0 4023                     ldm  sp,#initialsp
101c : 00f0 0012                     mov  r0,#$12
101e : ade4                          jsr  #osprintcharacter
101f : adee                          .h1  jsr  #oslineinput
1020 : 0000                          break
1021 : aff0 101f                     jmp  #h1
1023 :                               .basicprompt
1023 : 000e 6142 6973 3a63 2020      string "basic[3a]  0.01[0d,0d]"
102b :                               .command_call
102b : 5ce1 2dc0                     push  link
102d : 11f0 4029                     ldm  r1,#proctable
102f :                               ._ccaloop
102f : 1210                          ldm  r2,r1,#0
1030 : 31e1                          inc  r1
1031 : c1e0                          sknz  r1
1032 : aff0 195c                     jmp  #callerror
1034 : 0323                          mov  r3,r2,#3
1035 : 04b0                          mov  r4,r11,#0
1036 :                               ._ccacheck
1036 : 1030                          ldm  r0,r3,#0
1037 : 1540                          ldm  r5,r4,#0
1038 : 33e1                          inc  r3
1039 : 34e1                          inc  r4
103a : 7050                          xor  r0,r5,#0
103b : b0e0                          skz  r0
103c : aff0 102f                     jmp  #_ccaloop
103e : 95ee                          ror  r5,#14
103f : e5e0                          skm  r5
1040 : aff0 1036                     jmp  #_ccacheck
1042 : 0b40                          mov  r11,r4,#0
1043 : adf0 1a3e                     jsr  #stackpushposition
1045 : adf0 1a4f                     jsr  #stackpushmarker
1047 : 0063                          word  'c'
1048 : 0b30                          mov  r11,r3,#0
1049 : 22f0 4024                     stm  r2,#currentline
104b : 1dc0 3ce1                     pop  link
104d : afd0                          ret
104e :                               .command_proc
104e : aff0 18f7                     jmp  #syntaxerror
1050 :                               .command_endproc
1050 : 5ce1 2dc0                     push  link
1052 : adf0 1a5e                     jsr  #stackcheckmarker
1054 : 0063                          word  'c'
1055 : aff0 19bd                     jmp  #endprocerror
1057 : adf0 1a48                     jsr  #stackpopposition
1059 : 00e3                          mov  r0,#1+stackpossize
105a : adf0 1a67                     jsr  #stackpopwords
105c : 1dc0 3ce1                     pop  link
105e : afd0                          ret
105f :                               .scanforprocedures
105f : 12f0 4028                     ldm  r2,#memallocbottom
1061 : 22f0 4029                     stm  r2,#proctable
1063 : 13f0 4025                     ldm  r3,#programcode
1065 :                               ._sfploop
1065 : 1030                          ldm  r0,r3,#0
1066 : c0e0                          sknz  r0
1067 : aff0 1083                     jmp  #_sfpexit
1069 : 1132                          ldm  r1,r3,#2
106a : 71f0 3e31                     xor  r1,#tok_proc
106c : b1e0                          skz  r1
106d : aff0 1080                     jmp  #_sfpnext
106f : 1133                          ldm  r1,r3,#3
1070 : 61f0 c000                     and  r1,#$c000
1072 : 71f0 4000                     xor  r1,#$4000
1074 : b1e0                          skz  r1
1075 : aff0 1080                     jmp  #_sfpnext
1077 : 2320                          stm  r3,r2,#0
1078 : 32e1                          inc  r2
1079 : 0124                          mov  r1,r2,#4
107a : 14f0 4027                     ldm  r4,#memalloctop
107c : 5140                          sub  r1,r4,#0
107d : ffe0                          sklt
107e : aff0 1937                     jmp  #memoryerror
1080 :                               ._sfpnext
1080 : 3300                          add  r3,r0,#0
1081 : aff0 1065                     jmp  #_sfploop
1083 :                               ._sfpexit
1083 : 2e20                          stm  r14,r2,#0
1084 : 32e1                          inc  r2
1085 : 22f0 4028                     stm  r2,#memallocbottom
1087 : afd0                          ret
1088 :                               .command_clear
1088 : 5ce1 2dc0                     push  link
108a : 00c0                          mov  r0,sp,#0
108b : 50f0 0200                     sub  r0,#512
108d : 20f0 4026                     stm  r0,#endmemory
108f : 20f0 4027                     stm   r0,#memalloctop
1091 : adf0 1c4d                     jsr  #varerasehashtables
1093 : 10f0 4025                     ldm  r0,#programcode
1095 :                               ._ccfindend
1095 : 1100                          ldm  r1,r0,#0
1096 : 3010                          add  r0,r1,#0
1097 : b1e0                          skz  r1
1098 : aff0 1095                     jmp  #_ccfindend
109a : 30e1                          inc  r0
109b : 20f0 4028                     stm  r0,#memallocbottom
109d : adf0 1a38                     jsr  #stackreset
109f : adf0 105f                     jsr  #scanforprocedures
10a1 : 1dc0 3ce1                     pop  link
10a3 : afd0                          ret
10a4 :                               .command_dim
10a4 : 5ce1 2dc0                     push  link
10a6 :                               ._cdinextarray
10a6 : 10b0                          ldm  r0,r11,#0
10a7 : 90ec                          ror  r0,#12
10a8 : e0e0                          skm  r0
10a9 : aff0 18f7                     jmp  #syntaxerror
10ab : adf0 1c9b                     jsr  #findvariable
10ad : b0e0                          skz  r0
10ae : aff0 1953                     jmp  #arrayexistserror
10b0 : 07b0                          mov  r7,r11,#0
10b1 :                               ._cdiadvance
10b1 : 11b0                          ldm  r1,r11,#0
10b2 : 0210                          mov  r2,r1,#0
10b3 : 3be1                          inc  r11
10b4 : 91ee                          ror  r1,#14
10b5 : e1e0                          skm  r1
10b6 : aff0 10b1                     jmp  #_cdiadvance
10b8 : adf0 16d0                     jsr  #evaluateinteger
10ba : 0500                          mov  r5,r0,#0
10bb : 7880                          clr  r8
10bc : 10b0                          ldm  r0,r11,#0
10bd : 70f0 3229                     xor  r0,#tok_comma
10bf : b0e0                          skz  r0
10c0 : aff0 10c9                     jmp  #_cdihavedimension
10c2 : 3be1                          inc  r11
10c3 : adf0 16d0                     jsr  #evaluateinteger
10c5 : 0800                          mov  r8,r0,#0
10c6 : c8e0                          sknz  r8
10c7 : aff0 1927                     jmp  #badnumbererror
10c9 :                               ._cdihavedimension
10c9 : adf0 18b8                     jsr  #checkrightbracket
10cb : 0051                          mov  r0,r5,#1
10cc : 0181                          mov  r1,r8,#1
10cd : 8010                          mult  r0,r1,#0
10ce : ffe0                          sknc
10cf : aff0 1927                     jmp  #badnumbererror
10d1 : 0400                          mov  r4,r0,#0
10d2 : 30e4                          add  r0,#4
10d3 : 5ce1 2bc0                     push  r11
10d5 : 0b70                          mov  r11,r7,#0
10d6 : adf0 1cc3                     jsr  #createvariablerecord
10d8 : 1bc0 3ce1                     pop  r11
10da : 0104                          mov  r1,r0,#4
10db : 1202                          ldm  r2,r0,#2
10dc :                               ._cdifill
10dc : 2210                          stm  r2,r1,#0
10dd : 31e1                          inc  r1
10de : 54e1                          dec  r4
10df : b4e0                          skz  r4
10e0 : aff0 10dc                     jmp  #_cdifill
10e2 : 2502                          stm  r5,r0,#2
10e3 : 2803                          stm  r8,r0,#3
10e4 : 10b0                          ldm  r0,r11,#0
10e5 : 3be1                          inc  r11
10e6 : 70f0 3229                     xor  r0,#tok_comma
10e8 : c0e0                          sknz  r0
10e9 : aff0 10a6                     jmp  #_cdinextarray
10eb : 5be1                          dec  r11
10ec : 1dc0 3ce1                     pop  link
10ee : afd0                          ret
10ef :                               .command_for
10ef : 5ce1 2dc0                     push  link
10f1 : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
10f3 : adf0 162a                     jsr  #evaluator
10f5 : 10a2                          ldm  r0,r10,#esreference1
10f6 : c0e0                          sknz  r0
10f7 : aff0 18fd                     jmp   #typemismatcherror
10f9 : 10a1                          ldm  r0,r10,#estype1
10fa : b0e0                          skz  r0
10fb : aff0 18fd                     jmp   #typemismatcherror
10fd : 10a0                          ldm  r0,r10,#esvalue1
10fe : 0100                          mov  r1,r0,#0
10ff : adf0 1a6d                     jsr  #stackpushr0
1101 : 00f0 2407                     mov  r0,#tok_equal
1103 : adf0 18ad                     jsr  #checknexttoken
1105 : adf0 16d0                     jsr  #evaluateinteger
1107 : 2010                          stm  r0,r1,#0
1108 : 00f0 322b                     mov  r0,#tok_to
110a : adf0 18ad                     jsr  #checknexttoken
110c : adf0 16d0                     jsr  #evaluateinteger
110e : adf0 1a6d                     jsr  #stackpushr0
1110 : 11b0                          ldm  r1,r11,#0
1111 : 71f0 322c                     xor  r1,#tok_step
1113 : 00e1                          mov  r0,#1
1114 : b1e0                          skz  r1
1115 : aff0 111a                     jmp  #_cfhavestep
1117 : 3be1                          inc  r11
1118 : adf0 16d0                     jsr  #evaluateinteger
111a :                               ._cfhavestep
111a : adf0 1a6d                     jsr  #stackpushr0
111c : adf0 1a3e                     jsr  #stackpushposition
111e : adf0 1a4f                     jsr  #stackpushmarker
1120 : 0066                          word  'f'
1121 : 1dc0 3ce1                     pop  link
1123 : afd0                          ret
1124 :                               .command_next
1124 : 5ce1 2dc0                     push  link
1126 : adf0 1a5e                     jsr  #stackcheckmarker
1128 : 0066                          word  'f'
1129 : aff0 19ca                     jmp  #nexterror
112b : 12f0 402d                     ldm  r2,#returnstackptr
112d : 10b0                          ldm  r0,r11,#0
112e : 60f0 c000                     and  r0,#$c000
1130 : 70f0 4000                     xor  r0,#$4000
1132 : b0e0                          skz  r0
1133 : aff0 113f                     jmp  #_cndefaultidentifier
1135 : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
1137 : adf0 162a                     jsr  #evaluator
1139 : 13a0                          ldm  r3,r10,#esvalue1
113a : 1125                          ldm  r1,r2,#stackpossize+3
113b : 7130                          xor  r1,r3,#0
113c : b1e0                          skz  r1
113d : aff0 192f                     jmp  #badindexerror
113f :                               ._cndefaultidentifier
113f : 1325                          ldm  r3,r2,#stackpossize+3
1140 : 1424                          ldm  r4,r2,#stackpossize+2
1141 : 1530                          ldm  r5,r3,#0
1142 : 1623                          ldm  r6,r2,#stackpossize+1
1143 : d6e0                          skp  r6
1144 : 54e1                          dec  r4
1145 : 0140                          mov  r1,r4,#0
1146 : 1530                          ldm  r5,r3,#0
1147 : 5150                          sub  r1,r5,#0
1148 : 3560                          add  r5,r6,#0
1149 : 2530                          stm  r5,r3,#0
114a : 5450                          sub  r4,r5,#0
114b : d410                          skse  r4,r1,#0
114c : aff0 1153                     jmp  #_cnendloop
114e :                               ._cnloop
114e : adf0 1a48                     jsr  #stackpopposition
1150 : 1dc0 3ce1                     pop  link
1152 : afd0                          ret
1153 :                               ._cnendloop
1153 : 00e6                          mov  r0,#4+stackpossize
1154 : adf0 1a67                     jsr  #stackpopwords
1156 : 1dc0 3ce1                     pop  link
1158 : afd0                          ret
1159 :                               .command_if
1159 : 5ce1 2dc0                     push  link
115b : adf0 16d0                     jsr  #evaluateinteger
115d : 11b0                          ldm  r1,r11,#0
115e : 71f0 3a34                     xor  r1,#tok_then
1160 : b1e0                          skz  r1
1161 : aff0 116f                     jmp  #_cifmultiline
1163 : 3be1                          inc  r11
1164 : b0e0                          skz  r0
1165 : aff0 116c                     jmp  #_cifexit
1167 : 1bf0 4024                     ldm  r11,#currentline
1169 : 10b0                          ldm  r0,r11,#0
116a : 3b00                          add  r11,r0,#0
116b : 5be1                          dec  r11
116c :                               ._cifexit
116c : 1dc0 3ce1                     pop  link
116e : afd0                          ret
116f :                               ._cifmultiline
116f : c0e0                          sknz  r0
1170 : aff0 1178                     jmp  #_cifmultiline_false
1172 : adf0 1a4f                     jsr  #stackpushmarker
1174 : 0069                          word  'i'
1175 : 1dc0 3ce1                     pop  link
1177 : afd0                          ret
1178 :                               ._cifmultiline_false
1178 : 00f0 3c3e                     mov  r0,#tok_else
117a : 01f0 3a32                     mov  r1,#tok_endif
117c : adf0 19fa                     jsr  #skipstructure
117e : 5be1                          dec  r11
117f : 10b0                          ldm  r0,r11,#0
1180 : 3be1                          inc  r11
1181 : 70f0 3a32                     xor  r0,#tok_endif
1183 : c0e0                          sknz  r0
1184 : aff0 116c                     jmp  #_cifexit
1186 : adf0 1a4f                     jsr  #stackpushmarker
1188 : 0069                          word  'i'
1189 : 1dc0 3ce1                     pop  link
118b : afd0                          ret
118c :                               .command_else
118c : 5ce1 2dc0                     push  link
118e : adf0 1a5e                     jsr  #stackcheckmarker
1190 : 0069                          word  'i'
1191 : aff0 19a7                     jmp  #elseerror
1193 : 00e1                          mov  r0,#1
1194 : adf0 1a67                     jsr  #stackpopwords
1196 : 00f0 3a32                     mov  r0,#tok_endif
1198 : 0100                          mov  r1,r0,#0
1199 : adf0 19fa                     jsr  #skipstructure
119b : 1dc0 3ce1                     pop  link
119d : afd0                          ret
119e :                               .command_endif
119e : 5ce1 2dc0                     push  link
11a0 : adf0 1a5e                     jsr  #stackcheckmarker
11a2 : 0069                          word  'i'
11a3 : aff0 19b2                     jmp  #endiferror
11a5 : 00e1                          mov  r0,#1
11a6 : adf0 1a67                     jsr  #stackpopwords
11a8 : 1dc0 3ce1                     pop  link
11aa : afd0                          ret
11ab :                               .command_input
11ab : 5ce1 2dc0                     push  link
11ad : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
11af : adf0 162a                     jsr  #evaluator
11b1 : 10a2                          ldm  r0,r10,#esreference1
11b2 : c0e0                          sknz  r0
11b3 : aff0 18f7                     jmp  #syntaxerror
11b5 :                               ._cinget
11b5 : adf0 0014                     jsr  #osgettextpos
11b7 : 01f0 0028                     mov  r1,#charwidth
11b9 : 5100                          sub  r1,r0,#0
11ba : 00f0 41e9                     mov  r0,#inputbuffer
11bc : adf0 0010                     jsr  #osinputlimit
11be : 11a1                          ldm  r1,r10,#estype1
11bf : b1e0                          skz  r1
11c0 : aff0 11d2                     jmp  #_cinstring
11c2 : 01ea                          mov  r1,#10
11c3 : adf0 184e                     jsr  #compactstringtointeger
11c5 : b1e0                          skz  r1
11c6 : aff0 11cd                     jmp  #_cinbadinput
11c8 : 11a0                          ldm  r1,r10,#esvalue1
11c9 : 2010                          stm  r0,r1,#0
11ca : 1dc0 3ce1                     pop  link
11cc : afd0                          ret
11cd :                               ._cinbadinput
11cd : ade6                          jsr  #osprintinline
11ce : 0002 3f3f                     string "??"
11d0 : aff0 11b5                     jmp  #_cinget
11d2 :                               ._cinstring
11d2 : 11a0                          ldm  r1,r10,#esvalue1
11d3 : adf0 1a90                     jsr  #stringassign
11d5 : 1dc0 3ce1                     pop  link
11d7 : afd0                          ret
11d8 :                               .command_let
11d8 : 5ce2 29c0 2dc1                push  r9,link
11db : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
11dd : adf0 162a                     jsr  #evaluator
11df : 10a2                          ldm  r0,r10,#esreference1
11e0 : c0e0                          sknz  r0
11e1 : aff0 18f7                     jmp  #syntaxerror
11e3 : 00f0 2407                     mov  r0,#tok_equal
11e5 : adf0 18ad                     jsr  #checknexttoken
11e7 : 10a1                          ldm  r0,r10,#estype1
11e8 : b0e0                          skz  r0
11e9 : aff0 11f3                     jmp  #_clstring
11eb : 11a0                          ldm  r1,r10,#esvalue1
11ec : adf0 16d0                     jsr  #evaluateinteger
11ee : 2010                          stm  r0,r1,#0
11ef : 19c0 1dc1 3ce2                pop  r9,link
11f2 : afd0                          ret
11f3 :                               ._clstring
11f3 : 11a0                          ldm  r1,r10,#esvalue1
11f4 : adf0 16c6                     jsr  #evaluatestring
11f6 : adf0 1a90                     jsr  #stringassign
11f8 : 19c0 1dc1 3ce2                pop  r9,link
11fb : afd0                          ret
11fc :                               .command_list
11fc : 00ec                          mov  r0,#12
11fd : ade4                          jsr  #osprintcharacter
11fe : 7660                          clr  r6
11ff : 7770                          clr  r7
1200 : 08ea                          mov  r8,#10
1201 : 10b0                          ldm  r0,r11,#0
1202 : c0e0                          sknz  r0
1203 : aff0 120d                     jmp  #_clhaveline
1205 : 70f0 3c39                     xor  r0,#tok_colon
1207 : c0e0                          sknz  r0
1208 : aff0 120d                     jmp  #_clhaveline
120a : adf0 16d0                     jsr  #evaluateinteger
120c : 0600                          mov  r6,r0,#0
120d :                               ._clhaveline
120d : 1bf0 4025                     ldm  r11,#programcode
120f :                               ._cllistloop
120f : adf0 0014                     jsr  #osgettextpos
1211 : 51f0 001a                     sub  r1,#charheight-4
1213 : ffe0                          sklt
1214 : aff0 101a                     jmp  #warmstart
1216 : 10b0                          ldm  r0,r11,#0
1217 : c0e0                          sknz  r0
1218 : aff0 101a                     jmp  #warmstart
121a : 10b1                          ldm  r0,r11,#1
121b : d0e0                          skp  r0
121c : aff0 1222                     jmp  #_cllistnextline
121e : 5060                          sub  r0,r6,#0
121f : ffe0                          sklt
1220 : adf0 1226                     jsr  #listoneline
1222 :                               ._cllistnextline
1222 : 10b0                          ldm  r0,r11,#0
1223 : 3b00                          add  r11,r0,#0
1224 : aff0 120f                     jmp  #_cllistloop
1226 :                               .listoneline
1226 : 5ce4 26c0 2ac1 2bc2 2dc3      push  r6,r10,r11,link
122b : 0ab0                          mov  r10,r11,#0
122c : 00f0 fffe                     mov  r0,#-indentstep
122e : 01f0 1a00                     mov  r1,#13<<9
1230 : adf0 12d7                     jsr  #listcheckadjustindent
1232 : 00f0 0012                     mov  r0,#theme_line+$10
1234 : ade4                          jsr  #osprintcharacter
1235 : 10b1                          ldm  r0,r11,#1
1236 : 01ea                          mov  r1,#10
1237 : adf0 0024                     jsr  #osinttostr
1239 : ade8                          jsr  #osprintstring
123a : 1000                          ldm  r0,r0,#0
123b : 01e6                          mov  r1,#6
123c : e7e0                          skm  r7
123d : 3170                          add  r1,r7,#0
123e : 5100                          sub  r1,r0,#0
123f :                               ._lolspacing
123f : 00f0 0020                     mov  r0,#$20
1241 : ade4                          jsr  #osprintcharacter
1242 : 51e1                          dec  r1
1243 : b1e0                          skz  r1
1244 : aff0 123f                     jmp  #_lolspacing
1246 : 3be2                          add  r11,#2
1247 : 7880                          clr  r8
1248 : 2ef0 402e                     stm  r14,#lastlisttoken
124a :                               ._lolloop
124a : 10b0                          ldm  r0,r11,#0
124b : c0e0                          sknz  r0
124c : aff0 1252                     jmp  #_lolexit
124e : adf0 1261                     jsr  #decodetoken
1250 : aff0 124a                     jmp  #_lolloop
1252 :                               ._lolexit
1252 : 00ed                          mov  r0,#13
1253 : ade4                          jsr  #osprintcharacter
1254 : 00e2                          mov  r0,#indentstep
1255 : 01f0 1e00                     mov  r1,#15<<9
1257 : adf0 12d7                     jsr  #listcheckadjustindent
1259 : d7e0                          skp  r7
125a : 7770                          clr  r7
125b : 16c0 1ac1 1bc2 1dc3 3ce4      pop  r6,r10,r11,link
1260 : afd0                          ret
1261 :                               .decodetoken
1261 : 5ce1 2dc0                     push  link
1263 : 7990                          clr  r9
1264 : 10b0                          ldm  r0,r11,#0
1265 : 5ce1 20c0                     push  r0
1267 : 01f0 8000                     mov  r1,#$8000
1269 : 10b0                          ldm  r0,r11,#0
126a : d0e0                          skp  r0
126b : aff0 1274                     jmp  #_dtdigit
126d : 70f0 3012                     xor  r0,#tok_vbarconstshift
126f : b0e0                          skz  r0
1270 : aff0 128b                     jmp  #_dtnotconstant
1272 : 7110                          clr  r1
1273 : 3be1                          inc  r11
1274 :                               ._dtdigit
1274 : 00f0 0011                     mov  r0,#theme_const+$10
1276 : ade4                          jsr  #osprintcharacter
1277 : 10b0                          ldm  r0,r11,#0
1278 : 3be1                          inc  r11
1279 : 7010                          xor  r0,r1,#0
127a : 01ea                          mov  r1,#10
127b : 12f0 402e                     ldm  r2,#lastlisttoken
127d : 72f0 3011                     xor  r2,#tok_percent
127f : c2e0                          sknz  r2
1280 : 01e2                          mov  r1,#2
1281 : 72e1                          xor  r2,#tok_percent^tok_ampersand
1282 : c2e0                          sknz  r2
1283 : 01f0 0010                     mov  r1,#16
1285 : adf0 0024                     jsr  #osinttostr
1287 : adf0 1326                     jsr  #listprintstring
1289 : aff0 12d0                     jmp  #_dtexit
128b :                               ._dtnotconstant
128b : 10b0                          ldm  r0,r11,#0
128c : 60f0 ff00                     and  r0,#$ff00
128e : 70f0 0100                     xor  r0,#$0100
1290 : b0e0                          skz  r0
1291 : aff0 12a7                     jmp  #_dtnotstring
1293 : 00f0 0015                     mov  r0,#theme_string+$10
1295 : ade4                          jsr  #osprintcharacter
1296 : 00f0 0022                     mov  r0,#'"'
1298 : adf0 1305                     jsr  #listprintcharacter
129a : 00b1                          mov  r0,r11,#1
129b : adf0 1326                     jsr  #listprintstring
129d : 00f0 0022                     mov  r0,#'"'
129f : adf0 1305                     jsr  #listprintcharacter
12a1 : 10b0                          ldm  r0,r11,#0
12a2 : 60f0 00ff                     and  r0,#$00ff
12a4 : 3b00                          add  r11,r0,#0
12a5 : aff0 12d0                     jmp  #_dtexit
12a7 :                               ._dtnotstring
12a7 : 10b0                          ldm  r0,r11,#0
12a8 : 3000                          add  r0,r0,#0
12a9 : e0e0                          skm  r0
12aa : aff0 12b5                     jmp  #_dtistoken
12ac : 00f0 0013                     mov  r0,#theme_ident+$10
12ae : ade4                          jsr  #osprintcharacter
12af : 00b0                          mov  r0,r11,#0
12b0 : adf0 1342                     jsr  #listprintencodedidentifier
12b2 : 0b00                          mov  r11,r0,#0
12b3 : aff0 12d0                     jmp  #_dtexit
12b5 :                               ._dtistoken
12b5 : 00f0 0016                     mov  r0,#theme_keyword+$10
12b7 : ade4                          jsr  #osprintcharacter
12b8 : 11b0                          ldm  r1,r11,#0
12b9 : 61f0 01ff                     and  r1,#$01ff
12bb : 02f0 1d14                     mov  r2,#tokeniserwords
12bd :                               ._dtfindtoken
12bd : c1e0                          sknz  r1
12be : aff0 12c7                     jmp  #_dthavetoken
12c0 : 51e1                          dec  r1
12c1 : 1020                          ldm  r0,r2,#0
12c2 : 60f0 00ff                     and  r0,#$00ff
12c4 : 3201                          add  r2,r0,#1
12c5 : aff0 12bd                     jmp  #_dtfindtoken
12c7 :                               ._dthavetoken
12c7 : 0021                          mov  r0,r2,#1
12c8 : 1300                          ldm  r3,r0,#0
12c9 : e3e0                          skm  r3
12ca : adf0 1342                     jsr  #listprintencodedidentifier
12cc : d3e0                          skp  r3
12cd : adf0 1393                     jsr  #listprintpunctuation
12cf : 3be1                          inc  r11
12d0 :                               ._dtexit
12d0 : 10c0 3ce1                     pop  r0
12d2 : 20f0 402e                     stm  r0,#lastlisttoken
12d4 : 1dc0 3ce1                     pop  link
12d6 : afd0                          ret
12d7 :                               .listcheckadjustindent
12d7 : 5ce4 20c0 21c1 22c2 2ac3      push  r0,r1,r2,r10
12dc : 3ae1                          inc  r10
12dd :                               ._lcailoop
12dd : 3ae1                          inc  r10
12de :                               ._lcailoopnoinc
12de : 12a0                          ldm  r2,r10,#0
12df : c2e0                          sknz  r2
12e0 : aff0 12ff                     jmp  #_lcaiexit
12e2 : 62f0 ff00                     and  r2,#$ff00
12e4 : 72f0 0100                     xor  r2,#$0100
12e6 : c2e0                          sknz  r2
12e7 : aff0 12f9                     jmp  #_lcaistringskip
12e9 : 12a0                          ldm  r2,r10,#0
12ea : 62f0 e000                     and  r2,#$e000
12ec : 72f0 2000                     xor  r2,#$2000
12ee : b2e0                          skz  r2
12ef : aff0 12dd                     jmp  #_lcailoop
12f1 : 12a0                          ldm  r2,r10,#0
12f2 : 62f0 1e00                     and  r2,#15<<9
12f4 : 7210                          xor  r2,r1,#0
12f5 : c2e0                          sknz  r2
12f6 : 3700                          add  r7,r0,#0
12f7 : aff0 12dd                     jmp  #_lcailoop
12f9 :                               ._lcaistringskip
12f9 : 12a0                          ldm  r2,r10,#0
12fa : 62f0 00ff                     and  r2,#$00ff
12fc : 3a20                          add  r10,r2,#0
12fd : aff0 12de                     jmp  #_lcailoopnoinc
12ff :                               ._lcaiexit
12ff : 10c0 11c1 12c2 1ac3 3ce4      pop  r0,r1,r2,r10
1304 : afd0                          ret
1305 :                               .listprintcharacter
1305 : 60f0 007f                     and  r0,#$007f
1307 : c0e0                          sknz  r0
1308 : afd0                          ret
1309 : 5ce3 26c0 27c1 2dc2           push  r6,r7,link
130d : 0600                          mov  r6,r0,#0
130e : adf0 18d0                     jsr  #getcharactertype
1310 : 0700                          mov  r7,r0,#0
1311 : b9e0                          skz  r9
1312 : aff0 131d                     jmp  #_lpcprint
1314 : c7e0                          sknz  r7
1315 : aff0 131d                     jmp  #_lpcprint
1317 : c8e0                          sknz  r8
1318 : aff0 131d                     jmp  #_lpcprint
131a : 00f0 0020                     mov  r0,#' '
131c : ade4                          jsr  #osprintcharacter
131d :                               ._lpcprint
131d : 0870                          mov  r8,r7,#0
131e : 39e1                          inc  r9
131f : 0060                          mov  r0,r6,#0
1320 : ade4                          jsr  #osprintcharacter
1321 : 16c0 17c1 1dc2 3ce3           pop  r6,r7,link
1325 : afd0                          ret
1326 :                               .listprintstring
1326 : 5ce3 21c0 22c1 2dc2           push  r1,r2,link
132a : 0101                          mov  r1,r0,#1
132b : adf0 002a                     jsr  #oswordlength
132d : 0200                          mov  r2,r0,#0
132e :                               ._lpsloop
132e : c2e0                          sknz  r2
132f : aff0 133c                     jmp  #_lpsexit
1331 : 1010                          ldm  r0,r1,#0
1332 : adf0 1305                     jsr  #listprintcharacter
1334 : 1010                          ldm  r0,r1,#0
1335 : 90e8                          ror  r0,#8
1336 : adf0 1305                     jsr  #listprintcharacter
1338 : 31e1                          inc  r1
1339 : 52e1                          dec  r2
133a : aff0 132e                     jmp  #_lpsloop
133c :                               ._lpsexit
133c : 0010                          mov  r0,r1,#0
133d : 11c0 12c1 1dc2 3ce3           pop  r1,r2,link
1341 : afd0                          ret
1342 :                               .listprintencodedidentifier
1342 : 5ce2 21c0 2dc1                push  r1,link
1345 :                               ._lpeiloop
1345 : 1100                          ldm  r1,r0,#0
1346 : adf0 1362                     jsr  #_lpeiprintidentifier
1348 : 1100                          ldm  r1,r0,#0
1349 : 30e1                          inc  r0
134a : 91ee                          ror  r1,#14
134b : e1e0                          skm  r1
134c : aff0 1345                     jmp  #_lpeiloop
134e : 5ce1 20c0                     push  r0
1350 : 3110                          add  r1,r1,#0
1351 : 00f0 0024                     mov  r0,#'$'
1353 : d1e0                          skp  r1
1354 : adf0 1305                     jsr  #listprintcharacter
1356 : 3110                          add  r1,r1,#0
1357 : 00f0 0028                     mov  r0,#'('
1359 : d1e0                          skp  r1
135a : adf0 1305                     jsr  #listprintcharacter
135c : 10c0 3ce1                     pop  r0
135e : 11c0 1dc1 3ce2                pop  r1,link
1361 : afd0                          ret
1362 :                               ._lpeiprintidentifier
1362 : 5ce2 20c0 2dc1                push  r0,link
1365 : 61f0 07ff                     and  r1,#$07ff
1367 : 7000                          clr  r0
1368 :                               ._lpeidivide
1368 : 51f0 0028                     sub  r1,#40
136a : 30e1                          inc  r0
136b : e1e0                          skm  r1
136c : aff0 1368                     jmp  #_lpeidivide
136e : 50e1                          dec  r0
136f : 31f0 0028                     add  r1,#40
1371 : b1e0                          skz  r1
1372 : adf0 137c                     jsr  #_lpeiprintr1
1374 : 0100                          mov  r1,r0,#0
1375 : b1e0                          skz  r1
1376 : adf0 137c                     jsr  #_lpeiprintr1
1378 : 10c0 1dc1 3ce2                pop  r0,link
137b : afd0                          ret
137c :                               ._lpeiprintr1
137c : 5ce2 20c0 2dc1                push r0,link
137f : 0010                          mov  r0,r1,#0
1380 : 30f0 0060                     add  r0,#96
1382 : 51f0 001b                     sub  r1,#27
1384 : ffe1                          skge
1385 : aff0 138d                     jmp  #_lpeiprint
1387 : 30f0 ffb5                     add  r0,#48-26-97
1389 : 51ea                          sub  r1,#10
138a : ffe0                          sklt
138b : 00f0 002e                     mov  r0,#'.'
138d :                               ._lpeiprint
138d : adf0 1305                     jsr  #listprintcharacter
138f : 10c0 1dc1 3ce2                pop  r0,link
1392 : afd0                          ret
1393 :                               .listprintpunctuation
1393 : 5ce3 20c0 21c1 2dc2           push  r0,r1,link
1397 : 0100                          mov  r1,r0,#0
1398 : 00f0 0012                     mov  r0,#theme_punc+$10
139a : ade4                          jsr  #osprintcharacter
139b : 1010                          ldm  r0,r1,#0
139c : adf0 1305                     jsr  #listprintcharacter
139e : 1010                          ldm  r0,r1,#0
139f : 90e8                          ror  r0,#8
13a0 : adf0 1305                     jsr  #listprintcharacter
13a2 : 10c0 11c1 1dc2 3ce3           pop  r0,r1,link
13a6 : afd0                          ret
13a7 :                               .commandassert
13a7 : 01d0                          mov  r1,link,#0
13a8 : adf0 16d0                     jsr  #evaluateinteger
13aa : c0e0                          sknz  r0
13ab : aff0 1910                     jmp  #asserterror
13ad : 0d10                          mov  link,r1,#0
13ae : afd0                          ret
13af :                               .commandpoke
13af : 5ce1 2dc0                     push  link
13b1 : adf0 16d0                     jsr  #evaluateinteger
13b3 : 0100                          mov  r1,r0,#0
13b4 : adf0 18c4                     jsr  #checkcomma
13b6 : adf0 16d0                     jsr  #evaluateinteger
13b8 : 2010                          stm  r0,r1,#0
13b9 : 1dc0 3ce1                     pop  link
13bb : afd0                          ret
13bc :                               .commandsys
13bc : 5ce1 2dc0                     push  link
13be : adf0 16d0                     jsr  #evaluateinteger
13c0 : 0100                          mov  r1,r0,#0
13c1 : 00f0 408f                     mov  r0,#fixedvariables
13c3 : ad10                          brl  link,r1,#0
13c4 : 1dc0 3ce1                     pop  link
13c6 : afd0                          ret
13c7 :                               .commentcommand1
13c7 :                               .commentcommand2
13c7 : 10b0                          ldm  r0,r11,#0
13c8 : 0100                          mov  r1,r0,#0
13c9 : 61f0 00ff                     and  r1,#$00ff
13cb : 60f0 ff00                     and  r0,#$ff00
13cd : 70f0 0100                     xor  r0,#$0100
13cf : c0e0                          sknz  r0
13d0 : 3b10                          add  r11,r1,#0
13d1 : afd0                          ret
13d2 :                               .colonhandler
13d2 : afd0                          ret
13d3 :                               .dummy1
13d3 :                               .dummy2
13d3 :                               .dummy3
13d3 :                               .dummy4
13d3 :                               .dummy5
13d3 :                               .dummy6
13d3 :                               .command_new
13d3 : 10f0 4025                     ldm  r0,#programcode
13d5 : 2e00                          stm  r14,r0,#0
13d6 : adf0 1088                     jsr  #command_clear
13d8 : aff0 101a                     jmp  #warmstart
13da :                               .command_old
13da : 10f0 4025                     ldm  r0,#programcode
13dc : 0200                          mov  r2,r0,#0
13dd : 30e1                          inc  r0
13de :                               ._conext
13de : 30e1                          inc  r0
13df :                               ._conext2
13df : 1100                          ldm  r1,r0,#0
13e0 : c1e0                          sknz  r1
13e1 : aff0 13f0                     jmp  #_cofoundend
13e3 : 61f0 ff00                     and  r1,#$ff00
13e5 : 71f0 0100                     xor  r1,#$0100
13e7 : b1e0                          skz  r1
13e8 : aff0 13de                     jmp  #_conext
13ea : 1100                          ldm  r1,r0,#0
13eb : 61f0 00ff                     and  r1,#$00ff
13ed : 3010                          add  r0,r1,#0
13ee : aff0 13df                     jmp  #_conext2
13f0 :                               ._cofoundend
13f0 : 0000                          break
13f1 : 5020                          sub  r0,r2,#0
13f2 : 30e1                          inc  r0
13f3 : 2020                          stm  r0,r2,#0
13f4 : adf0 1088                     jsr  #command_clear
13f6 : aff0 101a                     jmp  #warmstart
13f8 :                               .command_print
13f8 : 5ce1 2dc0                     push  link
13fa :                               ._cprloop
13fa : 10b0                          ldm  r0,r11,#0
13fb : c0e0                          sknz r0
13fc : aff0 143a                     jmp  #_cprexitcr
13fe : 70f0 3c39                     xor  r0,#tok_colon
1400 : c0e0                          sknz  r0
1401 : aff0 143a                     jmp  #_cprexitcr
1403 : 3be1                          inc  r11
1404 : 70f0 0e13                     xor  r0,#tok_semicolon^tok_colon
1406 : c0e0                          sknz  r0
1407 : aff0 142f                     jmp  #_cprsemicolon
1409 : 70e3                          xor  r0,#tok_semicolon^tok_comma
140a : c0e0                          sknz  r0
140b : aff0 142d                     jmp  #_cprtab
140d : 70f0 0e11                     xor  r0,#tok_comma^tok_quote
140f : c0e0                          sknz  r0
1410 : aff0 1429                     jmp  #_cprnewline
1412 : 5be1                          dec  r11
1413 : adf0 1620                     jsr  #evaluateexpression
1415 : 10a0                          ldm  r0,r10,#esvalue1
1416 : 12a2                          ldm  r2,r10,#esreference1
1417 : b2e0                          skz  r2
1418 : 1000                          ldm  r0,r0,#0
1419 : 12a1                          ldm  r2,r10,#estype1
141a : b2e0                          skz  r2
141b : aff0 1426                     jmp  #_cprprintstr
141d : 0200                          mov  r2,r0,#0
141e : 00f0 0020                     mov  r0,#' '
1420 : ade4                          jsr  #osprintcharacter
1421 : 0020                          mov  r0,r2,#0
1422 : 01f0 800a                     mov  r1,#$800a
1424 : adf0 0024                     jsr  #osinttostr
1426 :                               ._cprprintstr
1426 : ade8                          jsr  #osprintstring
1427 : aff0 13fa                     jmp  #_cprloop
1429 :                               ._cprnewline
1429 : 00ed                          mov  r0,#13
142a : ade4                          jsr  #osprintcharacter
142b : aff0 13fa                     jmp  #_cprloop
142d :                               ._cprtab
142d : 00e9                          mov  r0,#9
142e : ade4                          jsr  #osprintcharacter
142f :                               ._cprsemicolon
142f : 10b0                          ldm  r0,r11,#0
1430 : c0e0                          sknz r0
1431 : aff0 143c                     jmp  #_cprexit
1433 : 70f0 3c39                     xor  r0,#tok_colon
1435 : c0e0                          sknz  r0
1436 : aff0 143c                     jmp  #_cprexit
1438 : aff0 13fa                     jmp  #_cprloop
143a :                               ._cprexitcr
143a : 00ed                          mov  r0,#13
143b : ade4                          jsr  #osprintcharacter
143c :                               ._cprexit
143c : 1dc0 3ce1                     pop  link
143e : afd0                          ret
143f :                               .command_repeat
143f : 5ce1 2dc0                     push  link
1441 : adf0 1a3e                     jsr  #stackpushposition
1443 : adf0 1a4f                     jsr  #stackpushmarker
1445 : 0072                          word  'r'
1446 : 1dc0 3ce1                     pop  link
1448 : afd0                          ret
1449 :                               .command_until
1449 : 5ce1 2dc0                     push  link
144b : adf0 1a5e                     jsr  #stackcheckmarker
144d : 0072                          word  'r'
144e : aff0 198e                     jmp  #untilerror
1450 : adf0 16d0                     jsr  #evaluateinteger
1452 : b0e0                          skz  r0
1453 : aff0 145a                     jmp  #_crpassed
1455 : adf0 1a48                     jsr  #stackpopposition
1457 : 1dc0 3ce1                     pop  link
1459 : afd0                          ret
145a :                               ._crpassed
145a : 00e3                          mov  r0,#1+stackpossize
145b : adf0 1a67                     jsr  #stackpopwords
145d : 1dc0 3ce1                     pop  link
145f : afd0                          ret
1460 :                               .runprogram
1460 : 1cf0 4023                     ldm  sp,#initialsp
1462 : 0af0 402f                     mov  r10,#evalstack
1464 : adf0 1088                     jsr  #command_clear
1466 : 00f0 0017                     mov  r0,#$17
1468 : ade4                          jsr  #osprintcharacter
1469 : 1bf0 4025                     ldm  r11,#programcode
146b :                               ._rpnewline
146b : 2bf0 4024                     stm  r11,#currentline
146d : 10b0                          ldm  r0,r11,#0
146e : c0e0                          sknz  r0
146f : aff0 101a                     jmp  #warmstart
1471 : 3be2                          add  r11,#2
1472 :                               ._rpnewcommand
1472 : adf0 002c                     jsr  #osmanager
1474 : 2ef0 402a                     stm  r14,#tempstringalloc
1476 : 10b0                          ldm  r0,r11,#0
1477 : 0100                          mov  r1,r0,#0
1478 : 3be1                          inc  r11
1479 : 60f0 f800                     and  r0,#$f800
147b : 70f0 3800                     xor  r0,#$3800
147d : b0e0                          skz  r0
147e : aff0 1488                     jmp  #_rpnotcommandtoken
1480 : 61f0 01ff                     and  r1,#$01ff
1482 : 31f0 1e05                     add  r1,#tokenvectors
1484 : 1010                          ldm  r0,r1,#0
1485 : ad00                          brl  link,r0,#0
1486 : aff0 1472                     jmp  #_rpnewcommand
1488 :                               ._rpnotcommandtoken
1488 : c1e0                          sknz  r1
1489 : aff0 146b                     jmp  #_rpnewline
148b : 5be1                          dec  r11
148c : 10b0                          ldm  r0,r11,#0
148d : 70f0 2a0e                     xor  r0,#tok_pling
148f : c0e0                          sknz  r0
1490 : aff0 149a                     jmp  #_rpdolet
1492 : 10b0                          ldm  r0,r11,#0
1493 : 61f0 c000                     and  r1,#$c000
1495 : 71f0 4000                     xor  r1,#$4000
1497 : b1e0                          skz  r1
1498 : aff0 18f7                     jmp  #syntaxerror
149a :                               ._rpdolet
149a : adf0 11d8                     jsr  #command_let
149c : aff0 1472                     jmp  #_rpnewcommand
149e :                               .command_goto
149e : 5ce1 2dc0                     push  link
14a0 : adf0 16d0                     jsr  #evaluateinteger
14a2 :                               ._cgmain
14a2 : 1bf0 4025                     ldm  r11,#programcode
14a4 :                               ._cgsearch
14a4 : 11b0                          ldm  r1,r11,#0
14a5 : c1e0                          sknz  r1
14a6 : aff0 1916                     jmp  #lineerror
14a8 : 14b1                          ldm  r4,r11,#1
14a9 : 7400                          xor  r4,r0,#0
14aa : c4e0                          sknz  r4
14ab : aff0 14b0                     jmp  #_cgfound
14ad : 3b10                          add  r11,r1,#0
14ae : aff0 14a4                     jmp  #_cgsearch
14b0 :                               ._cgfound
14b0 : 2bf0 4024                     stm  r11,#currentline
14b2 : 3be2                          add  r11,#2
14b3 : 1dc0 3ce1                     pop  link
14b5 : afd0                          ret
14b6 :                               .command_gosub
14b6 : 5ce1 2dc0                     push  link
14b8 : adf0 16d0                     jsr  #evaluateinteger
14ba : 5ce1 20c0                     push  r0
14bc : adf0 1a3e                     jsr  #stackpushposition
14be : adf0 1a4f                     jsr  #stackpushmarker
14c0 : 0073                          word  's'
14c1 : 10c0 3ce1                     pop  r0
14c3 : aff0 14a2                     jmp  #_cgmain
14c5 :                               .command_return
14c5 : 5ce1 2dc0                     push  link
14c7 : adf0 1a5e                     jsr  #stackcheckmarker
14c9 : 0073                          word  's'
14ca : aff0 1981                     jmp  #returnerror
14cc : adf0 1a48                     jsr  #stackpopposition
14ce : 00e3                          mov  r0,#1+stackpossize
14cf : adf0 1a67                     jsr  #stackpopwords
14d1 : 1dc0 3ce1                     pop  link
14d3 : afd0                          ret
14d4 :                               .command_while
14d4 : 5ce1 2dc0                     push  link
14d6 : 5be1                          dec  r11
14d7 : adf0 1a3e                     jsr  #stackpushposition
14d9 : adf0 1a4f                     jsr  #stackpushmarker
14db : 0077                          word  'w'
14dc : 3be1                          inc  r11
14dd : adf0 16d0                     jsr  #evaluateinteger
14df : b0e0                          skz  r0
14e0 : aff0 14ea                     jmp  #_cwexit
14e2 : 00e3                          mov  r0,#1+stackpossize
14e3 : adf0 1a67                     jsr  #stackpopwords
14e5 : 00f0 3a36                     mov  r0,#tok_wend
14e7 : 0100                          mov  r1,r0,#0
14e8 : adf0 19fa                     jsr  #skipstructure
14ea :                               ._cwexit
14ea : 1dc0 3ce1                     pop  link
14ec : afd0                          ret
14ed :                               .command_wend
14ed : 5ce1 2dc0                     push  link
14ef : adf0 1a5e                     jsr  #stackcheckmarker
14f1 : 0077                          word  'w'
14f2 : aff0 199b                     jmp  #wenderror
14f4 : adf0 1a48                     jsr  #stackpopposition
14f6 : 00e3                          mov  r0,#1+stackpossize
14f7 : adf0 1a67                     jsr  #stackpopwords
14f9 : 1dc0 3ce1                     pop  link
14fb : afd0                          ret
14fc :                               .binaryop_add
14fc : 5ce1 2dc0                     push  link
14fe : adf0 1586                     jsr  #multitypedispatch
1500 : aff0 16e7                     jmp  #stringconcat
1502 : adf0 1572                     jsr  #checkintdereference
1504 : 10a0                          ldm  r0,r10,#esvalue1
1505 : 11a3                          ldm  r1,r10,#esvalue2
1506 : 3010                          add  r0,r1,#0
1507 : 20a0                          stm  r0,r10,#esvalue1
1508 : 1dc0 3ce1                     pop  link
150a : afd0                          ret
150b :                               .binaryop_sub
150b : 5ce1 2dc0                     push  link
150d : adf0 1572                     jsr  #checkintdereference
150f : 10a0                          ldm  r0,r10,#esvalue1
1510 : 11a3                          ldm  r1,r10,#esvalue2
1511 : 5010                          sub  r0,r1,#0
1512 : 20a0                          stm  r0,r10,#esvalue1
1513 : 1dc0 3ce1                     pop  link
1515 : afd0                          ret
1516 :                               .binaryop_mult
1516 : 5ce1 2dc0                     push  link
1518 : adf0 1572                     jsr  #checkintdereference
151a : 10a0                          ldm  r0,r10,#esvalue1
151b : 11a3                          ldm  r1,r10,#esvalue2
151c : 8010                          mult  r0,r1,#0
151d : 20a0                          stm  r0,r10,#esvalue1
151e : 1dc0 3ce1                     pop  link
1520 : afd0                          ret
1521 :                               .binaryop_divide
1521 : 5ce1 2dc0                     push  link
1523 : adf0 1572                     jsr  #checkintdereference
1525 : 10a0                          ldm  r0,r10,#esvalue1
1526 : 11a3                          ldm  r1,r10,#esvalue2
1527 : c1e0                          sknz  r1
1528 : aff0 1905                     jmp  #dividezeroerror
152a : adf0 001e                     jsr  #ossdivide16
152c : 20a0                          stm  r0,r10,#esvalue1
152d : 1dc0 3ce1                     pop  link
152f : afd0                          ret
1530 :                               .binaryop_mod
1530 : 5ce1 2dc0                     push  link
1532 : adf0 1572                     jsr  #checkintdereference
1534 : 10a0                          ldm  r0,r10,#esvalue1
1535 : 11a3                          ldm  r1,r10,#esvalue2
1536 : c1e0                          sknz  r1
1537 : aff0 1905                     jmp  #dividezeroerror
1539 : adf0 001e                     jsr  #ossdivide16
153b : 21a0                          stm  r1,r10,#esvalue1
153c : 1dc0 3ce1                     pop  link
153e : afd0                          ret
153f :                               .binaryop_and
153f : 5ce1 2dc0                     push  link
1541 : adf0 1572                     jsr  #checkintdereference
1543 : 10a0                          ldm  r0,r10,#esvalue1
1544 : 11a3                          ldm  r1,r10,#esvalue2
1545 : 6010                          and  r0,r1,#0
1546 : 20a0                          stm  r0,r10,#esvalue1
1547 : 1dc0 3ce1                     pop  link
1549 : afd0                          ret
154a :                               .binaryop_or
154a : 5ce1 2dc0                     push  link
154c : adf0 1572                     jsr  #checkintdereference
154e : 10a0                          ldm  r0,r10,#esvalue1
154f : 70f0 ffff                     xor  r0,#$ffff
1551 : 11a3                          ldm  r1,r10,#esvalue2
1552 : 71f0 ffff                     xor  r1,#$ffff
1554 : 6010                          and  r0,r1,#0
1555 : 70f0 ffff                     xor  r0,#$ffff
1557 : 20a0                          stm  r0,r10,#esvalue1
1558 : 1dc0 3ce1                     pop  link
155a : afd0                          ret
155b :                               .binaryop_xor
155b : 5ce1 2dc0                     push  link
155d : adf0 1572                     jsr  #checkintdereference
155f : 10a0                          ldm  r0,r10,#esvalue1
1560 : 11a3                          ldm  r1,r10,#esvalue2
1561 : 7010                          xor  r0,r1,#0
1562 : 20a0                          stm  r0,r10,#esvalue1
1563 : 1dc0 3ce1                     pop  link
1565 : afd0                          ret
1566 :                               .binaryop_indirect
1566 : 5ce1 2dc0                     push  link
1568 : adf0 1572                     jsr  #checkintdereference
156a : 10a0                          ldm  r0,r10,#esvalue1
156b : 11a3                          ldm  r1,r10,#esvalue2
156c : 3010                          add  r0,r1,#0
156d : 20a0                          stm  r0,r10,#esvalue1
156e : 2fa2                          stm  r15,r10,#esreference1
156f : 1dc0 3ce1                     pop  link
1571 : afd0                          ret
1572 :                               .checkintdereference
1572 : 10a1                          ldm  r0,r10,#estype1
1573 : 11a4                          ldm  r1,r10,#estype2
1574 : 3010                          add  r0,r1,#0
1575 : b0e0                          skz  r0
1576 : aff0 18fd                     jmp  #typemismatcherror
1578 :                               .dereferencebinary
1578 : 10a5                          ldm  r0,r10,#esreference2
1579 : 11a3                          ldm  r1,r10,#esvalue2
157a : b0e0                          skz  r0
157b : 1110                          ldm  r1,r1,#0
157c : 21a3                          stm  r1,r10,#esvalue2
157d : 2ea5                          stm  r14,r10,#esreference2
157e :                               .dereferenceunary
157e : 10a2                          ldm  r0,r10,#esreference1
157f : c0e0                          sknz  r0
1580 : afd0                          ret
1581 : 10a0                          ldm  r0,r10,#esvalue1
1582 : 1000                          ldm  r0,r0,#0
1583 : 20a0                          stm  r0,r10,#esvalue1
1584 : 2ea2                          stm  r14,r10,#esreference1
1585 : afd0                          ret
1586 :                               .multitypedispatch
1586 : 10a1                          ldm  r0,r10,#estype1
1587 : 11a4                          ldm  r1,r10,#estype2
1588 : 3010                          add  r0,r1,#0
1589 : 3de2                          add  link,#2
158a : c0e0                          sknz  r0
158b : afd0                          ret
158c : 5ce1 2dc0                     push  link
158e : c1e0                          sknz  r1
158f : aff0 18fd                     jmp  #typemismatcherror
1591 : 10a1                          ldm  r0,r10,#estype1
1592 : c0e0                          sknz  r0
1593 : aff0 18fd                     jmp  #typemismatcherror
1595 : 1dc0 3ce1                     pop  link
1597 : 5de2                          sub  link,#2
1598 : afd0                          ret
1599 :                               .binaryop_notequal
1599 : 5ce1 2dc0                     push  link
159b : adf0 1586                     jsr  #multitypedispatch
159d : aff0 15ab                     jmp  #_bnestring
159f : adf0 1572                     jsr  #checkintdereference
15a1 : 10a0                          ldm  r0,r10,#esvalue1
15a2 : 11a3                          ldm  r1,r10,#esvalue2
15a3 : 7010                          xor  r0,r1,#0
15a4 :                               ._bnereturn
15a4 : b0e0                          skz  r0
15a5 : 00f0 ffff                     mov  r0,#-1
15a7 : 20a0                          stm  r0,r10,#esvalue1
15a8 : 1dc0 3ce1                     pop  link
15aa : afd0                          ret
15ab :                               ._bnestring
15ab : adf0 1602                     jsr  #comparestrings
15ad : aff0 15a4                     jmp  #_bnereturn
15af :                               .binaryop_greaterequal
15af : 5ce1 2dc0                     push  link
15b1 : adf0 1586                     jsr  #multitypedispatch
15b3 : aff0 15c6                     jmp  #_bgestring
15b5 : adf0 1572                     jsr  #checkintdereference
15b7 : 10a0                          ldm  r0,r10,#esvalue1
15b8 : 11a3                          ldm  r1,r10,#esvalue2
15b9 :                               .binarycompare
15b9 : 30f0 8000                     add  r0,#$8000
15bb : 31f0 8000                     add  r1,#$8000
15bd : 5010                          sub  r0,r1,#0
15be : 00e0                          mov  r0,#0
15bf : ffe0                          sklt
15c0 : 00f0 ffff                     mov  r0,#-1
15c2 : 20a0                          stm  r0,r10,#esvalue1
15c3 : 1dc0 3ce1                     pop  link
15c5 : afd0                          ret
15c6 :                               ._bgestring
15c6 : adf0 1602                     jsr  #comparestrings
15c8 : e0e0                          skm  r0
15c9 : aff0 15cf                     jmp  #_bgereturntrue
15cb :                               ._bgereturnfalse
15cb : 2ea0                          stm  r14,r10,#esvalue1
15cc : 1dc0 3ce1                     pop  link
15ce : afd0                          ret
15cf :                               ._bgereturntrue
15cf : 00f0 ffff                     mov  r0,#-1
15d1 : 20a0                          stm  r0,r10,#esvalue1
15d2 : 1dc0 3ce1                     pop  link
15d4 : afd0                          ret
15d5 :                               .binaryop_lessequal
15d5 : 5ce1 2dc0                     push  link
15d7 : adf0 1586                     jsr  #multitypedispatch
15d9 : aff0 15e1                     jmp  #_blestring
15db : adf0 1572                     jsr  #checkintdereference
15dd : 11a0                          ldm  r1,r10,#esvalue1
15de : 10a3                          ldm  r0,r10,#esvalue2
15df : aff0 15b9                     jmp  #binarycompare
15e1 :                               ._blestring
15e1 : adf0 1602                     jsr  #comparestrings
15e3 : c0e0                          sknz  r0
15e4 : aff0 15cf                     jmp  #_bgereturntrue
15e6 : d0e0                          skp  r0
15e7 : aff0 15cf                     jmp  #_bgereturntrue
15e9 : aff0 15cb                     jmp  #_bgereturnfalse
15eb :                               .binaryop_equal
15eb : 5ce1 2dc0                     push  link
15ed : adf0 1599                     jsr  #binaryop_notequal
15ef :                               .reverseresult
15ef : 10a0                          ldm  r0,r10,#esvalue1
15f0 : 70f0 ffff                     xor  r0,#$ffff
15f2 : 20a0                          stm  r0,r10,#esvalue1
15f3 : 1dc0 3ce1                     pop  link
15f5 : afd0                          ret
15f6 :                               .binaryop_greater
15f6 : 5ce1 2dc0                     push  link
15f8 : adf0 15d5                     jsr  #binaryop_lessequal
15fa : aff0 15ef                     jmp  #reverseresult
15fc :                               .binaryop_less
15fc : 5ce1 2dc0                     push  link
15fe : adf0 15af                     jsr  #binaryop_greaterequal
1600 : aff0 15ef                     jmp  #reverseresult
1602 :                               .comparestrings
1602 : 2ea1                          stm  r14,r10,#estype1
1603 : 11a0                          ldm  r1,r10,#esvalue1
1604 : 12a3                          ldm  r2,r10,#esvalue2
1605 : 1310                          ldm  r3,r1,#0
1606 : 1420                          ldm  r4,r2,#0
1607 : 0530                          mov  r5,r3,#0
1608 : 5540                          sub  r5,r4,#0
1609 : e5e0                          skm  r5
160a : 0340                          mov  r3,r4,#0
160b : 33e1                          inc  r3
160c : 93e1                          ror  r3,#1
160d : 63f0 7fff                     and  r3,#$7fff
160f :                               ._cslloop
160f : c3e0                          sknz  r3
1610 : aff0 161e                     jmp  #_cslstartmatch
1612 : 53e1                          dec  r3
1613 : 31e1                          inc  r1
1614 : 32e1                          inc  r2
1615 : 1010                          ldm  r0,r1,#0
1616 : 1420                          ldm  r4,r2,#0
1617 : 90e8                          ror  r0,#8
1618 : 94e8                          ror  r4,#8
1619 : 5040                          sub  r0,r4,#0
161a : c0e0                          sknz  r0
161b : aff0 160f                     jmp  #_cslloop
161d : afd0                          ret
161e :                               ._cslstartmatch
161e : 0050                          mov  r0,r5,#0
161f : afd0                          ret
1620 :                               .evaluateexpression
1620 : 5ce2 29c0 2dc1                push  r9,link
1623 : 7990                          clr  r9
1624 : adf0 162a                     jsr  #evaluator
1626 : 19c0 1dc1 3ce2                pop  r9,link
1629 : afd0                          ret
162a :                               .evaluator
162a : 5ce8 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,r5,r6,link
1633 : 10b0                          ldm  r0,r11,#0
1634 : e0e0                          skm  r0
1635 : aff0 163f                     jmp  #_evnotconstant
1637 : 60f0 7fff                     and  r0,#$7fff
1639 : 20a0                          stm  r0,r10,#esvalue1
163a : 2ea1                          stm  r14,r10,#estype1
163b : 2ea2                          stm  r14,r10,#esreference1
163c : 3be1                          inc  r11
163d : aff0 1652                     jmp  #_evhaveterm
163f :                               ._evnotconstant
163f : c0e0                          sknz  r0
1640 : aff0 18f7                     jmp  #syntaxerror
1642 : 3000                          add  r0,r0,#0
1643 : d0e0                          skp  r0
1644 : aff0 167f                     jmp  #_evvariable
1646 : 3000                          add  r0,r0,#0
1647 : d0e0                          skp  r0
1648 : aff0 1683                     jmp  #_evunaryfunction
164a : 00b1                          mov  r0,r11,#1
164b : 20a0                          stm  r0,r10,#esvalue1
164c : 2fa1                          stm  r15,r10,#estype1
164d : 2ea2                          stm  r14,r10,#esreference1
164e : 10b0                          ldm  r0,r11,#0
164f : 60f0 00ff                     and  r0,#$00ff
1651 : 3b00                          add  r11,r0,#0
1652 :                               ._evhaveterm
1652 : 10b0                          ldm  r0,r11,#0
1653 : 60f0 f000                     and  r0,#$f000
1655 : 70f0 2000                     xor  r0,#$2000
1657 : b0e0                          skz  r0
1658 : aff0 1675                     jmp  #_evexit
165a : 10b0                          ldm  r0,r11,#0
165b : 60f0 1e00                     and  r0,#$1e00
165d : 5090                          sub  r0,r9,#0
165e : 50e1                          dec  r0
165f : d0e0                          skp  r0
1660 : aff0 1675                     jmp  #_evexit
1662 : 11b0                          ldm  r1,r11,#0
1663 : 3be1                          inc  r11
1664 : 0290                          mov  r2,r9,#0
1665 : 0910                          mov  r9,r1,#0
1666 : 69f0 1e00                     and  r9,#$1e00
1668 : 3ae3                          add  r10,#stackelementsize
1669 : adf0 162a                     jsr  #evaluator
166b : 5ae3                          sub  r10,#stackelementsize
166c : 0920                          mov  r9,r2,#0
166d :                               ._evcallhandler
166d : 61f0 01ff                     and  r1,#$01ff
166f : 31f0 1e05                     add  r1,#tokenvectors
1671 : 1010                          ldm  r0,r1,#0
1672 : ad00                          brl  link,r0,#0
1673 : aff0 1652                     jmp  #_evhaveterm
1675 :                               ._evexit
1675 : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,r5,r6,link
167e : afd0                          ret
167f :                               ._evvariable
167f : adf0 1c58                     jsr  #getvariablereference
1681 : aff0 1652                     jmp  #_evhaveterm
1683 :                               ._evunaryfunction
1683 : 10b0                          ldm  r0,r11,#0
1684 : 70f0 260a                     xor  r0,#tok_minus
1686 : b0e0                          skz  r0
1687 : aff0 1691                     jmp  #_evcheckpling
1689 : 3be1                          inc  r11
168a : adf0 16ae                     jsr  #evaluateterminteger
168c : 7110                          clr  r1
168d : 5100                          sub  r1,r0,#0
168e : 21a0                          stm  r1,r10,#esvalue1
168f : aff0 1652                     jmp  #_evhaveterm
1691 :                               ._evcheckpling
1691 : 70f0 0c04                     xor  r0,#tok_minus^tok_pling
1693 : b0e0                          skz  r0
1694 : aff0 169c                     jmp  #_evcheckunary
1696 : 3be1                          inc  r11
1697 : adf0 16ae                     jsr  #evaluateterminteger
1699 : 2fa2                          stm  r15,r10,#esreference1
169a : aff0 1652                     jmp  #_evhaveterm
169c :                               ._evcheckunary
169c : 10b0                          ldm  r0,r11,#0
169d : 60f0 1e00                     and  r0,#$1e00
169f : 70f0 1000                     xor  r0,#$1000
16a1 : b0e0                          skz  r0
16a2 : aff0 18f7                     jmp  #syntaxerror
16a4 : 11b0                          ldm  r1,r11,#0
16a5 : 3be1                          inc  r11
16a6 : aff0 166d                     jmp  #_evcallhandler
16a8 :                               .constshifthandler
16a8 : 10b0                          ldm  r0,r11,#0
16a9 : 20a0                          stm  r0,r10,#esvalue1
16aa : 2ea1                          stm  r14,r10,#estype1
16ab : 2ea2                          stm  r14,r10,#esreference1
16ac : 3be1                          inc  r11
16ad : afd0                          ret
16ae :                               .evaluateterminteger
16ae : 5ce3 21c0 29c1 2dc2           push  r1,r9,link
16b2 : 09f0 4000                     mov  r9,#$4000
16b4 : adf0 162a                     jsr  #evaluator
16b6 : 11a0                          ldm  r1,r10,#esvalue1
16b7 : 19a2                          ldm  r9,r10,#esreference1
16b8 : b9e0                          skz  r9
16b9 : 1110                          ldm  r1,r1,#0
16ba : 21a0                          stm  r1,r10,#esvalue1
16bb : 2ea2                          stm  r14,r10,#esreference1
16bc : 19a1                          ldm  r9,r10,#estype1
16bd : b9e0                          skz  r9
16be : aff0 18fd                     jmp  #typemismatcherror
16c0 : 10a0                          ldm  r0,r10,#esvalue1
16c1 : 11c0 19c1 1dc2 3ce3           pop  r1,r9,link
16c5 : afd0                          ret
16c6 :                               .evaluatestring
16c6 : 5ce1 2dc0                     push  link
16c8 : adf0 1620                     jsr  #evaluateexpression
16ca : 10a1                          ldm  r0,r10,#estype1
16cb : b0e0                          skz  r0
16cc : aff0 16d8                     jmp  #evaluatecommon
16ce : aff0 18fd                     jmp  #typemismatcherror
16d0 :                               .evaluateinteger
16d0 : 5ce1 2dc0                     push  link
16d2 : adf0 1620                     jsr  #evaluateexpression
16d4 : 10a1                          ldm  r0,r10,#estype1
16d5 : b0e0                          skz  r0
16d6 : aff0 18fd                     jmp  #typemismatcherror
16d8 :                               .evaluatecommon
16d8 : 10a2                          ldm  r0,r10,#esreference1
16d9 : b0e0                          skz  r0
16da : aff0 16e0                     jmp  #_ecreference
16dc : 10a0                          ldm  r0,r10,#esvalue1
16dd : 1dc0 3ce1                     pop  link
16df : afd0                          ret
16e0 :                               ._ecreference
16e0 : 10a0                          ldm  r0,r10,#esvalue1
16e1 : 1000                          ldm  r0,r0,#0
16e2 : 20a0                          stm  r0,r10,#esvalue1
16e3 : 2ea2                          stm  r14,r10,#esreference1
16e4 : 1dc0 3ce1                     pop  link
16e6 : afd0                          ret
16e7 :                               .stringconcat
16e7 : adf0 1578                     jsr  #dereferencebinary
16e9 : 10a0                          ldm   r0,r10,#esvalue1
16ea : 1100                          ldm  r1,r0,#0
16eb : 10a3                          ldm  r0,r10,#esvalue2
16ec : 1000                          ldm  r0,r0,#0
16ed : 3010                          add  r0,r1,#0
16ee : 0100                          mov  r1,r0,#0
16ef : 51f0 0100                     sub  r1,#maxstringsize+1
16f1 : ffe0                          sklt
16f2 : aff0 196d                     jmp  #strlenerror
16f4 : 90e1                          ror  r0,#1
16f5 : 60f0 7fff                     and  r0,#$7fff
16f7 : 30e2                          add  r0,#2
16f8 : adf0 171b                     jsr  #sfallocate
16fa : 13a0                          ldm  r3,r10,#esvalue1
16fb : 21a0                          stm  r1,r10,#esvalue1
16fc : adf0 1704                     jsr  #_scoutput
16fe : 13a3                          ldm  r3,r10,#esvalue2
16ff : adf0 1704                     jsr  #_scoutput
1701 : 1dc0 3ce1                     pop  link
1703 : afd0                          ret
1704 :                               ._scoutput
1704 : 5ce1 2dc0                     push  link
1706 : 0030                          mov  r0,r3,#0
1707 : adf0 002a                     jsr  #oswordlength
1709 : 0400                          mov  r4,r0,#0
170a :                               ._scoutloop
170a : 33e1                          inc  r3
170b : c4e0                          sknz  r4
170c : aff0 1718                     jmp  #_scoutexit
170e : 54e1                          dec  r4
170f : 1030                          ldm  r0,r3,#0
1710 : adf0 1726                     jsr  #sfaddcharacter
1712 : 1030                          ldm  r0,r3,#0
1713 : 90e8                          ror  r0,#8
1714 : adf0 1726                     jsr  #sfaddcharacter
1716 : aff0 170a                     jmp  #_scoutloop
1718 :                               ._scoutexit
1718 : 1dc0 3ce1                     pop  link
171a : afd0                          ret
171b :                               .sfallocate
171b : 5ce1 2dc0                     push  link
171d : adf0 1a78                     jsr  #allocatetempmemory
171f : 0100                          mov  r1,r0,#0
1720 : 7220                          clr  r2
1721 : 2e10                          stm  r14,r1,#0
1722 : 2e11                          stm  r14,r1,#1
1723 : 1dc0 3ce1                     pop  link
1725 : afd0                          ret
1726 :                               .sfaddcharacter
1726 : 60f0 00ff                     and  r0,#$00ff
1728 : c0e0                          sknz  r0
1729 : afd0                          ret
172a : 5ce2 23c0 24c1                push  r3,r4
172d : 0420                          mov  r4,r2,#0
172e : 94e1                          ror  r4,#1
172f : d4e0                          skp  r4
1730 : 90e8                          ror  r0,#8
1731 : 64f0 7fff                     and  r4,#$7fff
1733 : 3411                          add  r4,r1,#1
1734 : 1340                          ldm  r3,r4,#0
1735 : 3300                          add  r3,r0,#0
1736 : 2340                          stm  r3,r4,#0
1737 : 2e41                          stm  r14,r4,#1
1738 : 32e1                          inc  r2
1739 : 2210                          stm  r2,r1,#0
173a : 13c0 14c1 3ce2                pop  r3,r4
173d : afd0                          ret
173e :                               .unary_mid
173e : 5ce1 2dc0                     push  link
1740 : adf0 16c6                     jsr  #evaluatestring
1742 : 0300                          mov  r3,r0,#0
1743 : adf0 18c4                     jsr  #checkcomma
1745 : adf0 16d0                     jsr  #evaluateinteger
1747 : 0400                          mov  r4,r0,#0
1748 : 05f0 00ff                     mov  r5,#maxstringsize
174a : 10b0                          ldm  r0,r11,#0
174b : 70f0 3228                     xor  r0,#tok_rparen
174d : c0e0                          sknz r0
174e : aff0 1755                     jmp  #unarystringslicecommon
1750 : adf0 18c4                     jsr  #checkcomma
1752 : adf0 16d0                     jsr  #evaluateinteger
1754 : 0500                          mov  r5,r0,#0
1755 :                               .unarystringslicecommon
1755 : adf0 18b8                     jsr  #checkrightbracket
1757 : 54e1                          dec  r4
1758 : d4e0                          skp  r4
1759 : aff0 1927                     jmp  #badnumbererror
175b : d5e0                          skp  r5
175c : aff0 1927                     jmp  #badnumbererror
175e : c5e0                          sknz  r5
175f : aff0 1787                     jmp  #_usscnull
1761 : 1030                          ldm  r0,r3,#0
1762 : 0140                          mov  r1,r4,#0
1763 : 5100                          sub  r1,r0,#0
1764 : ffe0                          sklt
1765 : aff0 1787                     jmp  #_usscnull
1767 : 0050                          mov  r0,r5,#0
1768 : 90e1                          ror  r0,#1
1769 : 60f0 7fff                     and  r0,#$7fff
176b : 30e2                          add  r0,#2
176c : adf0 171b                     jsr  #sfallocate
176e : 20a0                          stm  r0,r10,#esvalue1
176f : 7660                          clr  r6
1770 : 33e1                          inc  r3
1771 :                               ._ussccopyloop
1771 : 54e1                          dec  r4
1772 : e4e0                          skm  r4
1773 : aff0 1782                     jmp  #_usscnextcharacter
1775 : 1030                          ldm  r0,r3,#0
1776 : 9060                          ror  r0,r6,#0
1777 : 60f0 00ff                     and  r0,#$00ff
1779 : c0e0                          sknz  r0
177a : aff0 178b                     jmp  #_usscexit
177c : adf0 1726                     jsr  #sfaddcharacter
177e : 55e1                          dec  r5
177f : c5e0                          sknz  r5
1780 : aff0 178b                     jmp  #_usscexit
1782 :                               ._usscnextcharacter
1782 : 76e8                          xor  r6,#8
1783 : c6e0                          sknz  r6
1784 : 33e1                          inc  r3
1785 : aff0 1771                     jmp  #_ussccopyloop
1787 :                               ._usscnull
1787 : 00e1                          mov  r0,#1
1788 : adf0 171b                     jsr  #sfallocate
178a : 20a0                          stm  r0,r10,#esvalue1
178b :                               ._usscexit
178b : 2ea2                          stm  r14,r10,#esreference1
178c : 2fa1                          stm  r15,r10,#estype1
178d : 1dc0 3ce1                     pop  link
178f : afd0                          ret
1790 :                               .unary_left
1790 : 5ce1 2dc0                     push  link
1792 : adf0 16c6                     jsr  #evaluatestring
1794 : 0300                          mov  r3,r0,#0
1795 : adf0 18c4                     jsr  #checkcomma
1797 : 04e1                          mov  r4,#1
1798 : adf0 16d0                     jsr  #evaluateinteger
179a : 0500                          mov  r5,r0,#0
179b : aff0 1755                     jmp  #unarystringslicecommon
179d :                               .unary_right
179d : 5ce1 2dc0                     push  link
179f : adf0 16c6                     jsr  #evaluatestring
17a1 : 0300                          mov  r3,r0,#0
17a2 : 1430                          ldm  r4,r3,#0
17a3 : 34e1                          inc  r4
17a4 : adf0 18c4                     jsr  #checkcomma
17a6 : adf0 16d0                     jsr  #evaluateinteger
17a8 : 5400                          sub  r4,r0,#0
17a9 : d4e0                          skp  r4
17aa : 04e1                          mov  r4,#1
17ab : c4e0                          sknz  r4
17ac : 04e1                          mov  r4,#1
17ad : 05f0 00ff                     mov  r5,#maxstringsize
17af : aff0 1755                     jmp  #unarystringslicecommon
17b1 :                               .unary_hex
17b1 :                               .unary_bin
17b1 : aff0 16ae                     jmp  #evaluateterminteger
17b3 :                               .unary_parenthesis
17b3 : 5ce1 2dc0                     push  link
17b5 : adf0 1620                     jsr  #evaluateexpression
17b7 : adf0 18b8                     jsr  #checkrightbracket
17b9 : 1dc0 3ce1                     pop  link
17bb : afd0                          ret
17bc :                               .unary_abs
17bc : 5ce1 2dc0                     push  link
17be : adf0 16d0                     jsr  #evaluateinteger
17c0 : 7110                          clr  r1
17c1 : 5100                          sub  r1,r0,#0
17c2 : d0e0                          skp  r0
17c3 : 0010                          mov  r0,r1,#0
17c4 : 20a0                          stm  r0,r10,#esvalue1
17c5 : adf0 18b8                     jsr  #checkrightbracket
17c7 : 1dc0 3ce1                     pop  link
17c9 : afd0                          ret
17ca :                               .unary_sgn
17ca :                               .unary_sgn2
17ca : 5ce1 2dc0                     push  link
17cc : adf0 16d0                     jsr  #evaluateinteger
17ce : 01e1                          mov  r1,#1
17cf : d0e0                          skp  r0
17d0 : 01f0 ffff                     mov  r1,#-1
17d2 : c0e0                          sknz r0
17d3 : 7110                          clr  r1
17d4 : 21a0                          stm  r1,r10,#esvalue1
17d5 : adf0 18b8                     jsr  #checkrightbracket
17d7 : 1dc0 3ce1                     pop  link
17d9 : afd0                          ret
17da :                               .unary_len
17da :                               .unary_len2
17da : 5ce1 2dc0                     push  link
17dc : adf0 16c6                     jsr  #evaluatestring
17de : 1000                          ldm  r0,r0,#0
17df : 20a0                          stm  r0,r10,#esvalue1
17e0 : 2ea1                          stm  r14,r10,#estype1
17e1 : adf0 18b8                     jsr  #checkrightbracket
17e3 : 1dc0 3ce1                     pop  link
17e5 : afd0                          ret
17e6 :                               .unary_asc
17e6 : 5ce1 2dc0                     push  link
17e8 : adf0 16c6                     jsr  #evaluatestring
17ea : 1001                          ldm  r0,r0,#1
17eb : 60f0 00ff                     and  r0,#$00ff
17ed : 20a0                          stm  r0,r10,#esvalue1
17ee : 2ea1                          stm  r14,r10,#estype1
17ef : adf0 18b8                     jsr  #checkrightbracket
17f1 : 1dc0 3ce1                     pop  link
17f3 : afd0                          ret
17f4 :                               .unary_peek
17f4 : 5ce1 2dc0                     push  link
17f6 : adf0 16d0                     jsr  #evaluateinteger
17f8 : 1000                          ldm  r0,r0,#0
17f9 : 20a0                          stm  r0,r10,#esvalue1
17fa : adf0 18b8                     jsr  #checkrightbracket
17fc : 1dc0 3ce1                     pop  link
17fe : afd0                          ret
17ff :                               .unary_inkey
17ff : 5ce1 2dc0                     push  link
1801 : adf0 18b8                     jsr  #checkrightbracket
1803 : 1dc0 3ce1                     pop  link
1805 :                               .unaryinkeynocheck
1805 : 5ce1 2dc0                     push  link
1807 : adea                          jsr  #osgetkeyboard
1808 : 20a0                          stm  r0,r10,#esvalue1
1809 : 2ea1                          stm  r14,r10,#estype1
180a : 2ea2                          stm  r14,r10,#esreference1
180b : 1dc0 3ce1                     pop  link
180d : afd0                          ret
180e :                               .unary_get
180e : 5ce1 2dc0                     push  link
1810 : adf0 18b8                     jsr  #checkrightbracket
1812 :                               ._ugwait
1812 : adf0 1805                     jsr  #unaryinkeynocheck
1814 : 10a0                          ldm  r0,r10,#esvalue1
1815 : c0e0                          sknz r0
1816 : aff0 1812                     jmp  #_ugwait
1818 : 1dc0 3ce1                     pop  link
181a : afd0                          ret
181b :                               .unary_rnd
181b :                               .unary_rnd2
181b : 5ce1 2dc0                     push  link
181d : adf0 0020                     jsr  #osrandom16
181f : 11b0                          ldm  r1,r11,#0
1820 : 71f0 3228                     xor  r1,#tok_rparen
1822 : c1e0                          sknz  r1
1823 : aff0 1834                     jmp  #unary_rndexit
1825 : 0200                          mov  r2,r0,#0
1826 : adf0 16d0                     jsr  #evaluateinteger
1828 : 0300                          mov  r3,r0,#0
1829 : adf0 18c4                     jsr  #checkcomma
182b : adf0 16d0                     jsr  #evaluateinteger
182d : 0101                          mov  r1,r0,#1
182e : 5130                          sub  r1,r3,#0
182f : 0020                          mov  r0,r2,#0
1830 : adf0 001c                     jsr  #osudivide16
1832 : 0010                          mov  r0,r1,#0
1833 : 3030                          add  r0,r3,#0
1834 :                               .unary_rndexit
1834 : 20a0                          stm  r0,r10,#esvalue1
1835 : 2ea1                          stm  r14,r10,#estype1
1836 : 2ea2                          stm  r14,r10,#esreference1
1837 : adf0 18b8                     jsr  #checkrightbracket
1839 : 1dc0 3ce1                     pop  link
183b : afd0                          ret
183c :                               .unary_val
183c :                               .unary_val2
183c : 5ce1 2dc0                     push  link
183e : adf0 16c6                     jsr  #evaluatestring
1840 : adf0 18b8                     jsr  #checkrightbracket
1842 : 01ea                          mov  r1,#10
1843 : adf0 184e                     jsr  #compactstringtointeger
1845 : b1e0                          skz  r1
1846 : aff0 1927                     jmp  #badnumbererror
1848 : 20a0                          stm  r0,r10,#esvalue1
1849 : 2ea1                          stm  r14,r10,#estype1
184a : 2ea2                          stm   r14,r10,#esreference1
184b : 1dc0 3ce1                     pop  link
184d : afd0                          ret
184e :                               .compactstringtointeger
184e : 5ce4 29c0 2ac1 2bc2 2dc3      push  r9,r10,r11,link
1853 : 7bb0                          clr  r11
1854 : 0a01                          mov  r10,r0,#1
1855 : 1900                          ldm  r9,r0,#0
1856 : 00f0 1860                     mov  r0,#stringextract
1858 : adf0 0022                     jsr  #osstrtoint
185a : 19c0 1ac1 1bc2 1dc3 3ce4      pop  r9,r10,r11,link
185f : afd0                          ret
1860 :                               .stringextract
1860 : 7000                          clr  r0
1861 : c9e0                          sknz  r9
1862 : afd0                          ret
1863 : 59e1                          dec  r9
1864 : 10a0                          ldm  r0,r10,#0
1865 : bbe0                          skz  r11
1866 : 90e8                          ror  r0,#8
1867 : 60f0 00ff                     and  r0,#$00ff
1869 : 7be1                          xor  r11,#1
186a : cbe0                          sknz  r11
186b : 3ae1                          inc  r10
186c : afd0                          ret
186d :                               .unary_chr
186d : 5ce1 2dc0                     push  link
186f : adf0 16d0                     jsr  #evaluateinteger
1871 : adf0 18b8                     jsr  #checkrightbracket
1873 : 60f0 00ff                     and  r0,#$00ff
1875 :                               .unaryreturncharacter
1875 : 0100                          mov  r1,r0,#0
1876 : 00e2                          mov  r0,#2
1877 : adf0 1a78                     jsr  #allocatetempmemory
1879 : 2101                          stm  r1,r0,#1
187a : 01e1                          mov  r1,#1
187b : 2100                          stm  r1,r0,#0
187c : 20a0                          stm  r0,r10,#esvalue1
187d : 2fa1                          stm  r15,r10,#estype1
187e : 2ea2                          stm  r14,r10,#esreference1
187f : 1dc0 3ce1                     pop  link
1881 : afd0                          ret
1882 :                               .unary_getstring
1882 : 5ce1 2dc0                     push  link
1884 : adf0 180e                     jsr  #unary_get
1886 : 10a0                          ldm  r0,r10,#esvalue1
1887 : aff0 1875                     jmp  #unaryreturncharacter
1889 :                               .unary_inkeystring
1889 : 5ce1 2dc0                     push  link
188b : adf0 17ff                     jsr  #unary_inkey
188d : 10a0                          ldm  r0,r10,#esvalue1
188e : aff0 1875                     jmp  #unaryreturncharacter
1890 :                               .unary_str
1890 :                               .unary_str2
1890 : 5ce1 2dc0                     push  link
1892 : adf0 16d0                     jsr  #evaluateinteger
1894 : adf0 18b8                     jsr  #checkrightbracket
1896 : 01f0 800a                     mov  r1,#$800a
1898 : adf0 0024                     jsr  #osinttostr
189a : 0100                          mov  r1,r0,#0
189b : 00ea                          mov  r0,#maxistrsize
189c : adf0 1a78                     jsr  #allocatetempmemory
189e : 20a0                          stm  r0,r10,#esvalue1
189f : 2fa1                          stm  r15,r10,#estype1
18a0 : 2ea2                          stm  r14,r10,#esreference1
18a1 : 02ea                          mov  r2,#maxistrsize
18a2 :                               ._uscopy
18a2 : 1310                          ldm  r3,r1,#0
18a3 : 2300                          stm  r3,r0,#0
18a4 : 31e1                          inc  r1
18a5 : 30e1                          inc  r0
18a6 : 52e1                          dec  r2
18a7 : b2e0                          skz  r2
18a8 : aff0 18a2                     jmp  #_uscopy
18aa : 1dc0 3ce1                     pop  link
18ac : afd0                          ret
18ad :                               .checknexttoken
18ad : 5ce1 21c0                     push  r1
18af : 11b0                          ldm  r1,r11,#0
18b0 : 3be1                          inc  r11
18b1 : 7010                          xor  r0,r1,#0
18b2 : b0e0                          skz  r0
18b3 : aff0 18f7                     jmp  #syntaxerror
18b5 : 11c0 3ce1                     pop  r1
18b7 : afd0                          ret
18b8 :                               .checkrightbracket
18b8 : 5ce1 20c0                     push  r0
18ba : 10b0                          ldm  r0,r11,#0
18bb : 3be1                          inc  r11
18bc : 70f0 3228                     xor  r0,#tok_rparen
18be : b0e0                          skz  r0
18bf : aff0 191f                     jmp  #missingbracketerror
18c1 : 10c0 3ce1                     pop  r0
18c3 : afd0                          ret
18c4 :                               .checkcomma
18c4 : 5ce1 20c0                     push  r0
18c6 : 10b0                          ldm  r0,r11,#0
18c7 : 3be1                          inc  r11
18c8 : 70f0 3229                     xor  r0,#tok_comma
18ca : b0e0                          skz  r0
18cb : aff0 1941                     jmp  #missingcommaerror
18cd : 10c0 3ce1                     pop  r0
18cf : afd0                          ret
18d0 :                               .getcharactertype
18d0 : 5ce1 21c0                     push  r1
18d2 : 0100                          mov  r1,r0,#0
18d3 : 51f0 0060                     sub  r1,#96
18d5 : ffe0                          sklt
18d6 : 50f0 0020                     sub  r0,#32
18d8 : 7110                          clr  r1
18d9 : 50f0 0030                     sub  r0,#'0'
18db : ffe1                          skge
18dc : aff0 18f3                     jmp  #_gctexit
18de : 01e2                          mov  r1,#2
18df : 50ea                          sub  r0,#10
18e0 : ffe1                          skge
18e1 : aff0 18f3                     jmp  #_gctexit
18e3 : 7110                          clr  r1
18e4 : 50e7                          sub  r0,#7
18e5 : ffe1                          skge
18e6 : aff0 18f3                     jmp  #_gctexit
18e8 : 50f0 001a                     sub  r0,#26
18ea : 01e1                          mov  r1,#1
18eb : ffe1                          skge
18ec : aff0 18f3                     jmp  #_gctexit
18ee : 01e2                          mov  r1,#2
18ef : 70f0 ffd3                     xor  r0,#'.'-'0'-10-7-26
18f1 : c0e0                          sknz  r0
18f2 : 7110                          clr  r1
18f3 :                               ._gctexit
18f3 : 0010                          mov  r0,r1,#0
18f4 : 11c0 3ce1                     pop  r1
18f6 : afd0                          ret
18f7 :                               .syntaxerror
18f7 : adf0 19e1                     jsr  #generrorhandler
18f9 : 0006 7953 746e 7861           string "syntax"
18fd :                               .typemismatcherror
18fd : adf0 19e1                     jsr  #generrorhandler
18ff : 000a 7257 6e6f 2067 7974      string "wrong type"
1905 :                               .dividezeroerror
1905 : adf0 19e1                     jsr  #generrorhandler
1907 : 0010 6944 6976 6973 6e6f      string  "division by zero"
1910 :                               .asserterror
1910 : adf0 19e1                     jsr  #generrorhandler
1912 : 0006 7341 6573 7472           string  "assert"
1916 :                               .lineerror
1916 : adf0 19e1                     jsr  #generrorhandler
1918 : 000c 694c 656e 7520 6b6e      string  "line unknown"
191f :                               .missingbracketerror
191f : adf0 19e1                     jsr  #generrorhandler
1921 : 0009 694d 7373 6e69 2067      string  "missing )"
1927 :                               .badnumbererror
1927 : adf0 19e1                     jsr  #generrorhandler
1929 : 000a 6142 2064 754e 626d      string  "bad number"
192f :                               .badindexerror
192f : adf0 19e1                     jsr  #generrorhandler
1931 : 0009 6142 2064 6e49 6564      string  "bad index"
1937 :                               .memoryerror
1937 : adf0 19e1                     jsr  #generrorhandler
1939 : 000d 754f 2074 666f 4d20      string  "out of memory"
1941 :                               .missingcommaerror
1941 : adf0 19e1                     jsr  #generrorhandler
1943 : 0009 694d 7373 6e69 2067      string  "missing ,"
1949 :                               .arrayautoerror
1949 : adf0 19e1                     jsr  #generrorhandler
194b : 000d 6e55 6e6b 776f 206e      string  "unknown array"
1953 :                               .arrayexistserror
1953 : adf0 19e1                     jsr  #generrorhandler
1955 : 000c 7241 6172 2079 7865      string  "array exists"
195c :                               .callerror
195c : adf0 19e1                     jsr  #generrorhandler
195e : 0011 6e55 6e6b 776f 206e      string  "unknown procedure"
1968 :                               .stoperror
1968 : adf0 19e1                     jsr  #generrorhandler
196a : 0004 7453 706f                string  "stop"
196d :                               .strlenerror
196d : adf0 19e1                     jsr  #generrorhandler
196f : 000b 7453 6972 676e 5320      string  "string size"
1976 :                               .structureerror
1976 : adf0 19e1                     jsr  #generrorhandler
1978 : 0010 7453 7572 7463 7275      string  "structures wrong"
1981 :                               .returnerror
1981 : adf0 19e1                     jsr  #generrorhandler
1983 : 0014 6552 7574 6e72 7720      string  "return without gosub"
198e :                               .untilerror
198e : adf0 19e1                     jsr  #generrorhandler
1990 : 0014 6e55 6974 206c 6977      string  "until without repeat"
199b :                               .wenderror
199b : adf0 19e1                     jsr  #generrorhandler
199d : 0012 6557 646e 7720 7469      string  "wend without while"
19a7 :                               .elseerror
19a7 : adf0 19e1                     jsr  #generrorhandler
19a9 : 000f 6c45 6573 7720 7469      string  "else without if"
19b2 :                               .endiferror
19b2 : adf0 19e1                     jsr  #generrorhandler
19b4 : 0010 6e45 6964 2066 6977      string  "endif without if"
19bd :                               .endprocerror
19bd : adf0 19e1                     jsr  #generrorhandler
19bf : 0014 6e45 5064 6f72 2063      string  "endproc without proc"
19ca :                               .nexterror
19ca : adf0 19e1                     jsr  #generrorhandler
19cc : 0010 654e 7478 7720 7469      string  "next without for"
19d5 :                               .returnstackerror
19d5 : adf0 19e1                     jsr  #generrorhandler
19d7 : 0012 7453 7572 7463 7275      string  "structure too deep"
19e1 :                               .generrorhandler
19e1 : 01d0                          mov  r1,r13,#0
19e2 : 00f0 0011                     mov  r0,#$11
19e4 : ade4                          jsr  #osprintcharacter
19e5 : 0010                          mov  r0,r1,#0
19e6 : ade8                          jsr  #osprintstring
19e7 : 10f0 4024                     ldm  r0,#currentline
19e9 : 1001                          ldm  r0,r0,#1
19ea : c0e0                          sknz  r0
19eb : aff0 19f8                     jmp  #_ehexit
19ed : ade6                          jsr  #osprintinline
19ee : 0003 4020 0020                string  " @ "
19f1 : 01ea                          mov  r1,#10
19f2 : adf0 0024                     jsr  #osinttostr
19f4 : ade8                          jsr  #osprintstring
19f5 : ade6                          jsr  #osprintinline
19f6 : 0002 120d                     string  "[0d][12]"
19f8 :                               ._ehexit
19f8 : aff0 101a                     jmp  #warmstart
19fa :                               .skipstructure
19fa : 7330                          clr  r3
19fb :                               ._ssloop
19fb : 12b0                          ldm  r2,r11,#0
19fc : c2e0                          sknz  r2
19fd : aff0 1a2e                     jmp  #_ssnextline
19ff : b3e0                          skz  r3
1a00 : aff0 1a0b                     jmp  #_ssnext
1a02 : 7200                          xor  r2,r0,#0
1a03 : c2e0                          sknz  r2
1a04 : aff0 1a2c                     jmp  #_ssfound
1a06 : 12b0                          ldm  r2,r11,#0
1a07 : 7210                          xor  r2,r1,#0
1a08 : c2e0                          sknz  r2
1a09 : aff0 1a2c                     jmp  #_ssfound
1a0b :                               ._ssnext
1a0b : 12b0                          ldm  r2,r11,#0
1a0c : 62f0 ff00                     and  r2,#$ff00
1a0e : 72f0 0100                     xor  r2,#$0100
1a10 : c2e0                          sknz  r2
1a11 : aff0 1a26                     jmp  #_ssstring
1a13 : 12b0                          ldm  r2,r11,#0
1a14 : 0420                          mov  r4,r2,#0
1a15 : 3be1                          inc  r11
1a16 : 62f0 f800                     and  r2,#$f800
1a18 : 72f0 3800                     xor  r2,#$3800
1a1a : b2e0                          skz  r2
1a1b : aff0 19fb                     jmp  #_ssloop
1a1d : 94e9                          ror  r4,#9
1a1e : 64e3                          and  r4,#3
1a1f : 54e2                          sub  r4,#2
1a20 : 3340                          add  r3,r4,#0
1a21 : e3e0                          skm  r3
1a22 : aff0 19fb                     jmp  #_ssloop
1a24 : aff0 1976                     jmp  #structureerror
1a26 :                               ._ssstring
1a26 : 12b0                          ldm  r2,r11,#0
1a27 : 62f0 00ff                     and  r2,#$00ff
1a29 : 3b20                          add  r11,r2,#0
1a2a : aff0 19fb                     jmp  #_ssloop
1a2c :                               ._ssfound
1a2c : 3be1                          inc  r11
1a2d : afd0                          ret
1a2e :                               ._ssnextline
1a2e : 3be1                          inc  r11
1a2f : 12b0                          ldm  r2,r11,#0
1a30 : c2e0                          sknz  r2
1a31 : aff0 1976                     jmp  #structureerror
1a33 : 2bf0 4024                     stm  r11,#currentline
1a35 : 3be2                          add  r11,#2
1a36 : aff0 19fb                     jmp  #_ssloop
1a38 :                               .stackreset
1a38 : 10f0 402b                     ldm  r0,#returnstacktop
1a3a : 20f0 402d                     stm  r0,#returnstackptr
1a3c : 2e00                          stm  r14,r0,#0
1a3d : afd0                          ret
1a3e :                               .stackpushposition
1a3e : 10f0 402d                     ldm  r0,#returnstackptr
1a40 : 50e2                          sub  r0,#2
1a41 : 20f0 402d                     stm  r0,#returnstackptr
1a43 : 2b00                          stm  r11,r0,#0
1a44 : 11f0 4024                     ldm  r1,#currentline
1a46 : 2101                          stm  r1,r0,#1
1a47 : afd0                          ret
1a48 :                               .stackpopposition
1a48 : 10f0 402d                     ldm  r0,#returnstackptr
1a4a : 1b01                          ldm  r11,r0,#1
1a4b : 1002                          ldm  r0,r0,#2
1a4c : 20f0 4024                     stm  r0,#currentline
1a4e : afd0                          ret
1a4f :                               .stackpushmarker
1a4f : 10f0 402d                     ldm  r0,#returnstackptr
1a51 : 50e1                          dec  r0
1a52 : 20f0 402d                     stm  r0,#returnstackptr
1a54 : 11d0                          ldm  r1,link,#0
1a55 : 2100                          stm  r1,r0,#0
1a56 : 3de1                          inc  link
1a57 : 11f0 402c                     ldm  r1,#returnstackbottom
1a59 : 5010                          sub  r0,r1,#0
1a5a : ffe1                          skge
1a5b : aff0 19d5                     jmp  #returnstackerror
1a5d : afd0                          ret
1a5e :                               .stackcheckmarker
1a5e : 10f0 402d                     ldm  r0,#returnstackptr
1a60 : 1000                          ldm  r0,r0,#0
1a61 : 11d0                          ldm  r1,link,#0
1a62 : 3de1                          inc  link
1a63 : 7010                          xor  r0,r1,#0
1a64 : c0e0                          sknz  r0
1a65 : 3de2                          add  link,#2
1a66 : afd0                          ret
1a67 :                               .stackpopwords
1a67 : 11f0 402d                     ldm  r1,#returnstackptr
1a69 : 3010                          add  r0,r1,#0
1a6a : 20f0 402d                     stm  r0,#returnstackptr
1a6c : afd0                          ret
1a6d :                               .stackpushr0
1a6d : 5ce1 21c0                     push  r1
1a6f : 11f0 402d                     ldm  r1,#returnstackptr
1a71 : 51e1                          dec  r1
1a72 : 21f0 402d                     stm  r1,#returnstackptr
1a74 : 2010                          stm  r0,r1,#0
1a75 : 11c0 3ce1                     pop  r1
1a77 : afd0                          ret
1a78 :                               .allocatetempmemory
1a78 : 5ce1 21c0                     push  r1
1a7a : 11f0 402a                     ldm  r1,#tempstringalloc
1a7c : b1e0                          skz  r1
1a7d : aff0 1a83                     jmp  #_atmnoinitialise
1a7f : 11f0 4027                     ldm  r1,#memalloctop
1a81 : 51f0 0080                     sub  r1,#(maxstringsize>>1)+1
1a83 :                               ._atmnoinitialise
1a83 : 5100                          sub  r1,r0,#0
1a84 : 21f0 402a                     stm  r1,#tempstringalloc
1a86 : 10f0 4028                     ldm  r0,#memallocbottom
1a88 : 5010                          sub  r0,r1,#0
1a89 : ffe0                          sklt  r0
1a8a : aff0 1937                     jmp  #memoryerror
1a8c : 0010                          mov  r0,r1,#0
1a8d : 11c0 3ce1                     pop  r1
1a8f : afd0                          ret
1a90 :                               .stringassign
1a90 : 5ce6 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,link
1a97 : 0200                          mov  r2,r0,#0
1a98 : adf0 002a                     jsr  #oswordlength
1a9a : 13f0 4027                     ldm  r3,#memalloctop
1a9c : 1410                          ldm   r4,r1,#0
1a9d : 5430                          sub  r4,r3,#0
1a9e : ffe1                          skge
1a9f : aff0 1aa9                     jmp  #_ssaconcrete
1aa1 : 1410                          ldm  r4,r1,#0
1aa2 : 54e1                          dec  r4
1aa3 : 1340                          ldm  r3,r4,#0
1aa4 : 53e1                          dec  r3
1aa5 : 5300                          sub  r3,r0,#0
1aa6 : ffe0                          sklt
1aa7 : aff0 1aba                     jmp  #_ssausecurrent
1aa9 :                               ._ssaconcrete
1aa9 : 0409                          mov  r4,r0,#1+extrastringalloc
1aaa : 13f0 4027                     ldm  r3,#memalloctop
1aac : 5340                          sub  r3,r4,#0
1aad : 23f0 4027                     stm  r3,#memalloctop
1aaf : 2430                          stm  r4,r3,#0
1ab0 : 33e1                          inc  r3
1ab1 : 2310                          stm  r3,r1,#0
1ab2 : 14f0 4028                     ldm  r4,#memallocbottom
1ab4 : 34f0 0100                     add  r4,#256
1ab6 : 5430                          sub  r4,r3,#0
1ab7 : ffe0                          sklt
1ab8 : aff0 1937                     jmp  #memoryerror
1aba :                               ._ssausecurrent
1aba : 1310                          ldm  r3,r1,#0
1abb :                               ._ssacopy
1abb : 1420                          ldm  r4,r2,#0
1abc : 2430                          stm  r4,r3,#0
1abd : 32e1                          inc  r2
1abe : 33e1                          inc  r3
1abf : 50e1                          dec  r0
1ac0 : e0e0                          skm  r0
1ac1 : aff0 1abb                     jmp  #_ssacopy
1ac3 : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,link
1aca : afd0                          ret
1acb :                               .tokenisestring
1acb : 5cec 21c0 22c1 23c2 24c3      push  r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,link
1ad8 : 09f0 40eb                     mov  r9,#tokenbuffer+2
1ada : 0800                          mov  r8,r0,#0
1adb : 07f0 007f                     mov  r7,#$007f
1add :                               ._tsloop
1add : 1080                          ldm  r0,r8,#0
1ade : 6070                          and  r0,r7,#0
1adf : 0300                          mov  r3,r0,#0
1ae0 : c0e0                          sknz  r0
1ae1 : aff0 1af1                     jmp  #_tsexit
1ae3 : 70f0 0020                     xor  r0,#' '
1ae5 : 38e1                          inc  r8
1ae6 : c0e0                          sknz  r0
1ae7 : aff0 1add                     jmp  #_tsloop
1ae9 : 58e1                          dec  r8
1aea : adf0 1b04                     jsr  #tokeniseelement
1aec : b0e0                          skz  r0
1aed : aff0 1af5                     jmp  #_tsfail
1aef : aff0 1add                     jmp  #_tsloop
1af1 :                               ._tsexit
1af1 : 2e90                          stm  r14,r9,#0
1af2 : 00f0 40eb                     mov  r0,#tokenbuffer+2
1af4 : c0e0                          sknz  r0
1af5 :                               ._tsfail
1af5 : 7000                          clr  r0
1af6 : 11c0 12c1 13c2 14c3 15c4      pop  r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,link
1b03 : afd0                          ret
1b04 :                               .tokeniseelement
1b04 : 5ce1 2dc0                     push  link
1b06 : 0030                          mov  r0,r3,#0
1b07 : adf0 18d0                     jsr  #getcharactertype
1b09 : 30f0 1b13                     add  r0,#_tehandlertable
1b0b : 1000                          ldm  r0,r0,#0
1b0c : af00                          brl  r15,r0,#0
1b0d :                               .teexitokay
1b0d : 7000                          clr  r0
1b0e : b0e0                          skz  r0
1b0f :                               .teexitfail
1b0f : 00e1                          mov  r0,#1
1b10 : 1dc0 3ce1                     pop  link
1b12 : afd0                          ret
1b13 :                               ._tehandlertable
1b13 : 1b39                          word  tokenisepunctuation
1b14 : 1bc3                          word  tokeniseidentkeyword
1b15 : 1b1b                          word tokeniseconstant
1b16 :                               .tokeniseconstantbase
1b16 : 2290                          stm  r2,r9,#0
1b17 : 39e1                          inc  r9
1b18 : 38e1                          inc  r8
1b19 : aff0 1b1c                     jmp  #tccontinue
1b1b :                               .tokeniseconstant
1b1b : 01ea                          mov  r1,#10
1b1c :                               .tccontinue
1b1c : 0a80                          mov  r10,r8,#0
1b1d : 00f0 1b34                     mov  r0,#tokconstfetch
1b1f : adf0 0022                     jsr  #osstrtoint
1b21 : b1e0                          skz  r1
1b22 : aff0 1b0f                     jmp  #teexitfail
1b24 : e0e0                          skm  r0
1b25 : aff0 1b2b                     jmp  #_tcnoshift
1b27 : 01f0 3012                     mov  r1,#tok_vbarconstshift
1b29 : 2190                          stm  r1,r9,#0
1b2a : 39e1                          inc  r9
1b2b :                               ._tcnoshift
1b2b : e0e0                          skm  r0
1b2c : 30f0 8000                     add  r0,#$8000
1b2e : 2090                          stm  r0,r9,#0
1b2f : 39e1                          inc  r9
1b30 : 08a0                          mov  r8,r10,#0
1b31 : 58e1                          dec  r8
1b32 : aff0 1b0d                     jmp  #teexitokay
1b34 :                               .tokconstfetch
1b34 : 10a0                          ldm  r0,r10,#0
1b35 : 3ae1                          inc  r10
1b36 : 60f0 007f                     and  r0,#$007f
1b38 : afd0                          ret
1b39 :                               .tokenisepunctuation
1b39 : 0030                          mov  r0,r3,#0
1b3a : 01e2                          mov  r1,#2
1b3b : 02f0 3011                     mov  r2,#tok_percent
1b3d : 70f0 0025                     xor  r0,#'%'
1b3f : c0e0                          sknz  r0
1b40 : aff0 1b16                     jmp  #tokeniseconstantbase
1b42 : 01f0 0010                     mov  r1,#16
1b44 : 02f0 3010                     mov  r2,#tok_ampersand
1b46 : 70e3                          xor  r0,#'%'^'&'
1b47 : c0e0                          sknz  r0
1b48 : aff0 1b16                     jmp  #tokeniseconstantbase
1b4a : 70e4                          xor  r0,#'&'^'"'
1b4b : c0e0                          sknz  r0
1b4c : aff0 1b90                     jmp  #tokenisestringconstant
1b4e : 38e1                          inc  r8
1b4f : 1080                          ldm  r0,r8,#0
1b50 : 6070                          and  r0,r7,#0
1b51 : adf0 18d0                     jsr  #getcharactertype
1b53 : b0e0                          skz  r0
1b54 : aff0 1b61                     jmp  #tokpuncchecksingle
1b56 : 1080                          ldm  r0,r8,#0
1b57 : 38e1                          inc  r8
1b58 : 6070                          and  r0,r7,#0
1b59 : 90e8                          ror  r0,#8
1b5a : 3030                          add  r0,r3,#0
1b5b : adf0 1b6b                     jsr  #tokpunccheckexists
1b5d : b0e0                          skz  r0
1b5e : aff0 1b67                     jmp  #tokpuncwritetoken
1b60 : 58e1                          dec  r8
1b61 :                               .tokpuncchecksingle
1b61 : 0030                          mov  r0,r3,#0
1b62 : adf0 1b6b                     jsr  #tokpunccheckexists
1b64 : c0e0                          sknz  r0
1b65 : aff0 1b0f                     jmp  #teexitfail
1b67 :                               .tokpuncwritetoken
1b67 : 2090                          stm  r0,r9,#0
1b68 : 39e1                          inc  r9
1b69 : aff0 1b0d                     jmp  #teexitokay
1b6b :                               .tokpunccheckexists
1b6b : 5ce3 23c0 24c1 25c2           push  r3,r4,r5
1b6f : 04f0 1d14                     mov  r4,#tokeniserwords
1b71 : 0300                          mov   r3,r0,#0
1b72 : 33f0 8000                     add  r3,#$8000
1b74 : 7550                          clr  r5
1b75 :                               ._tpceloop
1b75 : 1040                          ldm  r0,r4,#0
1b76 : c0e0                          sknz  r0
1b77 : aff0 1b8b                     jmp  #_tpceexit
1b79 : 1041                          ldm  r0,r4,#1
1b7a : 7030                          xor  r0,r3,#0
1b7b : c0e0                          sknz  r0
1b7c : aff0 1b84                     jmp  #_tpcefound
1b7e : 1040                          ldm  r0,r4,#0
1b7f : 6070                          and  r0,r7,#0
1b80 : 3401                          add  r4,r0,#1
1b81 : 35e1                          inc  r5
1b82 : aff0 1b75                     jmp  #_tpceloop
1b84 :                               ._tpcefound
1b84 : 1040                          ldm  r0,r4,#0
1b85 : 60f0 ff00                     and  r0,#$ff00
1b87 : 3000                          add  r0,r0,#0
1b88 : 3050                          add  r0,r5,#0
1b89 : 30f0 2000                     add  r0,#$2000
1b8b :                               ._tpceexit
1b8b : 13c0 14c1 15c2 3ce3           pop  r3,r4,r5
1b8f : afd0                          ret
1b90 :                               .tokenisestringconstant
1b90 : 38e1                          inc  r8
1b91 : 0690                          mov  r6,r9,#0
1b92 : 2e61                          stm  r14,r6,#1
1b93 : 2e62                          stm  r14,r6,#2
1b94 : 0562                          mov  r5,r6,#2
1b95 :                               .tokstringloop
1b95 : 1080                          ldm  r0,r8,#0
1b96 : 6070                          and  r0,r7,#0
1b97 : c0e0                          sknz  r0
1b98 : aff0 1b0f                     jmp  #teexitfail
1b9a : 70f0 0022                     xor  r0,#34
1b9c : c0e0                          sknz  r0
1b9d : aff0 1bb0                     jmp  #tokstringcomplete
1b9f : 1161                          ldm  r1,r6,#1
1ba0 : 31e1                          inc  r1
1ba1 : 2161                          stm  r1,r6,#1
1ba2 : 91e1                          ror  r1,#1
1ba3 : 1080                          ldm  r0,r8,#0
1ba4 : 6070                          and  r0,r7,#0
1ba5 : 38e1                          inc  r8
1ba6 : e1e0                          skm  r1
1ba7 : 90e8                          ror  r0,#8
1ba8 : 1250                          ldm  r2,r5,#0
1ba9 : 3200                          add  r2,r0,#0
1baa : 2250                          stm  r2,r5,#0
1bab : 2e51                          stm  r14,r5,#1
1bac : e1e0                          skm  r1
1bad : 35e1                          inc  r5
1bae : aff0 1b95                     jmp  #tokstringloop
1bb0 :                               .tokstringcomplete
1bb0 : 38e1                          inc  r8
1bb1 : 1061                          ldm  r0,r6,#1
1bb2 : 60e1                          and  r0,#1
1bb3 : b0e0                          skz  r0
1bb4 : 35e1                          inc  r5
1bb5 : 0950                          mov  r9,r5,#0
1bb6 : 5560                          sub  r5,r6,#0
1bb7 : 35f0 0100                     add  r5,#$0100
1bb9 : 2560                          stm  r5,r6,#0
1bba : 65f0 ff00                     and  r5,#$ff00
1bbc : 75f0 0100                     xor  r5,#$0100
1bbe : b5e0                          skz  r5
1bbf : aff0 1b0f                     jmp  #teexitfail
1bc1 : aff0 1b0d                     jmp  #teexitokay
1bc3 :                               .tokeniseidentkeyword
1bc3 : 0690                          mov  r6,r9,#0
1bc4 : 7550                          clr  r5
1bc5 : 2e90                          stm  r14,r9,#0
1bc6 :                               ._tikbuildident
1bc6 : 1080                          ldm  r0,r8,#0
1bc7 : 6070                          and  r0,r7,#0
1bc8 : adf0 0026                     jsr  #osuppercase
1bca : 0300                          mov  r3,r0,#0
1bcb : 01f0 0025                     mov  r1,#37
1bcd : 70f0 002e                     xor  r0,#'.'
1bcf : c0e0                          sknz  r0
1bd0 : aff0 1bdf                     jmp  #_tikhavecharacter
1bd2 : 0030                          mov  r0,r3,#0
1bd3 : adf0 18d0                     jsr  #getcharactertype
1bd5 : c0e0                          sknz  r0
1bd6 : aff0 1bec                     jmp  #_tikhaveident
1bd8 : 0130                          mov  r1,r3,#0
1bd9 : 51f0 0040                     sub  r1,#64
1bdb : 50e1                          dec  r0
1bdc : b0e0                          skz  r0
1bdd : 31f0 002b                     add  r1,#64-48+27
1bdf :                               ._tikhavecharacter
1bdf : b5e0                          skz  r5
1be0 : 81f0 0028                     mult  r1,#40
1be2 : 1090                          ldm  r0,r9,#0
1be3 : 3010                          add  r0,r1,#0
1be4 : 2090                          stm  r0,r9,#0
1be5 : 2e91                          stm  r14,r9,#1
1be6 : b5e0                          skz  r5
1be7 : 39e1                          inc  r9
1be8 : 75e1                          xor  r5,#1
1be9 : 38e1                          inc  r8
1bea : aff0 1bc6                     jmp  #_tikbuildident
1bec :                               ._tikhaveident
1bec : b5e0                          skz  r5
1bed : 39e1                          inc  r9
1bee : 59e1                          dec  r9
1bef : 1090                          ldm  r0,r9,#0
1bf0 : 30f0 2000                     add  r0,#$2000
1bf2 : 2090                          stm  r0,r9,#0
1bf3 : 39e1                          inc  r9
1bf4 : 05f0 4000                     mov  r5,#$4000
1bf6 : 1080                          ldm  r0,r8,#0
1bf7 : 6070                          and  r0,r7,#0
1bf8 : 70f0 0024                     xor  r0,#'$'
1bfa : c0e0                          sknz  r0
1bfb : 35f0 1000                     add  r5,#$1000
1bfd : c0e0                          sknz  r0
1bfe : 38e1                          inc  r8
1bff : 1080                          ldm  r0,r8,#0
1c00 : 6070                          and  r0,r7,#0
1c01 : 70f0 0028                     xor  r0,#'('
1c03 : c0e0                          sknz  r0
1c04 : 35f0 0800                     add  r5,#$0800
1c06 : c0e0                          sknz  r0
1c07 : 38e1                          inc  r8
1c08 : 0160                          mov  r1,r6,#0
1c09 :                               ._tikapplytyping
1c09 : 1010                          ldm  r0,r1,#0
1c0a : 3050                          add  r0,r5,#0
1c0b : 2010                          stm  r0,r1,#0
1c0c : 31e1                          inc  r1
1c0d : 0010                          mov  r0,r1,#0
1c0e : 7090                          xor  r0,r9,#0
1c0f : b0e0                          skz  r0
1c10 : aff0 1c09                     jmp  #_tikapplytyping
1c12 : 04f0 1d14                     mov  r4,#tokeniserwords
1c14 : 0590                          mov  r5,r9,#0
1c15 : 5560                          sub  r5,r6,#0
1c16 : 7bb0                          clr  r11
1c17 :                               ._tikcheckidentifier
1c17 : 1040                          ldm  r0,r4,#0
1c18 : c0e0                          sknz  r0
1c19 : aff0 1b0d                     jmp  #teexitokay
1c1b : 6070                          and  r0,r7,#0
1c1c : 0300                          mov  r3,r0,#0
1c1d : 7050                          xor  r0,r5,#0
1c1e : b0e0                          skz  r0
1c1f : aff0 1c3c                     jmp  #_tiknext
1c21 : 0160                          mov  r1,r6,#0
1c22 : 0241                          mov  r2,r4,#1
1c23 :                               ._tikcheckword
1c23 : 1010                          ldm  r0,r1,#0
1c24 : 1a20                          ldm  r10,r2,#0
1c25 : 70a0                          xor  r0,r10,#0
1c26 : b0e0                          skz  r0
1c27 : aff0 1c3c                     jmp  #_tiknext
1c29 : 31e1                          inc  r1
1c2a : 32e1                          inc  r2
1c2b : 53e1                          dec  r3
1c2c : b3e0                          skz  r3
1c2d : aff0 1c23                     jmp  #_tikcheckword
1c2f : 1040                          ldm  r0,r4,#0
1c30 : 60f0 ff00                     and  r0,#$ff00
1c32 : 3000                          add  r0,r0,#0
1c33 : 30b0                          add  r0,r11,#0
1c34 : 30f0 2000                     add  r0,#$2000
1c36 : 0960                          mov  r9,r6,#0
1c37 : 2090                          stm  r0,r9,#0
1c38 : 2e91                          stm  r14,r9,#1
1c39 : 39e1                          inc  r9
1c3a : aff0 1b0d                     jmp  #teexitokay
1c3c :                               ._tiknext
1c3c : 1040                          ldm  r0,r4,#0
1c3d : 6070                          and  r0,r7,#0
1c3e : 3401                          add  r4,r0,#1
1c3f : 3be1                          inc  r11
1c40 : aff0 1c17                     jmp  #_tikcheckidentifier
1c42 :                               .comparer0r1
1c42 : 1200                          ldm  r2,r0,#0
1c43 : 1310                          ldm  r3,r1,#0
1c44 : 30e1                          inc  r0
1c45 : 31e1                          inc  r1
1c46 : 7230                          xor  r2,r3,#0
1c47 : b2e0                          skz  r2
1c48 : 0000                          break
1c49 : b3e0                          skz  r3
1c4a : aff0 1c42                     jmp  #comparer0r1
1c4c : afd0                          ret
1c4d :                               .varerasehashtables
1c4d : 00f0 40a9                     mov  r0,#variablehashtable
1c4f : 01f0 0040                     mov  r1,#hashtablesize*4
1c51 :                               ._vehtloop
1c51 : 2e00                          stm  r14,r0,#0
1c52 : 30e1                          inc  r0
1c53 : 51e1                          dec  r1
1c54 : b1e0                          skz  r1
1c55 : aff0 1c51                     jmp  #_vehtloop
1c57 : afd0                          ret
1c58 :                               .getvariablereference
1c58 : 10b0                          ldm  r0,r11,#0
1c59 : 50f0 6000                     sub  r0,#$6000
1c5b : 50f0 001b                     sub  r0,#26+1
1c5d : ffe0                          sklt  r0
1c5e : aff0 1c68                     jmp  #_gvrnotfixedvariable
1c60 : 01f0 40a9                     mov  r1,#fixedvariables+26
1c62 : 3100                          add  r1,r0,#0
1c63 : 21a0                          stm  r1,r10,#esvalue1
1c64 : 2fa2                          stm  r15,r10,#esreference1
1c65 : 2ea1                          stm  r14,r10,#estype1
1c66 : 3be1                          inc  r11
1c67 : afd0                          ret
1c68 :                               ._gvrnotfixedvariable
1c68 : 5ce8 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,r5,r6,link
1c71 : adf0 1c9b                     jsr  #findvariable
1c73 : b0e0                          skz  r0
1c74 : aff0 1c7e                     jmp  #_gvrhavevariable
1c76 :                               ._gvrnotfound
1c76 : 10b0                          ldm  r0,r11,#0
1c77 : 90ec                          ror  r0,#12
1c78 : d0e0                          skp  r0
1c79 : aff0 1949                     jmp  #arrayautoerror
1c7b : 00e3                          mov  r0,#3
1c7c : adf0 1cc3                     jsr  #createvariablerecord
1c7e :                               ._gvrhavevariable
1c7e : 11b0                          ldm  r1,r11,#0
1c7f : 0210                          mov  r2,r1,#0
1c80 : 3be1                          inc  r11
1c81 : 91ee                          ror  r1,#14
1c82 : e1e0                          skm  r1
1c83 : aff0 1c7e                     jmp  #_gvrhavevariable
1c85 : 91ee                          ror  r1,#14
1c86 : d1e0                          skp  r1
1c87 : adf0 1ce1                     jsr  #indexarray
1c89 : e1e0                          skm  r1
1c8a : 30e2                          add  r0,#2
1c8b : 20a0                          stm  r0,r10,#esvalue1
1c8c : 2fa2                          stm  r15,r10,#esreference1
1c8d : 62f0 1000                     and  r2,#$1000
1c8f : 22a1                          stm  r2,r10,#estype1
1c90 : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,r5,r6,link
1c99 : afd0                          ret
1c9a :                               ._gvrnullstring
1c9a : 0000                          word  0
1c9b :                               .findvariable
1c9b : 10b0                          ldm  r0,r11,#0
1c9c : 60f0 c000                     and  r0,#$c000
1c9e : 70f0 4000                     xor  r0,#$4000
1ca0 : b0e0                          skz  r0
1ca1 : aff0 18f7                     jmp  #syntaxerror
1ca3 : 16b0                          ldm  r6,r11,#0
1ca4 : 0060                          mov  r0,r6,#0
1ca5 : 90e6                          ror  r0,#6
1ca6 : 3600                          add  r6,r0,#0
1ca7 : 66ef                          and  r6,#hashtablesize-1
1ca8 : 10b0                          ldm  r0,r11,#0
1ca9 : 60f0 1800                     and  r0,#$1800
1cab : 90e7                          ror  r0,#11-hashtablepower
1cac : 3600                          add  r6,r0,#0
1cad : 36f0 40a9                     add  r6,#variablehashtable
1caf : 0060                          mov  r0,r6,#0
1cb0 :                               ._fvrsearch
1cb0 : 1000                          ldm  r0,r0,#0
1cb1 : c0e0                          sknz  r0
1cb2 : aff0 1cc2                     jmp  #_fvrexit
1cb4 : 1101                          ldm  r1,r0,#1
1cb5 : 02b0                          mov  r2,r11,#0
1cb6 :                               ._fvrcompare
1cb6 : 1310                          ldm  r3,r1,#0
1cb7 : 1420                          ldm  r4,r2,#0
1cb8 : 7340                          xor  r3,r4,#0
1cb9 : b3e0                          skz  r3
1cba : aff0 1cb0                     jmp  #_fvrsearch
1cbc : 31e1                          inc  r1
1cbd : 32e1                          inc  r2
1cbe : 94ee                          ror  r4,#14
1cbf : e4e0                          skm  r4
1cc0 : aff0 1cb6                     jmp  #_fvrcompare
1cc2 :                               ._fvrexit
1cc2 : afd0                          ret
1cc3 :                               .createvariablerecord
1cc3 : 11f0 4028                     ldm  r1,#memallocbottom
1cc5 : 1260                          ldm  r2,r6,#0
1cc6 : 2210                          stm  r2,r1,#0
1cc7 : 2b11                          stm  r11,r1,#1
1cc8 : 13b0                          ldm  r3,r11,#0
1cc9 : 93ed                          ror  r3,#13
1cca : 7220                          clr  r2
1ccb : d3e0                          skp  r3
1ccc : 02f0 1c9a                     mov  r2,#_gvrnullstring
1cce : 2212                          stm  r2,r1,#2
1ccf : 0210                          mov  r2,r1,#0
1cd0 : 3200                          add  r2,r0,#0
1cd1 : ffe0                          sknc
1cd2 : aff0 1937                     jmp  #memoryerror
1cd4 : 22f0 4028                     stm  r2,#memallocbottom
1cd6 : 13f0 4027                     ldm  r3,#memalloctop
1cd8 : 53f0 0100                     sub  r3,#256
1cda : 5230                          sub  r2,r3,#0
1cdb : ffe0                          sklt
1cdc : aff0 1937                     jmp  #memoryerror
1cde : 2160                          stm  r1,r6,#0
1cdf : 0010                          mov  r0,r1,#0
1ce0 : afd0                          ret
1ce1 :                               .indexarray
1ce1 : 5ce5 21c0 22c1 23c2 24c3      push  r1,r2,r3,r4,link
1ce7 : 0300                          mov  r3,r0,#0
1ce8 : adf0 16d0                     jsr  #evaluateinteger
1cea : 1232                          ldm  r2,r3,#2
1ceb : 5200                          sub  r2,r0,#0
1cec : ffe1                          skge
1ced : aff0 192f                     jmp  #badindexerror
1cef : 11b0                          ldm  r1,r11,#0
1cf0 : 71f0 3229                     xor  r1,#tok_comma
1cf2 : c1e0                          sknz  r1
1cf3 : aff0 1d03                     jmp  #_iadimension2
1cf5 : 1233                          ldm  r2,r3,#3
1cf6 : b2e0                          skz  r2
1cf7 : aff0 1941                     jmp  #missingcommaerror
1cf9 :                               ._iadone
1cf9 : 3034                          add  r0,r3,#4
1cfa : adf0 18b8                     jsr  #checkrightbracket
1cfc : 11c0 12c1 13c2 14c3 1dc4      pop  r1,r2,r3,r4,link
1d02 : afd0                          ret
1d03 :                               ._iadimension2
1d03 : 3be1                          inc  r11
1d04 : 0400                          mov  r4,r0,#0
1d05 : adf0 16d0                     jsr  #evaluateinteger
1d07 : 1233                          ldm  r2,r3,#3
1d08 : c2e0                          sknz  r2
1d09 : aff0 191f                     jmp  #missingbracketerror
1d0b : 5200                          sub  r2,r0,#0
1d0c : ffe1                          skge
1d0d : aff0 192f                     jmp  #badindexerror
1d0f : 1232                          ldm  r2,r3,#2
1d10 : 8021                          mult  r0,r2,#1
1d11 : 3040                          add  r0,r4,#0
1d12 : aff0 1cf9                     jmp  #_iadone
1d14 :                               .tokeniserwords
1d14 : 0102 4231 6004                word $0102,$4231,$6004
1d17 : 0101 62df                     word $0101,$62df
1d19 : 0102 4270 6012                word $0102,$4270,$6012
1d1c : 0201 803e                     word $0201,$803e
1d1e : 0201 bd3e                     word $0201,$bd3e
1d20 : 0201 803c                     word $0201,$803c
1d22 : 0201 bd3c                     word $0201,$bd3c
1d24 : 0201 803d                     word $0201,$803d
1d26 : 0201 be3c                     word $0201,$be3c
1d28 : 0301 802b                     word $0301,$802b
1d2a : 0301 802d                     word $0301,$802d
1d2c : 0401 802a                     word $0401,$802a
1d2e : 0401 802f                     word $0401,$802f
1d30 : 0402 4265 6004                word $0402,$4265,$6004
1d33 : 0501 8021                     word $0501,$8021
1d35 : 0801 8028                     word $0801,$8028
1d37 : 0801 8026                     word $0801,$8026
1d39 : 0801 8025                     word $0801,$8025
1d3b : 0801 ffff                     word $0801,$ffff
1d3d : 0802 4851 6813                word $0802,$4851,$6813
1d40 : 0802 4af9 6803                word $0802,$4af9,$6803
1d43 : 0802 5943 7812                word $0802,$5943,$7812
1d46 : 0802 48cf 6814                word $0802,$48cf,$6814
1d49 : 0802 58cf 7814                word $0802,$58cf,$7814
1d4c : 0803 4a39 48d3 6819           word $0803,$4a39,$48d3,$6819
1d50 : 0803 5a39 58d3 7819           word $0803,$5a39,$58d3,$7819
1d54 : 0802 58d4 7b26                word $0802,$58d4,$7b26
1d57 : 0802 48d4 680e                word $0802,$48d4,$680e
1d5a : 0802 5975 7804                word $0802,$5975,$7804
1d5d : 0802 48d8 69bd                word $0802,$48d8,$69bd
1d60 : 0803 597a 5947 7814           word $0803,$597a,$5947,$7814
1d64 : 0802 4a42 6804                word $0802,$4a42,$6804
1d67 : 0802 492b 680e                word $0802,$492b,$680e
1d6a : 0802 5b33 7812                word $0802,$5b33,$7812
1d6d : 0802 483e 680c                word $0802,$483e,$680c
1d70 : 0803 48d4 4926 6954           word $0803,$48d4,$4926,$6954
1d74 : 0803 483a 48ae 6a17           word $0803,$483a,$48ae,$6a17
1d78 : 0805 5a6c 5b1d 5ae4 5a39      word $0805,$5a6c,$5b1d,$5ae4,$5a39,$7807
1d7e : 0805 4a6c 4a55 4a1d 48ca      word $0805,$4a6c,$4a55,$4a1d,$48ca,$6812
1d84 : 0802 497b 6a37                word $0802,$497b,$6a37
1d87 : 0901 8029                     word $0901,$8029
1d89 : 0901 802c                     word $0901,$802c
1d8b : 0901 803b                     word $0901,$803b
1d8d : 0901 626c                     word $0901,$626c
1d8f : 0902 4333 6285                word $0902,$4333,$6285
1d92 : 0f02 425e 6012                word $0f02,$425e,$6012
1d95 : 0f01 60f9                     word $0f01,$60f9
1d97 : 0f03 40da 40d8 6321           word $0f03,$40da,$40d8,$6321
1d9b : 0f03 4157 41e9 6005           word $0f03,$4157,$41e9,$6005
1d9f : 0f02 42e0 6087                word $0f02,$42e0,$6087
1da2 : 0d03 4235 416c 6006           word $0d03,$4235,$416c,$6006
1da6 : 0d02 40d6 6338                word $0d02,$40d6,$6338
1da9 : 0d02 4154 6235                word $0d02,$4154,$6235
1dac : 0d03 4245 417c 600c           word $0d03,$4245,$417c,$600c
1db0 : 0d02 40df 60ae                word $0d02,$40df,$60ae
1db3 : 0d04 4235 4284 426a 6003      word $0d04,$4235,$4284,$426a,$6003
1db8 : 0e01 8027                     word $0e01,$8027
1dba : 0e01 803a                     word $0e01,$803a
1dbc : 0e03 42f9 40db 6332           word $0e03,$42f9,$40db,$6332
1dc0 : 0e02 402b 61ec                word $0e02,$402b,$61ec
1dc3 : 0e03 41e3 402d 6012           word $0e03,$41e3,$402d,$6012
1dc7 : 0e02 416c 600d                word $0e02,$416c,$600d
1dca : 0e02 41e5 60db                word $0e02,$41e5,$60db
1dcd : 0e02 4235 6004                word $0e02,$4235,$6004
1dd0 : 0e03 425f 435b 6002           word $0e03,$425f,$435b,$6002
1dd4 : 0e02 425f 626c                word $0e02,$425f,$626c
1dd7 : 0e03 4239 4358 6014           word $0e03,$4239,$4358,$6014
1ddb : 0e02 40d4 6014                word $0e02,$40d4,$6014
1dde : 0e02 4174 6333                word $0e02,$4174,$6333
1de1 : 0e02 4264 60a1                word $0e02,$4264,$60a1
1de4 : 0e02 40d6 6017                word $0e02,$40d6,$6017
1de7 : 0e02 41ef 6004                word $0e02,$41ef,$6004
1dea : 0e02 4268 60d3                word $0e02,$4268,$60d3
1ded : 0e03 42e0 4239 6014           word $0e03,$42e0,$4239,$6014
1df1 : 0e02 40da 600d                word $0e02,$40da,$600d
1df4 : 0e03 40da 435c 6242           word $0e03,$40da,$435c,$6242
1df8 : 0e02 435a 600e                word $0e02,$435a,$600e
1dfb : 0e02 403b 60de                word $0e02,$403b,$60de
1dfe : 0e02 4333 628f                word $0e02,$4333,$628f
1e01 : 0e02 43fb 6013                word $0e02,$43fb,$6013
1e04 : 0000                          word $0000
1e05 :                               .tokenvectors
1e05 : 153f                          word binaryop_and
1e06 : 154a                          word binaryop_or
1e07 : 155b                          word binaryop_xor
1e08 : 15f6                          word binaryop_greater
1e09 : 15af                          word binaryop_greaterequal
1e0a : 15fc                          word binaryop_less
1e0b : 15d5                          word binaryop_lessequal
1e0c : 15eb                          word binaryop_equal
1e0d : 1599                          word binaryop_notequal
1e0e : 14fc                          word binaryop_add
1e0f : 150b                          word binaryop_sub
1e10 : 1516                          word binaryop_mult
1e11 : 1521                          word binaryop_divide
1e12 : 1530                          word binaryop_mod
1e13 : 1566                          word binaryop_indirect
1e14 : 17b3                          word unary_parenthesis
1e15 : 17b1                          word unary_hex
1e16 : 17b1                          word unary_bin
1e17 : 16a8                          word constshifthandler
1e18 : 17bc                          word unary_abs
1e19 : 17e6                          word unary_asc
1e1a : 186d                          word unary_chr
1e1b : 180e                          word unary_get
1e1c : 1882                          word unary_getstring
1e1d : 17ff                          word unary_inkey
1e1e : 1889                          word unary_inkeystring
1e1f : 1790                          word unary_left
1e20 : 17da                          word unary_len
1e21 : 173e                          word unary_mid
1e22 : 17f4                          word unary_peek
1e23 : 179d                          word unary_right
1e24 : 181b                          word unary_rnd
1e25 : 17ca                          word unary_sgn
1e26 : 1890                          word unary_str
1e27 : 183c                          word unary_val
1e28 : 17da                          word unary_len2
1e29 : 181b                          word unary_rnd2
1e2a : 1890                          word unary_str2
1e2b : 183c                          word unary_val2
1e2c : 17ca                          word unary_sgn2
1e2d : 13d3                          word dummy1
1e2e : 13d3                          word dummy2
1e2f : 13d3                          word dummy3
1e30 : 13d3                          word dummy4
1e31 : 13d3                          word dummy5
1e32 : 10ef                          word command_for
1e33 : 1159                          word command_if
1e34 : 143f                          word command_repeat
1e35 : 14d4                          word command_while
1e36 : 104e                          word command_proc
1e37 : 119e                          word command_endif
1e38 : 1124                          word command_next
1e39 : 13d3                          word dummy6
1e3a : 1449                          word command_until
1e3b : 14ed                          word command_wend
1e3c : 1050                          word command_endproc
1e3d : 13c7                          word commentcommand1
1e3e : 13d2                          word colonhandler
1e3f : 13a7                          word commandassert
1e40 : 102b                          word command_call
1e41 : 1088                          word command_clear
1e42 : 10a4                          word command_dim
1e43 : 118c                          word command_else
1e44 : 101a                          word warmstart
1e45 : 14b6                          word command_gosub
1e46 : 149e                          word command_goto
1e47 : 11ab                          word command_input
1e48 : 11d8                          word command_let
1e49 : 11fc                          word command_list
1e4a : 18f7                          word syntaxerror
1e4b : 13d3                          word command_new
1e4c : 13da                          word command_old
1e4d : 13af                          word commandpoke
1e4e : 13f8                          word command_print
1e4f : 13c7                          word commentcommand2
1e50 : 14c5                          word command_return
1e51 : 1460                          word runprogram
1e52 : 18f7                          word syntaxerror
1e53 : 1968                          word stoperror
1e54 : 13bc                          word commandsys
1e55 :                               .basicprogram
1e55 : 0011 03e8 3c49 3022 0103      word $0011,$03e8,$3c49,$3022,$0103,$0002,$3234,$32
1f4e : 0000                          word $0000
1f4f :                               .endbasicprogram
1f4f :                               .testtokeniserroutine
1f4f : 00f0 1f59                     mov r0,#tokentest
1f51 : adf0 1acb                     jsr #tokenisestring
1f53 : 01f0 1fb0                     mov r1,#testresults
1f55 : adf0 1c42                     jsr #comparer0r1
1f57 : aff0 ffff                     jmp #$ffff
1f59 :                               .tokentest
1f59 : 3625 9031 e831 c631 7130      word $3625,$9031,$e831,$c631,$7130,$9731,$c830,$2a
1fb0 :                               .testresults
1fb0 : 3011 f500 2408 6005 3027      word $3011,$f500,$2408,$6005,$3027,$8ebb,$4210,$64
4023 :                               .initialsp
4024 :                               .currentline
4025 :                               .programcode
4026 :                               .endmemory
4027 :                               .memalloctop
4028 :                               .memallocbottom
4029 :                               .proctable
402a :                               .tempstringalloc
402b :                               .returnstacktop
402c :                               .returnstackbottom
402d :                               .returnstackptr
402e :                               .lastlisttoken
402f :                               .evalstack
408f :                               .fixedvariables
40a9 :                               .variablehashtable
40e9 :                               .tokenbuffer
41e9 :                               .inputbuffer
4212 :                               .endofdata
4212 :                               freebasiccode = ramstart + $200
