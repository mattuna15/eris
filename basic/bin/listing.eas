0000 :                               ramstart=$4000
0000 :                               kernelend=$1000
0000 :                               pixelwidth=$0140
0000 :                               pixelheight=$00f0
0000 :                               charwidth=$0028
0000 :                               charheight=$001e
0000 :                               blitterbase=$ff20
0000 :                               blitterstatus=$ff20
0000 :                               blitterx=$ff20
0000 :                               blittery=$ff21
0000 :                               blitterdata=$ff22
0000 :                               blittercmask=$ff23
0000 :                               blittercmd=$ff24
0000 :                               paletteregister=$ff10
0000 :                               keyboardport=$ff00
0000 :                               hwtimer=$ff30
0000 :                               audioclock=$4b40
0000 :                               sndnoise=$ff40
0000 :                               sndtone1=$ff41
0000 :                               sndtone2=$ff42
0000 :                               repeatdelay=$0050
0000 :                               repeatspeed=$000a
0000 :                               tabstop=$0004
0000 :                               maxistrsize=$000a
0000 :                               oswaitblitter=$0002
0000 :                               osprintcharacter=$0004
0000 :                               osprintinline=$0006
0000 :                               osprintstring=$0008
0000 :                               osgetkeyboard=$000a
0000 :                               osdrawcharacter=$000c
0000 :                               osdrawsolidcharacter=$000e
0000 :                               oscursorget=$0010
0000 :                               oslineinput=$0012
0000 :                               osudivide16=$0014
0000 :                               ossdivide16=$0016
0000 :                               osrandom16=$0018
0000 :                               osstrtoint=$001a
0000 :                               osinttostr=$001c
0000 :                               osuppercase=$001e
0000 :                               oslowercase=$0020
0000 :                               oswordlength=$0022
0000 :                               osmanager=$0024
0000 :                               osbeep=$0025
0000 :                               bootcode=$0027
0000 :                               palettetable=$0089
0000 :                               osxcursorget=$0091
0000 :                               osxgetkeyboard=$00c0
0000 :                               osxlineinput=$0150
0000 :                               osxwaitblitter=$016e
0000 :                               osiclearscreen=$0178
0000 :                               osifillscreen=$0189
0000 :                               osxdrawsolidcharacter=$01aa
0000 :                               osxdrawcharacter=$01bc
0000 :                               osxprintcharacter=$01e9
0000 :                               osxprintstring=$030b
0000 :                               osxprintinline=$0314
0000 :                               osxbeep=$0336
0000 :                               osxudivide16=$034a
0000 :                               osxsdivide16=$0364
0000 :                               osxrandom16=$037d
0000 :                               osxstrtoint=$038d
0000 :                               osxinttostr=$03cd
0000 :                               osxuppercase=$0414
0000 :                               osxlowercase=$0426
0000 :                               osxwordlength=$0438
0000 :                               keyboardmapping=$043e
0000 :                               shifttable=$0466
0000 :                               bootprompt=$047a
0000 :                               fontdata=$0d00
0000 :                               initialisedstart=$4000
0000 :                               highmemory=$4000
0000 :                               textmemory=$4001
0000 :                               xgraphic=$4002
0000 :                               ygraphic=$4003
0000 :                               colourmask=$4004
0000 :                               fgrcolour=$4005
0000 :                               bgrcolour=$4006
0000 :                               xtextpos=$4007
0000 :                               ytextpos=$4008
0000 :                               currentkey=$4009
0000 :                               currentrowstatus=$400a
0000 :                               keyrepeattime=$400f
0000 :                               initialisedend=$4010
0000 :                               randomseed=$4010
0000 :                               convbuffer=$4011
0000 :                               fontbuffer=$401b
0000 :                               freememory=$4023
0000 :                               tok_and = $2200
0000 :                               tok_or = $2201
0000 :                               tok_xor = $2202
0000 :                               tok_greater = $2403
0000 :                               tok_greaterequal = $2404
0000 :                               tok_less = $2405
0000 :                               tok_lessequal = $2406
0000 :                               tok_equal = $2407
0000 :                               tok_lessgreater = $2408
0000 :                               tok_plus = $2609
0000 :                               tok_minus = $260a
0000 :                               tok_star = $280b
0000 :                               tok_slash = $280c
0000 :                               tok_mod = $280d
0000 :                               tok_pling = $2a0e
0000 :                               tok_lparen = $300f
0000 :                               tok_ampersand = $3010
0000 :                               tok_percent = $3011
0000 :                               tok_vbarconstshift = $3012
0000 :                               tok_abslparen = $3013
0000 :                               tok_asclparen = $3014
0000 :                               tok_chrdollarlparen = $3015
0000 :                               tok_getlparen = $3016
0000 :                               tok_getdollarlparen = $3017
0000 :                               tok_inkeylparen = $3018
0000 :                               tok_inkeydollarlparen = $3019
0000 :                               tok_leftdollarlparen = $301a
0000 :                               tok_lenlparen = $301b
0000 :                               tok_middollarlparen = $301c
0000 :                               tok_peeklparen = $301d
0000 :                               tok_rightdollarlparen = $301e
0000 :                               tok_rndlparen = $301f
0000 :                               tok_sgnlparen = $3020
0000 :                               tok_strdollarlparen = $3021
0000 :                               tok_vallparen = $3022
0000 :                               tok_lengthlparen = $3023
0000 :                               tok_randomlparen = $3024
0000 :                               tok_todotstringdollarlparen = $3025
0000 :                               tok_todotnumberlparen = $3026
0000 :                               tok_signlparen = $3027
0000 :                               tok_rparen = $3228
0000 :                               tok_comma = $3229
0000 :                               tok_semicolon = $322a
0000 :                               tok_to = $322b
0000 :                               tok_step = $322c
0000 :                               tok_for = $3e2d
0000 :                               tok_if = $3e2e
0000 :                               tok_repeat = $3e2f
0000 :                               tok_while = $3e30
0000 :                               tok_endif = $3a31
0000 :                               tok_next = $3a32
0000 :                               tok_then = $3a33
0000 :                               tok_until = $3a34
0000 :                               tok_wend = $3a35
0000 :                               tok_quote = $3c36
0000 :                               tok_colon = $3c37
0000 :                               tok_assert = $3c38
0000 :                               tok_call = $3c39
0000 :                               tok_clear = $3c3a
0000 :                               tok_dim = $3c3b
0000 :                               tok_else = $3c3c
0000 :                               tok_end = $3c3d
0000 :                               tok_endproc = $3c3e
0000 :                               tok_gosub = $3c3f
0000 :                               tok_goto = $3c40
0000 :                               tok_input = $3c41
0000 :                               tok_let = $3c42
0000 :                               tok_list = $3c43
0000 :                               tok_load = $3c44
0000 :                               tok_new = $3c45
0000 :                               tok_old = $3c46
0000 :                               tok_poke = $3c47
0000 :                               tok_print = $3c48
0000 :                               tok_proc = $3c49
0000 :                               tok_rem = $3c4a
0000 :                               tok_return = $3c4b
0000 :                               tok_run = $3c4c
0000 :                               tok_save = $3c4d
0000 :                               tok_stop = $3c4e
0000 :                               tok_sys = $3c4f
0000 :                               maxstringsize = 255
0000 :                               extrastringalloc = 8
0000 :                               hashtablesize = 16
0000 :                               hashtablepower = 4
0000 :                               stacksize = 32
0000 :                               stackelementsize = 3
0000 :                               esvalue1 = 0
0000 :                               estype1 = 1
0000 :                               esreference1 = 2
0000 :                               esvalue2 = 0+stackelementsize
0000 :                               estype2 = 1+stackelementsize
0000 :                               esreference2 = 2+stackelementsize
0000 :                               returnstacksize = 256
0000 :                               stackpossize = 2
1000 :                               .coldstart
1000 : 5ce1                          dec  sp
1001 : 2cf0 402b                     stm  sp,#returnstacktop
1003 : 5cf0 0100                     sub  sp,#returnstacksize
1005 : 2cf0 402c                     stm  sp,#returnstackbottom
1007 : 2cf0 4023                     stm  sp,#initialsp
1009 : 00f0 4200                     mov  r0,#freebasiccode
100b : 20f0 4025                     stm  r0,#programcode
100d : aff0 134f                     jmp  #runprogram
100f : adf0 12b7                     jsr  #command_new
1011 :                               .warmstart
1011 : 1cf0 4023                     ldm  sp,#initialsp
1013 : 00f0 0012                     mov  r0,#$12
1015 : ade4                          jsr  #osprintcharacter
1016 : adf0 0012                     .h1  jsr  #oslineinput
1018 : 0000                          break
1019 : aff0 1016                     jmp  #h1
101b :                               .command_call
101b : 5ce1 2dc0                     push  link
101d : 11f0 4029                     ldm  r1,#proctable
101f :                               ._ccaloop
101f : 1210                          ldm  r2,r1,#0
1020 : 31e1                          inc  r1
1021 : c1e0                          sknz  r1
1022 : aff0 1846                     jmp  #callerror
1024 : 0323                          mov  r3,r2,#3
1025 : 04b0                          mov  r4,r11,#0
1026 :                               ._ccacheck
1026 : 1030                          ldm  r0,r3,#0
1027 : 1540                          ldm  r5,r4,#0
1028 : 33e1                          inc  r3
1029 : 34e1                          inc  r4
102a : 7050                          xor  r0,r5,#0
102b : b0e0                          skz  r0
102c : aff0 101f                     jmp  #_ccaloop
102e : 95ee                          ror  r5,#14
102f : e5e0                          skm  r5
1030 : aff0 1026                     jmp  #_ccacheck
1032 : 0b40                          mov  r11,r4,#0
1033 : adf0 1928                     jsr  #stackpushposition
1035 : adf0 1939                     jsr  #stackpushmarker
1037 : 0063                          word  'c'
1038 : 0b30                          mov  r11,r3,#0
1039 : 22f0 4024                     stm  r2,#currentline
103b : 1dc0 3ce1                     pop  link
103d : afd0                          ret
103e :                               .command_proc
103e : aff0 17e1                     jmp  #syntaxerror
1040 :                               .command_endproc
1040 : 5ce1 2dc0                     push  link
1042 : adf0 1948                     jsr  #stackcheckmarker
1044 : 0063                          word  'c'
1045 : aff0 18a7                     jmp  #endprocerror
1047 : adf0 1932                     jsr  #stackpopposition
1049 : 00e3                          mov  r0,#1+stackpossize
104a : adf0 1951                     jsr  #stackpopwords
104c : 1dc0 3ce1                     pop  link
104e : afd0                          ret
104f :                               .scanforprocedures
104f : 12f0 4028                     ldm  r2,#memallocbottom
1051 : 22f0 4029                     stm  r2,#proctable
1053 : 13f0 4025                     ldm  r3,#programcode
1055 :                               ._sfploop
1055 : 1030                          ldm  r0,r3,#0
1056 : c0e0                          sknz  r0
1057 : aff0 1073                     jmp  #_sfpexit
1059 : 1132                          ldm  r1,r3,#2
105a : 71f0 3c49                     xor  r1,#tok_proc
105c : b1e0                          skz  r1
105d : aff0 1070                     jmp  #_sfpnext
105f : 1133                          ldm  r1,r3,#3
1060 : 61f0 c000                     and  r1,#$c000
1062 : 71f0 4000                     xor  r1,#$4000
1064 : b1e0                          skz  r1
1065 : aff0 1070                     jmp  #_sfpnext
1067 : 2320                          stm  r3,r2,#0
1068 : 32e1                          inc  r2
1069 : 0124                          mov  r1,r2,#4
106a : 14f0 4027                     ldm  r4,#memalloctop
106c : 5140                          sub  r1,r4,#0
106d : ffe0                          sklt
106e : aff0 1821                     jmp  #memoryerror
1070 :                               ._sfpnext
1070 : 3300                          add  r3,r0,#0
1071 : aff0 1055                     jmp  #_sfploop
1073 :                               ._sfpexit
1073 : 2e20                          stm  r14,r2,#0
1074 : 32e1                          inc  r2
1075 : 22f0 4028                     stm  r2,#memallocbottom
1077 : afd0                          ret
1078 :                               .command_clear
1078 : 5ce1 2dc0                     push  link
107a : 00c0                          mov  r0,sp,#0
107b : 50f0 0200                     sub  r0,#512
107d : 20f0 4026                     stm  r0,#endmemory
107f : 20f0 4027                     stm   r0,#memalloctop
1081 : adf0 19b5                     jsr  #varerasehashtables
1083 : 10f0 4025                     ldm  r0,#programcode
1085 :                               ._ccfindend
1085 : 1100                          ldm  r1,r0,#0
1086 : 3010                          add  r0,r1,#0
1087 : b1e0                          skz  r1
1088 : aff0 1085                     jmp  #_ccfindend
108a : 30e1                          inc  r0
108b : 20f0 4028                     stm  r0,#memallocbottom
108d : adf0 1922                     jsr  #stackreset
108f : adf0 104f                     jsr  #scanforprocedures
1091 : 1dc0 3ce1                     pop  link
1093 : afd0                          ret
1094 :                               .command_dim
1094 : 5ce1 2dc0                     push  link
1096 :                               ._cdinextarray
1096 : 10b0                          ldm  r0,r11,#0
1097 : 90ec                          ror  r0,#12
1098 : e0e0                          skm  r0
1099 : aff0 17e1                     jmp  #syntaxerror
109b : adf0 1a03                     jsr  #findvariable
109d : b0e0                          skz  r0
109e : aff0 183d                     jmp  #arrayexistserror
10a0 : 07b0                          mov  r7,r11,#0
10a1 :                               ._cdiadvance
10a1 : 11b0                          ldm  r1,r11,#0
10a2 : 0210                          mov  r2,r1,#0
10a3 : 3be1                          inc  r11
10a4 : 91ee                          ror  r1,#14
10a5 : e1e0                          skm  r1
10a6 : aff0 10a1                     jmp  #_cdiadvance
10a8 : adf0 15bf                     jsr  #evaluateinteger
10aa : 0500                          mov  r5,r0,#0
10ab : 7880                          clr  r8
10ac : 10b0                          ldm  r0,r11,#0
10ad : 70f0 3229                     xor  r0,#tok_comma
10af : b0e0                          skz  r0
10b0 : aff0 10b9                     jmp  #_cdihavedimension
10b2 : 3be1                          inc  r11
10b3 : adf0 15bf                     jsr  #evaluateinteger
10b5 : 0800                          mov  r8,r0,#0
10b6 : c8e0                          sknz  r8
10b7 : aff0 1811                     jmp  #badnumbererror
10b9 :                               ._cdihavedimension
10b9 : adf0 17a2                     jsr  #checkrightbracket
10bb : 0051                          mov  r0,r5,#1
10bc : 0181                          mov  r1,r8,#1
10bd : 8010                          mult  r0,r1,#0
10be : ffe0                          sknc
10bf : aff0 1811                     jmp  #badnumbererror
10c1 : 0400                          mov  r4,r0,#0
10c2 : 30e4                          add  r0,#4
10c3 : 5ce1 2bc0                     push  r11
10c5 : 0b70                          mov  r11,r7,#0
10c6 : adf0 1a2b                     jsr  #createvariablerecord
10c8 : 1bc0 3ce1                     pop  r11
10ca : 0104                          mov  r1,r0,#4
10cb : 1202                          ldm  r2,r0,#2
10cc :                               ._cdifill
10cc : 2210                          stm  r2,r1,#0
10cd : 31e1                          inc  r1
10ce : 54e1                          dec  r4
10cf : b4e0                          skz  r4
10d0 : aff0 10cc                     jmp  #_cdifill
10d2 : 2502                          stm  r5,r0,#2
10d3 : 2803                          stm  r8,r0,#3
10d4 : 10b0                          ldm  r0,r11,#0
10d5 : 3be1                          inc  r11
10d6 : 70f0 3229                     xor  r0,#tok_comma
10d8 : c0e0                          sknz  r0
10d9 : aff0 1096                     jmp  #_cdinextarray
10db : 5be1                          dec  r11
10dc : 1dc0 3ce1                     pop  link
10de : afd0                          ret
10df :                               .command_for
10df : 5ce1 2dc0                     push  link
10e1 : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
10e3 : adf0 1519                     jsr  #evaluator
10e5 : 10a2                          ldm  r0,r10,#esreference1
10e6 : c0e0                          sknz  r0
10e7 : aff0 17e7                     jmp   #typemismatcherror
10e9 : 10a1                          ldm  r0,r10,#estype1
10ea : b0e0                          skz  r0
10eb : aff0 17e7                     jmp   #typemismatcherror
10ed : 10a0                          ldm  r0,r10,#esvalue1
10ee : 0100                          mov  r1,r0,#0
10ef : adf0 1957                     jsr  #stackpushr0
10f1 : 00f0 2407                     mov  r0,#tok_equal
10f3 : adf0 1797                     jsr  #checknexttoken
10f5 : adf0 15bf                     jsr  #evaluateinteger
10f7 : 2010                          stm  r0,r1,#0
10f8 : 00f0 322b                     mov  r0,#tok_to
10fa : adf0 1797                     jsr  #checknexttoken
10fc : adf0 15bf                     jsr  #evaluateinteger
10fe : adf0 1957                     jsr  #stackpushr0
1100 : 11b0                          ldm  r1,r11,#0
1101 : 71f0 322c                     xor  r1,#tok_step
1103 : 00e1                          mov  r0,#1
1104 : b1e0                          skz  r1
1105 : aff0 110a                     jmp  #_cfhavestep
1107 : 3be1                          inc  r11
1108 : adf0 15bf                     jsr  #evaluateinteger
110a :                               ._cfhavestep
110a : adf0 1957                     jsr  #stackpushr0
110c : adf0 1928                     jsr  #stackpushposition
110e : adf0 1939                     jsr  #stackpushmarker
1110 : 0066                          word  'f'
1111 : 1dc0 3ce1                     pop  link
1113 : afd0                          ret
1114 :                               .command_next
1114 : 5ce1 2dc0                     push  link
1116 : adf0 1948                     jsr  #stackcheckmarker
1118 : 0066                          word  'f'
1119 : aff0 18b4                     jmp  #nexterror
111b : 12f0 402d                     ldm  r2,#returnstackptr
111d : 10b0                          ldm  r0,r11,#0
111e : 60f0 c000                     and  r0,#$c000
1120 : 70f0 4000                     xor  r0,#$4000
1122 : b0e0                          skz  r0
1123 : aff0 112f                     jmp  #_cndefaultidentifier
1125 : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
1127 : adf0 1519                     jsr  #evaluator
1129 : 13a0                          ldm  r3,r10,#esvalue1
112a : 1125                          ldm  r1,r2,#stackpossize+3
112b : 7130                          xor  r1,r3,#0
112c : b1e0                          skz  r1
112d : aff0 1819                     jmp  #badindexerror
112f :                               ._cndefaultidentifier
112f : 1325                          ldm  r3,r2,#stackpossize+3
1130 : 1424                          ldm  r4,r2,#stackpossize+2
1131 : 1530                          ldm  r5,r3,#0
1132 : 1623                          ldm  r6,r2,#stackpossize+1
1133 : d6e0                          skp  r6
1134 : 54e1                          dec  r4
1135 : 0140                          mov  r1,r4,#0
1136 : 1530                          ldm  r5,r3,#0
1137 : 5150                          sub  r1,r5,#0
1138 : 3560                          add  r5,r6,#0
1139 : 2530                          stm  r5,r3,#0
113a : 5450                          sub  r4,r5,#0
113b : d410                          skse  r4,r1,#0
113c : aff0 1143                     jmp  #_cnendloop
113e :                               ._cnloop
113e : adf0 1932                     jsr  #stackpopposition
1140 : 1dc0 3ce1                     pop  link
1142 : afd0                          ret
1143 :                               ._cnendloop
1143 : 00e6                          mov  r0,#4+stackpossize
1144 : adf0 1951                     jsr  #stackpopwords
1146 : 1dc0 3ce1                     pop  link
1148 : afd0                          ret
1149 :                               .command_if
1149 : 5ce1 2dc0                     push  link
114b : adf0 15bf                     jsr  #evaluateinteger
114d : 11b0                          ldm  r1,r11,#0
114e : 71f0 3a33                     xor  r1,#tok_then
1150 : b1e0                          skz  r1
1151 : aff0 115f                     jmp  #_cifmultiline
1153 : 3be1                          inc  r11
1154 : b0e0                          skz  r0
1155 : aff0 115c                     jmp  #_cifexit
1157 : 1bf0 4024                     ldm  r11,#currentline
1159 : 10b0                          ldm  r0,r11,#0
115a : 3b00                          add  r11,r0,#0
115b : 5be1                          dec  r11
115c :                               ._cifexit
115c : 1dc0 3ce1                     pop  link
115e : afd0                          ret
115f :                               ._cifmultiline
115f : c0e0                          sknz  r0
1160 : aff0 1168                     jmp  #_cifmultiline_false
1162 : adf0 1939                     jsr  #stackpushmarker
1164 : 0069                          word  'i'
1165 : 1dc0 3ce1                     pop  link
1167 : afd0                          ret
1168 :                               ._cifmultiline_false
1168 : 00f0 3c3c                     mov  r0,#tok_else
116a : 01f0 3a31                     mov  r1,#tok_endif
116c : adf0 18e4                     jsr  #skipstructure
116e : 5be1                          dec  r11
116f : 10b0                          ldm  r0,r11,#0
1170 : 3be1                          inc  r11
1171 : 70f0 3a31                     xor  r0,#tok_endif
1173 : c0e0                          sknz  r0
1174 : aff0 115c                     jmp  #_cifexit
1176 : adf0 1939                     jsr  #stackpushmarker
1178 : 0069                          word  'i'
1179 : 1dc0 3ce1                     pop  link
117b : afd0                          ret
117c :                               .command_else
117c : 5ce1 2dc0                     push  link
117e : adf0 1948                     jsr  #stackcheckmarker
1180 : 0069                          word  'i'
1181 : aff0 1891                     jmp  #elseerror
1183 : 00e1                          mov  r0,#1
1184 : adf0 1951                     jsr  #stackpopwords
1186 : 00f0 3a31                     mov  r0,#tok_endif
1188 : 0100                          mov  r1,r0,#0
1189 : adf0 18e4                     jsr  #skipstructure
118b : 1dc0 3ce1                     pop  link
118d : afd0                          ret
118e :                               .command_endif
118e : 5ce1 2dc0                     push  link
1190 : adf0 1948                     jsr  #stackcheckmarker
1192 : 0069                          word  'i'
1193 : aff0 189c                     jmp  #endiferror
1195 : 00e1                          mov  r0,#1
1196 : adf0 1951                     jsr  #stackpopwords
1198 : 1dc0 3ce1                     pop  link
119a : afd0                          ret
119b :                               .command_let
119b : 5ce2 29c0 2dc1                push  r9,link
119e : 09f0 0600                     mov  r9,#(tok_pling & 0x1e00)-0x400
11a0 : adf0 1519                     jsr  #evaluator
11a2 : 10a2                          ldm  r0,r10,#esreference1
11a3 : c0e0                          sknz  r0
11a4 : aff0 17e1                     jmp  #syntaxerror
11a6 : 00f0 2407                     mov  r0,#tok_equal
11a8 : adf0 1797                     jsr  #checknexttoken
11aa : 10a1                          ldm  r0,r10,#estype1
11ab : b0e0                          skz  r0
11ac : aff0 11b6                     jmp  #_clstring
11ae : 11a0                          ldm  r1,r10,#esvalue1
11af : adf0 15bf                     jsr  #evaluateinteger
11b1 : 2010                          stm  r0,r1,#0
11b2 : 19c0 1dc1 3ce2                pop  r9,link
11b5 : afd0                          ret
11b6 :                               ._clstring
11b6 : 11a0                          ldm  r1,r10,#esvalue1
11b7 : adf0 15b5                     jsr  #evaluatestring
11b9 : adf0 197a                     jsr  #stringassign
11bb : 19c0 1dc1 3ce2                pop  r9,link
11be : afd0                          ret
11bf :                               .command_list
11bf : 7660                          clr  r6
11c0 : 7770                          clr  r7
11c1 : 08ea                          mov  r8,#10
11c2 : 10b0                          ldm  r0,r11,#0
11c3 : c0e0                          sknz  r0
11c4 : aff0 11ce                     jmp  #_clhaveline
11c6 : 70f0 3c37                     xor  r0,#tok_colon
11c8 : c0e0                          sknz  r0
11c9 : aff0 11ce                     jmp  #_clhaveline
11cb : adf0 15bf                     jsr  #evaluateinteger
11cd : 0600                          mov  r6,r0,#0
11ce :                               ._clhaveline
11ce : 1bf0 4025                     ldm  r11,#programcode
11d0 :                               ._cllistloop
11d0 : 10b0                          ldm  r0,r11,#0
11d1 : c0e0                          sknz  r0
11d2 : aff0 1011                     jmp  #warmstart
11d4 : 10b1                          ldm  r0,r11,#1
11d5 : d0e0                          skp  r0
11d6 : aff0 11dc                     jmp  #_cllistnextline
11d8 : 5060                          sub  r0,r6,#0
11d9 : ffe0                          sklt
11da : adf0 11e0                     jsr  #listoneline
11dc :                               ._cllistnextline
11dc : 10b0                          ldm  r0,r11,#0
11dd : 3b00                          add  r11,r0,#0
11de : aff0 11d0                     jmp  #_cllistloop
11e0 :                               .listoneline
11e0 : 5ce3 26c0 2bc1 2dc2           push  r6,r11,link
11e4 : 10b1                          ldm  r0,r11,#1
11e5 : 01ea                          mov  r1,#10
11e6 : adf0 001c                     jsr  #osinttostr
11e8 : ade8                          jsr  #osprintstring
11e9 : 1000                          ldm  r0,r0,#0
11ea : 0176                          mov  r1,r7,#6
11eb : 5100                          sub  r1,r0,#0
11ec :                               ._lolspacing
11ec : 00f0 0020                     mov  r0,#$20
11ee : ade4                          jsr  #osprintcharacter
11ef : 51e1                          dec  r1
11f0 : b1e0                          skz  r1
11f1 : aff0 11ec                     jmp  #_lolspacing
11f3 : 3be2                          add  r11,#2
11f4 : 7880                          clr  r8
11f5 : 2ef0 402e                     stm  r14,#lastlisttoken
11f7 :                               ._lolloop
11f7 : 10b0                          ldm  r0,r11,#0
11f8 : c0e0                          sknz  r0
11f9 : aff0 11ff                     jmp  #_lolexit
11fb : adf0 1206                     jsr  #decodetoken
11fd : aff0 11f7                     jmp  #_lolloop
11ff :                               ._lolexit
11ff : 00ed                          mov  r0,#13
1200 : ade4                          jsr  #osprintcharacter
1201 : 16c0 1bc1 1dc2 3ce3           pop  r6,r11,link
1205 : afd0                          ret
1206 :                               .decodetoken
1206 : 5ce1 2dc0                     push  link
1208 : 7990                          clr  r9
1209 : 10b0                          ldm  r0,r11,#0
120a : 5ce1 20c0                     push  r0
120c : 01f0 8000                     mov  r1,#$8000
120e : 10b0                          ldm  r0,r11,#0
120f : d0e0                          skp  r0
1210 : aff0 1219                     jmp  #_dtdigit
1212 : 70f0 3012                     xor  r0,#tok_vbarconstshift
1214 : b0e0                          skz  r0
1215 : aff0 122d                     jmp  #_dtnotconstant
1217 : 7110                          clr  r1
1218 : 3be1                          inc  r11
1219 :                               ._dtdigit
1219 : 10b0                          ldm  r0,r11,#0
121a : 3be1                          inc  r11
121b : 7010                          xor  r0,r1,#0
121c : 01ea                          mov  r1,#10
121d : 12f0 402e                     ldm  r2,#lastlisttoken
121f : 72f0 3011                     xor  r2,#tok_percent
1221 : c2e0                          sknz  r2
1222 : 01e2                          mov  r1,#2
1223 : 72e1                          xor  r2,#tok_percent^tok_ampersand
1224 : c2e0                          sknz  r2
1225 : 01f0 0010                     mov  r1,#16
1227 : adf0 001c                     jsr  #osinttostr
1229 : adf0 126f                     jsr  #listprintstring
122b : aff0 1247                     jmp  #_dtexit
122d :                               ._dtnotconstant
122d : 10b0                          ldm  r0,r11,#0
122e : 60f0 ff00                     and  r0,#$ff00
1230 : 70f0 0100                     xor  r0,#$0100
1232 : b0e0                          skz  r0
1233 : aff0 1246                     jmp  #_dtnotstring
1235 : 00f0 0022                     mov  r0,#'"'
1237 : adf0 124e                     jsr  #listprintcharacter
1239 : 00b1                          mov  r0,r11,#1
123a : adf0 126f                     jsr  #listprintstring
123c : 00f0 0022                     mov  r0,#'"'
123e : adf0 124e                     jsr  #listprintcharacter
1240 : 10b0                          ldm  r0,r11,#0
1241 : 60f0 00ff                     and  r0,#$00ff
1243 : 3b00                          add  r11,r0,#0
1244 : aff0 1247                     jmp  #_dtexit
1246 :                               ._dtnotstring
1246 : 3be1                          inc  r11
1247 :                               ._dtexit
1247 : 10c0 3ce1                     pop  r0
1249 : 20f0 402e                     stm  r0,#lastlisttoken
124b : 1dc0 3ce1                     pop  link
124d : afd0                          ret
124e :                               .listprintcharacter
124e : 60f0 00ff                     and  r0,#$00ff
1250 : c0e0                          sknz  r0
1251 : afd0                          ret
1252 : 5ce3 26c0 27c1 2dc2           push  r6,r7,link
1256 : 0600                          mov  r6,r0,#0
1257 : adf0 17ba                     jsr  #getcharactertype
1259 : 0700                          mov  r7,r0,#0
125a : b9e0                          skz  r9
125b : aff0 1266                     jmp  #_lpcprint
125d : c7e0                          sknz  r7
125e : aff0 1266                     jmp  #_lpcprint
1260 : c8e0                          sknz  r8
1261 : aff0 1266                     jmp  #_lpcprint
1263 : 00f0 0020                     mov  r0,#' '
1265 : ade4                          jsr  #osprintcharacter
1266 :                               ._lpcprint
1266 : 0870                          mov  r8,r7,#0
1267 : 39e1                          inc  r9
1268 : 0060                          mov  r0,r6,#0
1269 : ade4                          jsr  #osprintcharacter
126a : 16c0 17c1 1dc2 3ce3           pop  r6,r7,link
126e : afd0                          ret
126f :                               .listprintstring
126f : 5ce3 21c0 22c1 2dc2           push  r1,r2,link
1273 : 0101                          mov  r1,r0,#1
1274 : adf0 0022                     jsr  #oswordlength
1276 : 0200                          mov  r2,r0,#0
1277 :                               ._lpsloop
1277 : c2e0                          sknz  r2
1278 : aff0 1285                     jmp  #_lpsexit
127a : 1010                          ldm  r0,r1,#0
127b : adf0 124e                     jsr  #listprintcharacter
127d : 1010                          ldm  r0,r1,#0
127e : 90e8                          ror  r0,#8
127f : adf0 124e                     jsr  #listprintcharacter
1281 : 31e1                          inc  r1
1282 : 52e1                          dec  r2
1283 : aff0 1277                     jmp  #_lpsloop
1285 :                               ._lpsexit
1285 : 0010                          mov  r0,r1,#0
1286 : 11c0 12c1 1dc2 3ce3           pop  r1,r2,link
128a : afd0                          ret
128b :                               .commandassert
128b : 01d0                          mov  r1,link,#0
128c : adf0 15bf                     jsr  #evaluateinteger
128e : c0e0                          sknz  r0
128f : aff0 17fa                     jmp  #asserterror
1291 : 0d10                          mov  link,r1,#0
1292 : afd0                          ret
1293 :                               .commandpoke
1293 : 5ce1 2dc0                     push  link
1295 : adf0 15bf                     jsr  #evaluateinteger
1297 : 0100                          mov  r1,r0,#0
1298 : adf0 17ae                     jsr  #checkcomma
129a : adf0 15bf                     jsr  #evaluateinteger
129c : 2010                          stm  r0,r1,#0
129d : 1dc0 3ce1                     pop  link
129f : afd0                          ret
12a0 :                               .commandsys
12a0 : 5ce1 2dc0                     push  link
12a2 : adf0 15bf                     jsr  #evaluateinteger
12a4 : 0100                          mov  r1,r0,#0
12a5 : 00f0 408f                     mov  r0,#fixedvariables
12a7 : ad10                          brl  link,r1,#0
12a8 : 1dc0 3ce1                     pop  link
12aa : afd0                          ret
12ab :                               .commentcommand1
12ab :                               .commentcommand2
12ab : 10b0                          ldm  r0,r11,#0
12ac : 0100                          mov  r1,r0,#0
12ad : 61f0 00ff                     and  r1,#$00ff
12af : 60f0 ff00                     and  r0,#$ff00
12b1 : 70f0 0100                     xor  r0,#$0100
12b3 : c0e0                          sknz  r0
12b4 : 3b10                          add  r11,r1,#0
12b5 : afd0                          ret
12b6 :                               .colonhandler
12b6 : afd0                          ret
12b7 :                               .dummy1
12b7 :                               .dummy2
12b7 :                               .dummy3
12b7 :                               .dummy4
12b7 :                               .dummy5
12b7 :                               .dummy6
12b7 :                               .command_new
12b7 : 10f0 4025                     ldm  r0,#programcode
12b9 : 2e00                          stm  r14,r0,#0
12ba : adf0 1078                     jsr  #command_clear
12bc : aff0 1011                     jmp  #warmstart
12be :                               .command_old
12be : 10f0 4025                     ldm  r0,#programcode
12c0 : 0200                          mov  r2,r0,#0
12c1 : 30e1                          inc  r0
12c2 :                               ._conext
12c2 : 30e1                          inc  r0
12c3 :                               ._conext2
12c3 : 1100                          ldm  r1,r0,#0
12c4 : c1e0                          sknz  r1
12c5 : aff0 12d4                     jmp  #_cofoundend
12c7 : 61f0 ff00                     and  r1,#$ff00
12c9 : 71f0 0100                     xor  r1,#$0100
12cb : b1e0                          skz  r1
12cc : aff0 12c2                     jmp  #_conext
12ce : 1100                          ldm  r1,r0,#0
12cf : 61f0 00ff                     and  r1,#$00ff
12d1 : 3010                          add  r0,r1,#0
12d2 : aff0 12c3                     jmp  #_conext2
12d4 :                               ._cofoundend
12d4 : 0000                          break
12d5 : 5020                          sub  r0,r2,#0
12d6 : 30e1                          inc  r0
12d7 : 2020                          stm  r0,r2,#0
12d8 : adf0 1078                     jsr  #command_clear
12da : aff0 1011                     jmp  #warmstart
12dc :                               .command_print
12dc : 5ce1 2dc0                     push  link
12de :                               ._cprloop
12de : 10b0                          ldm  r0,r11,#0
12df : c0e0                          sknz r0
12e0 : aff0 1329                     jmp  #_cprexitcr
12e2 : 70f0 3c37                     xor  r0,#tok_colon
12e4 : c0e0                          sknz  r0
12e5 : aff0 1329                     jmp  #_cprexitcr
12e7 : 3be1                          inc  r11
12e8 : 70f0 0e1d                     xor  r0,#tok_semicolon^tok_colon
12ea : c0e0                          sknz  r0
12eb : aff0 131e                     jmp  #_cprsemicolon
12ed : 70e3                          xor  r0,#tok_semicolon^tok_comma
12ee : c0e0                          sknz  r0
12ef : aff0 131c                     jmp  #_cprtab
12f1 : 70f0 0e1f                     xor  r0,#tok_comma^tok_quote
12f3 : c0e0                          sknz  r0
12f4 : aff0 1318                     jmp  #_cprnewline
12f6 : 5be1                          dec  r11
12f7 : 03ea                          mov  r3,#10
12f8 : 10b0                          ldm  r0,r11,#0
12f9 : 70f0 3011                     xor  r0,#tok_percent
12fb : c0e0                          sknz  r0
12fc : 03e2                          mov  r3,#2
12fd : 70e1                          xor  r0,#tok_percent^tok_ampersand
12fe : c0e0                          sknz  r0
12ff : 03f0 0010                     mov  r3,#16
1301 : adf0 150f                     jsr  #evaluateexpression
1303 : 10a0                          ldm  r0,r10,#esvalue1
1304 : 12a2                          ldm  r2,r10,#esreference1
1305 : b2e0                          skz  r2
1306 : 1000                          ldm  r0,r0,#0
1307 : 12a1                          ldm  r2,r10,#estype1
1308 : b2e0                          skz  r2
1309 : aff0 1315                     jmp  #_cprprintstr
130b : 0200                          mov  r2,r0,#0
130c : 00f0 0020                     mov  r0,#' '
130e : ade4                          jsr  #osprintcharacter
130f : 0020                          mov  r0,r2,#0
1310 : 0130                          mov  r1,r3,#0
1311 : 31f0 8000                     add  r1,#$8000
1313 : adf0 001c                     jsr  #osinttostr
1315 :                               ._cprprintstr
1315 : ade8                          jsr  #osprintstring
1316 : aff0 12de                     jmp  #_cprloop
1318 :                               ._cprnewline
1318 : 00ed                          mov  r0,#13
1319 : ade4                          jsr  #osprintcharacter
131a : aff0 12de                     jmp  #_cprloop
131c :                               ._cprtab
131c : 00e9                          mov  r0,#9
131d : ade4                          jsr  #osprintcharacter
131e :                               ._cprsemicolon
131e : 10b0                          ldm  r0,r11,#0
131f : c0e0                          sknz r0
1320 : aff0 132b                     jmp  #_cprexit
1322 : 70f0 3c37                     xor  r0,#tok_colon
1324 : c0e0                          sknz  r0
1325 : aff0 132b                     jmp  #_cprexit
1327 : aff0 12de                     jmp  #_cprloop
1329 :                               ._cprexitcr
1329 : 00ed                          mov  r0,#13
132a : ade4                          jsr  #osprintcharacter
132b :                               ._cprexit
132b : 1dc0 3ce1                     pop  link
132d : afd0                          ret
132e :                               .command_repeat
132e : 5ce1 2dc0                     push  link
1330 : adf0 1928                     jsr  #stackpushposition
1332 : adf0 1939                     jsr  #stackpushmarker
1334 : 0072                          word  'r'
1335 : 1dc0 3ce1                     pop  link
1337 : afd0                          ret
1338 :                               .command_until
1338 : 5ce1 2dc0                     push  link
133a : adf0 1948                     jsr  #stackcheckmarker
133c : 0072                          word  'r'
133d : aff0 1878                     jmp  #untilerror
133f : adf0 15bf                     jsr  #evaluateinteger
1341 : b0e0                          skz  r0
1342 : aff0 1349                     jmp  #_crpassed
1344 : adf0 1932                     jsr  #stackpopposition
1346 : 1dc0 3ce1                     pop  link
1348 : afd0                          ret
1349 :                               ._crpassed
1349 : 00e3                          mov  r0,#1+stackpossize
134a : adf0 1951                     jsr  #stackpopwords
134c : 1dc0 3ce1                     pop  link
134e : afd0                          ret
134f :                               .runprogram
134f : 1cf0 4023                     ldm  sp,#initialsp
1351 : 0af0 402f                     mov  r10,#evalstack
1353 : adf0 1078                     jsr  #command_clear
1355 : 00f0 0017                     mov  r0,#$17
1357 : ade4                          jsr  #osprintcharacter
1358 : 1bf0 4025                     ldm  r11,#programcode
135a :                               ._rpnewline
135a : 2bf0 4024                     stm  r11,#currentline
135c : 10b0                          ldm  r0,r11,#0
135d : c0e0                          sknz  r0
135e : aff0 1011                     jmp  #warmstart
1360 : 3be2                          add  r11,#2
1361 :                               ._rpnewcommand
1361 : adf0 0024                     jsr  #osmanager
1363 : 2ef0 402a                     stm  r14,#tempstringalloc
1365 : 10b0                          ldm  r0,r11,#0
1366 : 0100                          mov  r1,r0,#0
1367 : 3be1                          inc  r11
1368 : 60f0 f800                     and  r0,#$f800
136a : 70f0 3800                     xor  r0,#$3800
136c : b0e0                          skz  r0
136d : aff0 1377                     jmp  #_rpnotcommandtoken
136f : 61f0 01ff                     and  r1,#$01ff
1371 : 31f0 1b6d                     add  r1,#tokenvectors
1373 : 1010                          ldm  r0,r1,#0
1374 : ad00                          brl  link,r0,#0
1375 : aff0 1361                     jmp  #_rpnewcommand
1377 :                               ._rpnotcommandtoken
1377 : c1e0                          sknz  r1
1378 : aff0 135a                     jmp  #_rpnewline
137a : 5be1                          dec  r11
137b : 10b0                          ldm  r0,r11,#0
137c : 70f0 2a0e                     xor  r0,#tok_pling
137e : c0e0                          sknz  r0
137f : aff0 1389                     jmp  #_rpdolet
1381 : 10b0                          ldm  r0,r11,#0
1382 : 61f0 c000                     and  r1,#$c000
1384 : 71f0 4000                     xor  r1,#$4000
1386 : b1e0                          skz  r1
1387 : aff0 17e1                     jmp  #syntaxerror
1389 :                               ._rpdolet
1389 : adf0 119b                     jsr  #command_let
138b : aff0 1361                     jmp  #_rpnewcommand
138d :                               .command_goto
138d : 5ce1 2dc0                     push  link
138f : adf0 15bf                     jsr  #evaluateinteger
1391 :                               ._cgmain
1391 : 1bf0 4025                     ldm  r11,#programcode
1393 :                               ._cgsearch
1393 : 11b0                          ldm  r1,r11,#0
1394 : c1e0                          sknz  r1
1395 : aff0 1800                     jmp  #lineerror
1397 : 14b1                          ldm  r4,r11,#1
1398 : 7400                          xor  r4,r0,#0
1399 : c4e0                          sknz  r4
139a : aff0 139f                     jmp  #_cgfound
139c : 3b10                          add  r11,r1,#0
139d : aff0 1393                     jmp  #_cgsearch
139f :                               ._cgfound
139f : 2bf0 4024                     stm  r11,#currentline
13a1 : 3be2                          add  r11,#2
13a2 : 1dc0 3ce1                     pop  link
13a4 : afd0                          ret
13a5 :                               .command_gosub
13a5 : 5ce1 2dc0                     push  link
13a7 : adf0 15bf                     jsr  #evaluateinteger
13a9 : 5ce1 20c0                     push  r0
13ab : adf0 1928                     jsr  #stackpushposition
13ad : adf0 1939                     jsr  #stackpushmarker
13af : 0073                          word  's'
13b0 : 10c0 3ce1                     pop  r0
13b2 : aff0 1391                     jmp  #_cgmain
13b4 :                               .command_return
13b4 : 5ce1 2dc0                     push  link
13b6 : adf0 1948                     jsr  #stackcheckmarker
13b8 : 0073                          word  's'
13b9 : aff0 186b                     jmp  #returnerror
13bb : adf0 1932                     jsr  #stackpopposition
13bd : 00e3                          mov  r0,#1+stackpossize
13be : adf0 1951                     jsr  #stackpopwords
13c0 : 1dc0 3ce1                     pop  link
13c2 : afd0                          ret
13c3 :                               .command_while
13c3 : 5ce1 2dc0                     push  link
13c5 : 5be1                          dec  r11
13c6 : adf0 1928                     jsr  #stackpushposition
13c8 : adf0 1939                     jsr  #stackpushmarker
13ca : 0077                          word  'w'
13cb : 3be1                          inc  r11
13cc : adf0 15bf                     jsr  #evaluateinteger
13ce : b0e0                          skz  r0
13cf : aff0 13d9                     jmp  #_cwexit
13d1 : 00e3                          mov  r0,#1+stackpossize
13d2 : adf0 1951                     jsr  #stackpopwords
13d4 : 00f0 3a35                     mov  r0,#tok_wend
13d6 : 0100                          mov  r1,r0,#0
13d7 : adf0 18e4                     jsr  #skipstructure
13d9 :                               ._cwexit
13d9 : 1dc0 3ce1                     pop  link
13db : afd0                          ret
13dc :                               .command_wend
13dc : 5ce1 2dc0                     push  link
13de : adf0 1948                     jsr  #stackcheckmarker
13e0 : 0077                          word  'w'
13e1 : aff0 1885                     jmp  #wenderror
13e3 : adf0 1932                     jsr  #stackpopposition
13e5 : 00e3                          mov  r0,#1+stackpossize
13e6 : adf0 1951                     jsr  #stackpopwords
13e8 : 1dc0 3ce1                     pop  link
13ea : afd0                          ret
13eb :                               .binaryop_add
13eb : 5ce1 2dc0                     push  link
13ed : adf0 1475                     jsr  #multitypedispatch
13ef : aff0 15d6                     jmp  #stringconcat
13f1 : adf0 1461                     jsr  #checkintdereference
13f3 : 10a0                          ldm  r0,r10,#esvalue1
13f4 : 11a3                          ldm  r1,r10,#esvalue2
13f5 : 3010                          add  r0,r1,#0
13f6 : 20a0                          stm  r0,r10,#esvalue1
13f7 : 1dc0 3ce1                     pop  link
13f9 : afd0                          ret
13fa :                               .binaryop_sub
13fa : 5ce1 2dc0                     push  link
13fc : adf0 1461                     jsr  #checkintdereference
13fe : 10a0                          ldm  r0,r10,#esvalue1
13ff : 11a3                          ldm  r1,r10,#esvalue2
1400 : 5010                          sub  r0,r1,#0
1401 : 20a0                          stm  r0,r10,#esvalue1
1402 : 1dc0 3ce1                     pop  link
1404 : afd0                          ret
1405 :                               .binaryop_mult
1405 : 5ce1 2dc0                     push  link
1407 : adf0 1461                     jsr  #checkintdereference
1409 : 10a0                          ldm  r0,r10,#esvalue1
140a : 11a3                          ldm  r1,r10,#esvalue2
140b : 8010                          mult  r0,r1,#0
140c : 20a0                          stm  r0,r10,#esvalue1
140d : 1dc0 3ce1                     pop  link
140f : afd0                          ret
1410 :                               .binaryop_divide
1410 : 5ce1 2dc0                     push  link
1412 : adf0 1461                     jsr  #checkintdereference
1414 : 10a0                          ldm  r0,r10,#esvalue1
1415 : 11a3                          ldm  r1,r10,#esvalue2
1416 : c1e0                          sknz  r1
1417 : aff0 17ef                     jmp  #dividezeroerror
1419 : adf0 0016                     jsr  #ossdivide16
141b : 20a0                          stm  r0,r10,#esvalue1
141c : 1dc0 3ce1                     pop  link
141e : afd0                          ret
141f :                               .binaryop_mod
141f : 5ce1 2dc0                     push  link
1421 : adf0 1461                     jsr  #checkintdereference
1423 : 10a0                          ldm  r0,r10,#esvalue1
1424 : 11a3                          ldm  r1,r10,#esvalue2
1425 : c1e0                          sknz  r1
1426 : aff0 17ef                     jmp  #dividezeroerror
1428 : adf0 0016                     jsr  #ossdivide16
142a : 21a0                          stm  r1,r10,#esvalue1
142b : 1dc0 3ce1                     pop  link
142d : afd0                          ret
142e :                               .binaryop_and
142e : 5ce1 2dc0                     push  link
1430 : adf0 1461                     jsr  #checkintdereference
1432 : 10a0                          ldm  r0,r10,#esvalue1
1433 : 11a3                          ldm  r1,r10,#esvalue2
1434 : 6010                          and  r0,r1,#0
1435 : 20a0                          stm  r0,r10,#esvalue1
1436 : 1dc0 3ce1                     pop  link
1438 : afd0                          ret
1439 :                               .binaryop_or
1439 : 5ce1 2dc0                     push  link
143b : adf0 1461                     jsr  #checkintdereference
143d : 10a0                          ldm  r0,r10,#esvalue1
143e : 70f0 ffff                     xor  r0,#$ffff
1440 : 11a3                          ldm  r1,r10,#esvalue2
1441 : 71f0 ffff                     xor  r1,#$ffff
1443 : 6010                          and  r0,r1,#0
1444 : 70f0 ffff                     xor  r0,#$ffff
1446 : 20a0                          stm  r0,r10,#esvalue1
1447 : 1dc0 3ce1                     pop  link
1449 : afd0                          ret
144a :                               .binaryop_xor
144a : 5ce1 2dc0                     push  link
144c : adf0 1461                     jsr  #checkintdereference
144e : 10a0                          ldm  r0,r10,#esvalue1
144f : 11a3                          ldm  r1,r10,#esvalue2
1450 : 7010                          xor  r0,r1,#0
1451 : 20a0                          stm  r0,r10,#esvalue1
1452 : 1dc0 3ce1                     pop  link
1454 : afd0                          ret
1455 :                               .binaryop_indirect
1455 : 5ce1 2dc0                     push  link
1457 : adf0 1461                     jsr  #checkintdereference
1459 : 10a0                          ldm  r0,r10,#esvalue1
145a : 11a3                          ldm  r1,r10,#esvalue2
145b : 3010                          add  r0,r1,#0
145c : 20a0                          stm  r0,r10,#esvalue1
145d : 2fa2                          stm  r15,r10,#esreference1
145e : 1dc0 3ce1                     pop  link
1460 : afd0                          ret
1461 :                               .checkintdereference
1461 : 10a1                          ldm  r0,r10,#estype1
1462 : 11a4                          ldm  r1,r10,#estype2
1463 : 3010                          add  r0,r1,#0
1464 : b0e0                          skz  r0
1465 : aff0 17e7                     jmp  #typemismatcherror
1467 :                               .dereferencebinary
1467 : 10a5                          ldm  r0,r10,#esreference2
1468 : 11a3                          ldm  r1,r10,#esvalue2
1469 : b0e0                          skz  r0
146a : 1110                          ldm  r1,r1,#0
146b : 21a3                          stm  r1,r10,#esvalue2
146c : 2ea5                          stm  r14,r10,#esreference2
146d :                               .dereferenceunary
146d : 10a2                          ldm  r0,r10,#esreference1
146e : c0e0                          sknz  r0
146f : afd0                          ret
1470 : 10a0                          ldm  r0,r10,#esvalue1
1471 : 1000                          ldm  r0,r0,#0
1472 : 20a0                          stm  r0,r10,#esvalue1
1473 : 2ea2                          stm  r14,r10,#esreference1
1474 : afd0                          ret
1475 :                               .multitypedispatch
1475 : 10a1                          ldm  r0,r10,#estype1
1476 : 11a4                          ldm  r1,r10,#estype2
1477 : 3010                          add  r0,r1,#0
1478 : 3de2                          add  link,#2
1479 : c0e0                          sknz  r0
147a : afd0                          ret
147b : 5ce1 2dc0                     push  link
147d : c1e0                          sknz  r1
147e : aff0 17e7                     jmp  #typemismatcherror
1480 : 10a1                          ldm  r0,r10,#estype1
1481 : c0e0                          sknz  r0
1482 : aff0 17e7                     jmp  #typemismatcherror
1484 : 1dc0 3ce1                     pop  link
1486 : 5de2                          sub  link,#2
1487 : afd0                          ret
1488 :                               .binaryop_notequal
1488 : 5ce1 2dc0                     push  link
148a : adf0 1475                     jsr  #multitypedispatch
148c : aff0 149a                     jmp  #_bnestring
148e : adf0 1461                     jsr  #checkintdereference
1490 : 10a0                          ldm  r0,r10,#esvalue1
1491 : 11a3                          ldm  r1,r10,#esvalue2
1492 : 7010                          xor  r0,r1,#0
1493 :                               ._bnereturn
1493 : b0e0                          skz  r0
1494 : 00f0 ffff                     mov  r0,#-1
1496 : 20a0                          stm  r0,r10,#esvalue1
1497 : 1dc0 3ce1                     pop  link
1499 : afd0                          ret
149a :                               ._bnestring
149a : adf0 14f1                     jsr  #comparestrings
149c : aff0 1493                     jmp  #_bnereturn
149e :                               .binaryop_greaterequal
149e : 5ce1 2dc0                     push  link
14a0 : adf0 1475                     jsr  #multitypedispatch
14a2 : aff0 14b5                     jmp  #_bgestring
14a4 : adf0 1461                     jsr  #checkintdereference
14a6 : 10a0                          ldm  r0,r10,#esvalue1
14a7 : 11a3                          ldm  r1,r10,#esvalue2
14a8 :                               .binarycompare
14a8 : 30f0 8000                     add  r0,#$8000
14aa : 31f0 8000                     add  r1,#$8000
14ac : 5010                          sub  r0,r1,#0
14ad : 00e0                          mov  r0,#0
14ae : ffe0                          sklt
14af : 00f0 ffff                     mov  r0,#-1
14b1 : 20a0                          stm  r0,r10,#esvalue1
14b2 : 1dc0 3ce1                     pop  link
14b4 : afd0                          ret
14b5 :                               ._bgestring
14b5 : adf0 14f1                     jsr  #comparestrings
14b7 : e0e0                          skm  r0
14b8 : aff0 14be                     jmp  #_bgereturntrue
14ba :                               ._bgereturnfalse
14ba : 2ea0                          stm  r14,r10,#esvalue1
14bb : 1dc0 3ce1                     pop  link
14bd : afd0                          ret
14be :                               ._bgereturntrue
14be : 00f0 ffff                     mov  r0,#-1
14c0 : 20a0                          stm  r0,r10,#esvalue1
14c1 : 1dc0 3ce1                     pop  link
14c3 : afd0                          ret
14c4 :                               .binaryop_lessequal
14c4 : 5ce1 2dc0                     push  link
14c6 : adf0 1475                     jsr  #multitypedispatch
14c8 : aff0 14d0                     jmp  #_blestring
14ca : adf0 1461                     jsr  #checkintdereference
14cc : 11a0                          ldm  r1,r10,#esvalue1
14cd : 10a3                          ldm  r0,r10,#esvalue2
14ce : aff0 14a8                     jmp  #binarycompare
14d0 :                               ._blestring
14d0 : adf0 14f1                     jsr  #comparestrings
14d2 : c0e0                          sknz  r0
14d3 : aff0 14be                     jmp  #_bgereturntrue
14d5 : d0e0                          skp  r0
14d6 : aff0 14be                     jmp  #_bgereturntrue
14d8 : aff0 14ba                     jmp  #_bgereturnfalse
14da :                               .binaryop_equal
14da : 5ce1 2dc0                     push  link
14dc : adf0 1488                     jsr  #binaryop_notequal
14de :                               .reverseresult
14de : 10a0                          ldm  r0,r10,#esvalue1
14df : 70f0 ffff                     xor  r0,#$ffff
14e1 : 20a0                          stm  r0,r10,#esvalue1
14e2 : 1dc0 3ce1                     pop  link
14e4 : afd0                          ret
14e5 :                               .binaryop_greater
14e5 : 5ce1 2dc0                     push  link
14e7 : adf0 14c4                     jsr  #binaryop_lessequal
14e9 : aff0 14de                     jmp  #reverseresult
14eb :                               .binaryop_less
14eb : 5ce1 2dc0                     push  link
14ed : adf0 149e                     jsr  #binaryop_greaterequal
14ef : aff0 14de                     jmp  #reverseresult
14f1 :                               .comparestrings
14f1 : 2ea1                          stm  r14,r10,#estype1
14f2 : 11a0                          ldm  r1,r10,#esvalue1
14f3 : 12a3                          ldm  r2,r10,#esvalue2
14f4 : 1310                          ldm  r3,r1,#0
14f5 : 1420                          ldm  r4,r2,#0
14f6 : 0530                          mov  r5,r3,#0
14f7 : 5540                          sub  r5,r4,#0
14f8 : e5e0                          skm  r5
14f9 : 0340                          mov  r3,r4,#0
14fa : 33e1                          inc  r3
14fb : 93e1                          ror  r3,#1
14fc : 63f0 7fff                     and  r3,#$7fff
14fe :                               ._cslloop
14fe : c3e0                          sknz  r3
14ff : aff0 150d                     jmp  #_cslstartmatch
1501 : 53e1                          dec  r3
1502 : 31e1                          inc  r1
1503 : 32e1                          inc  r2
1504 : 1010                          ldm  r0,r1,#0
1505 : 1420                          ldm  r4,r2,#0
1506 : 90e8                          ror  r0,#8
1507 : 94e8                          ror  r4,#8
1508 : 5040                          sub  r0,r4,#0
1509 : c0e0                          sknz  r0
150a : aff0 14fe                     jmp  #_cslloop
150c : afd0                          ret
150d :                               ._cslstartmatch
150d : 0050                          mov  r0,r5,#0
150e : afd0                          ret
150f :                               .evaluateexpression
150f : 5ce2 29c0 2dc1                push  r9,link
1512 : 7990                          clr  r9
1513 : adf0 1519                     jsr  #evaluator
1515 : 19c0 1dc1 3ce2                pop  r9,link
1518 : afd0                          ret
1519 :                               .evaluator
1519 : 5ce8 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,r5,r6,link
1522 : 10b0                          ldm  r0,r11,#0
1523 : e0e0                          skm  r0
1524 : aff0 152e                     jmp  #_evnotconstant
1526 : 60f0 7fff                     and  r0,#$7fff
1528 : 20a0                          stm  r0,r10,#esvalue1
1529 : 2ea1                          stm  r14,r10,#estype1
152a : 2ea2                          stm  r14,r10,#esreference1
152b : 3be1                          inc  r11
152c : aff0 1541                     jmp  #_evhaveterm
152e :                               ._evnotconstant
152e : c0e0                          sknz  r0
152f : aff0 17e1                     jmp  #syntaxerror
1531 : 3000                          add  r0,r0,#0
1532 : d0e0                          skp  r0
1533 : aff0 156e                     jmp  #_evvariable
1535 : 3000                          add  r0,r0,#0
1536 : d0e0                          skp  r0
1537 : aff0 1572                     jmp  #_evunaryfunction
1539 : 00b1                          mov  r0,r11,#1
153a : 20a0                          stm  r0,r10,#esvalue1
153b : 2fa1                          stm  r15,r10,#estype1
153c : 2ea2                          stm  r14,r10,#esreference1
153d : 10b0                          ldm  r0,r11,#0
153e : 60f0 00ff                     and  r0,#$00ff
1540 : 3b00                          add  r11,r0,#0
1541 :                               ._evhaveterm
1541 : 10b0                          ldm  r0,r11,#0
1542 : 60f0 f000                     and  r0,#$f000
1544 : 70f0 2000                     xor  r0,#$2000
1546 : b0e0                          skz  r0
1547 : aff0 1564                     jmp  #_evexit
1549 : 10b0                          ldm  r0,r11,#0
154a : 60f0 1e00                     and  r0,#$1e00
154c : 5090                          sub  r0,r9,#0
154d : 50e1                          dec  r0
154e : d0e0                          skp  r0
154f : aff0 1564                     jmp  #_evexit
1551 : 11b0                          ldm  r1,r11,#0
1552 : 3be1                          inc  r11
1553 : 0290                          mov  r2,r9,#0
1554 : 0910                          mov  r9,r1,#0
1555 : 69f0 1e00                     and  r9,#$1e00
1557 : 3ae3                          add  r10,#stackelementsize
1558 : adf0 1519                     jsr  #evaluator
155a : 5ae3                          sub  r10,#stackelementsize
155b : 0920                          mov  r9,r2,#0
155c :                               ._evcallhandler
155c : 61f0 01ff                     and  r1,#$01ff
155e : 31f0 1b6d                     add  r1,#tokenvectors
1560 : 1010                          ldm  r0,r1,#0
1561 : ad00                          brl  link,r0,#0
1562 : aff0 1541                     jmp  #_evhaveterm
1564 :                               ._evexit
1564 : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,r5,r6,link
156d : afd0                          ret
156e :                               ._evvariable
156e : adf0 19c0                     jsr  #getvariablereference
1570 : aff0 1541                     jmp  #_evhaveterm
1572 :                               ._evunaryfunction
1572 : 10b0                          ldm  r0,r11,#0
1573 : 70f0 260a                     xor  r0,#tok_minus
1575 : b0e0                          skz  r0
1576 : aff0 1580                     jmp  #_evcheckpling
1578 : 3be1                          inc  r11
1579 : adf0 159d                     jsr  #evaluateterminteger
157b : 7110                          clr  r1
157c : 5100                          sub  r1,r0,#0
157d : 21a0                          stm  r1,r10,#esvalue1
157e : aff0 1541                     jmp  #_evhaveterm
1580 :                               ._evcheckpling
1580 : 70f0 0c04                     xor  r0,#tok_minus^tok_pling
1582 : b0e0                          skz  r0
1583 : aff0 158b                     jmp  #_evcheckunary
1585 : 3be1                          inc  r11
1586 : adf0 159d                     jsr  #evaluateterminteger
1588 : 2fa2                          stm  r15,r10,#esreference1
1589 : aff0 1541                     jmp  #_evhaveterm
158b :                               ._evcheckunary
158b : 10b0                          ldm  r0,r11,#0
158c : 60f0 1e00                     and  r0,#$1e00
158e : 70f0 1000                     xor  r0,#$1000
1590 : b0e0                          skz  r0
1591 : aff0 17e1                     jmp  #syntaxerror
1593 : 11b0                          ldm  r1,r11,#0
1594 : 3be1                          inc  r11
1595 : aff0 155c                     jmp  #_evcallhandler
1597 :                               .constshifthandler
1597 : 10b0                          ldm  r0,r11,#0
1598 : 20a0                          stm  r0,r10,#esvalue1
1599 : 2ea1                          stm  r14,r10,#estype1
159a : 2ea2                          stm  r14,r10,#esreference1
159b : 3be1                          inc  r11
159c : afd0                          ret
159d :                               .evaluateterminteger
159d : 5ce3 21c0 29c1 2dc2           push  r1,r9,link
15a1 : 09f0 4000                     mov  r9,#$4000
15a3 : adf0 1519                     jsr  #evaluator
15a5 : 11a0                          ldm  r1,r10,#esvalue1
15a6 : 19a2                          ldm  r9,r10,#esreference1
15a7 : b9e0                          skz  r9
15a8 : 1110                          ldm  r1,r1,#0
15a9 : 21a0                          stm  r1,r10,#esvalue1
15aa : 2ea2                          stm  r14,r10,#esreference1
15ab : 19a1                          ldm  r9,r10,#estype1
15ac : b9e0                          skz  r9
15ad : aff0 17e7                     jmp  #typemismatcherror
15af : 10a0                          ldm  r0,r10,#esvalue1
15b0 : 11c0 19c1 1dc2 3ce3           pop  r1,r9,link
15b4 : afd0                          ret
15b5 :                               .evaluatestring
15b5 : 5ce1 2dc0                     push  link
15b7 : adf0 150f                     jsr  #evaluateexpression
15b9 : 10a1                          ldm  r0,r10,#estype1
15ba : b0e0                          skz  r0
15bb : aff0 15c7                     jmp  #evaluatecommon
15bd : aff0 17e7                     jmp  #typemismatcherror
15bf :                               .evaluateinteger
15bf : 5ce1 2dc0                     push  link
15c1 : adf0 150f                     jsr  #evaluateexpression
15c3 : 10a1                          ldm  r0,r10,#estype1
15c4 : b0e0                          skz  r0
15c5 : aff0 17e7                     jmp  #typemismatcherror
15c7 :                               .evaluatecommon
15c7 : 10a2                          ldm  r0,r10,#esreference1
15c8 : b0e0                          skz  r0
15c9 : aff0 15cf                     jmp  #_ecreference
15cb : 10a0                          ldm  r0,r10,#esvalue1
15cc : 1dc0 3ce1                     pop  link
15ce : afd0                          ret
15cf :                               ._ecreference
15cf : 10a0                          ldm  r0,r10,#esvalue1
15d0 : 1000                          ldm  r0,r0,#0
15d1 : 20a0                          stm  r0,r10,#esvalue1
15d2 : 2ea2                          stm  r14,r10,#esreference1
15d3 : 1dc0 3ce1                     pop  link
15d5 : afd0                          ret
15d6 :                               .stringconcat
15d6 : adf0 1467                     jsr  #dereferencebinary
15d8 : 10a0                          ldm   r0,r10,#esvalue1
15d9 : 1100                          ldm  r1,r0,#0
15da : 10a3                          ldm  r0,r10,#esvalue2
15db : 1000                          ldm  r0,r0,#0
15dc : 3010                          add  r0,r1,#0
15dd : 0100                          mov  r1,r0,#0
15de : 51f0 0100                     sub  r1,#maxstringsize+1
15e0 : ffe0                          sklt
15e1 : aff0 1857                     jmp  #strlenerror
15e3 : 90e1                          ror  r0,#1
15e4 : 60f0 7fff                     and  r0,#$7fff
15e6 : 30e2                          add  r0,#2
15e7 : adf0 160a                     jsr  #sfallocate
15e9 : 13a0                          ldm  r3,r10,#esvalue1
15ea : 21a0                          stm  r1,r10,#esvalue1
15eb : adf0 15f3                     jsr  #_scoutput
15ed : 13a3                          ldm  r3,r10,#esvalue2
15ee : adf0 15f3                     jsr  #_scoutput
15f0 : 1dc0 3ce1                     pop  link
15f2 : afd0                          ret
15f3 :                               ._scoutput
15f3 : 5ce1 2dc0                     push  link
15f5 : 0030                          mov  r0,r3,#0
15f6 : adf0 0022                     jsr  #oswordlength
15f8 : 0400                          mov  r4,r0,#0
15f9 :                               ._scoutloop
15f9 : 33e1                          inc  r3
15fa : c4e0                          sknz  r4
15fb : aff0 1607                     jmp  #_scoutexit
15fd : 54e1                          dec  r4
15fe : 1030                          ldm  r0,r3,#0
15ff : adf0 1615                     jsr  #sfaddcharacter
1601 : 1030                          ldm  r0,r3,#0
1602 : 90e8                          ror  r0,#8
1603 : adf0 1615                     jsr  #sfaddcharacter
1605 : aff0 15f9                     jmp  #_scoutloop
1607 :                               ._scoutexit
1607 : 1dc0 3ce1                     pop  link
1609 : afd0                          ret
160a :                               .sfallocate
160a : 5ce1 2dc0                     push  link
160c : adf0 1962                     jsr  #allocatetempmemory
160e : 0100                          mov  r1,r0,#0
160f : 7220                          clr  r2
1610 : 2e10                          stm  r14,r1,#0
1611 : 2e11                          stm  r14,r1,#1
1612 : 1dc0 3ce1                     pop  link
1614 : afd0                          ret
1615 :                               .sfaddcharacter
1615 : 60f0 00ff                     and  r0,#$00ff
1617 : c0e0                          sknz  r0
1618 : afd0                          ret
1619 : 5ce2 23c0 24c1                push  r3,r4
161c : 0420                          mov  r4,r2,#0
161d : 94e1                          ror  r4,#1
161e : d4e0                          skp  r4
161f : 90e8                          ror  r0,#8
1620 : 64f0 7fff                     and  r4,#$7fff
1622 : 3411                          add  r4,r1,#1
1623 : 1340                          ldm  r3,r4,#0
1624 : 3300                          add  r3,r0,#0
1625 : 2340                          stm  r3,r4,#0
1626 : 2e41                          stm  r14,r4,#1
1627 : 32e1                          inc  r2
1628 : 2210                          stm  r2,r1,#0
1629 : 13c0 14c1 3ce2                pop  r3,r4
162c : afd0                          ret
162d :                               .unary_mid
162d : 5ce1 2dc0                     push  link
162f : adf0 15b5                     jsr  #evaluatestring
1631 : 0300                          mov  r3,r0,#0
1632 : adf0 17ae                     jsr  #checkcomma
1634 : adf0 15bf                     jsr  #evaluateinteger
1636 : 0400                          mov  r4,r0,#0
1637 : 05f0 00ff                     mov  r5,#maxstringsize
1639 : 10b0                          ldm  r0,r11,#0
163a : 70f0 3228                     xor  r0,#tok_rparen
163c : c0e0                          sknz r0
163d : aff0 1644                     jmp  #unarystringslicecommon
163f : adf0 17ae                     jsr  #checkcomma
1641 : adf0 15bf                     jsr  #evaluateinteger
1643 : 0500                          mov  r5,r0,#0
1644 :                               .unarystringslicecommon
1644 : adf0 17a2                     jsr  #checkrightbracket
1646 : 54e1                          dec  r4
1647 : d4e0                          skp  r4
1648 : aff0 1811                     jmp  #badnumbererror
164a : d5e0                          skp  r5
164b : aff0 1811                     jmp  #badnumbererror
164d : c5e0                          sknz  r5
164e : aff0 1676                     jmp  #_usscnull
1650 : 1030                          ldm  r0,r3,#0
1651 : 0140                          mov  r1,r4,#0
1652 : 5100                          sub  r1,r0,#0
1653 : ffe0                          sklt
1654 : aff0 1676                     jmp  #_usscnull
1656 : 0050                          mov  r0,r5,#0
1657 : 90e1                          ror  r0,#1
1658 : 60f0 7fff                     and  r0,#$7fff
165a : 30e2                          add  r0,#2
165b : adf0 160a                     jsr  #sfallocate
165d : 20a0                          stm  r0,r10,#esvalue1
165e : 7660                          clr  r6
165f : 33e1                          inc  r3
1660 :                               ._ussccopyloop
1660 : 54e1                          dec  r4
1661 : e4e0                          skm  r4
1662 : aff0 1671                     jmp  #_usscnextcharacter
1664 : 1030                          ldm  r0,r3,#0
1665 : 9060                          ror  r0,r6,#0
1666 : 60f0 00ff                     and  r0,#$00ff
1668 : c0e0                          sknz  r0
1669 : aff0 167a                     jmp  #_usscexit
166b : adf0 1615                     jsr  #sfaddcharacter
166d : 55e1                          dec  r5
166e : c5e0                          sknz  r5
166f : aff0 167a                     jmp  #_usscexit
1671 :                               ._usscnextcharacter
1671 : 76e8                          xor  r6,#8
1672 : c6e0                          sknz  r6
1673 : 33e1                          inc  r3
1674 : aff0 1660                     jmp  #_ussccopyloop
1676 :                               ._usscnull
1676 : 00e1                          mov  r0,#1
1677 : adf0 160a                     jsr  #sfallocate
1679 : 20a0                          stm  r0,r10,#esvalue1
167a :                               ._usscexit
167a : 2ea2                          stm  r14,r10,#esreference1
167b : 2fa1                          stm  r15,r10,#estype1
167c : 1dc0 3ce1                     pop  link
167e : afd0                          ret
167f :                               .unary_left
167f : 5ce1 2dc0                     push  link
1681 : adf0 15b5                     jsr  #evaluatestring
1683 : 0300                          mov  r3,r0,#0
1684 : adf0 17ae                     jsr  #checkcomma
1686 : 04e1                          mov  r4,#1
1687 : adf0 15bf                     jsr  #evaluateinteger
1689 : 0500                          mov  r5,r0,#0
168a : aff0 1644                     jmp  #unarystringslicecommon
168c :                               .unary_right
168c : 5ce1 2dc0                     push  link
168e : adf0 15b5                     jsr  #evaluatestring
1690 : 0300                          mov  r3,r0,#0
1691 : 1430                          ldm  r4,r3,#0
1692 : 34e1                          inc  r4
1693 : adf0 17ae                     jsr  #checkcomma
1695 : adf0 15bf                     jsr  #evaluateinteger
1697 : 5400                          sub  r4,r0,#0
1698 : d4e0                          skp  r4
1699 : 04e1                          mov  r4,#1
169a : c4e0                          sknz  r4
169b : 04e1                          mov  r4,#1
169c : 05f0 00ff                     mov  r5,#maxstringsize
169e : aff0 1644                     jmp  #unarystringslicecommon
16a0 :                               .unary_hex
16a0 :                               .unary_bin
16a0 : aff0 159d                     jmp  #evaluateterminteger
16a2 :                               .unary_parenthesis
16a2 : 5ce1 2dc0                     push  link
16a4 : adf0 150f                     jsr  #evaluateexpression
16a6 : adf0 17a2                     jsr  #checkrightbracket
16a8 : 1dc0 3ce1                     pop  link
16aa : afd0                          ret
16ab :                               .unary_abs
16ab : 5ce1 2dc0                     push  link
16ad : adf0 15bf                     jsr  #evaluateinteger
16af : 7110                          clr  r1
16b0 : 5100                          sub  r1,r0,#0
16b1 : d0e0                          skp  r0
16b2 : 0010                          mov  r0,r1,#0
16b3 : 20a0                          stm  r0,r10,#esvalue1
16b4 : adf0 17a2                     jsr  #checkrightbracket
16b6 : 1dc0 3ce1                     pop  link
16b8 : afd0                          ret
16b9 :                               .unary_sgn
16b9 :                               .unary_sgn2
16b9 : 5ce1 2dc0                     push  link
16bb : adf0 15bf                     jsr  #evaluateinteger
16bd : 01e1                          mov  r1,#1
16be : d0e0                          skp  r0
16bf : 01f0 ffff                     mov  r1,#-1
16c1 : c0e0                          sknz r0
16c2 : 7110                          clr  r1
16c3 : 21a0                          stm  r1,r10,#esvalue1
16c4 : adf0 17a2                     jsr  #checkrightbracket
16c6 : 1dc0 3ce1                     pop  link
16c8 : afd0                          ret
16c9 :                               .unary_len
16c9 :                               .unary_len2
16c9 : 5ce1 2dc0                     push  link
16cb : adf0 15b5                     jsr  #evaluatestring
16cd : 1000                          ldm  r0,r0,#0
16ce : 20a0                          stm  r0,r10,#esvalue1
16cf : 2ea1                          stm  r14,r10,#estype1
16d0 : adf0 17a2                     jsr  #checkrightbracket
16d2 : 1dc0 3ce1                     pop  link
16d4 : afd0                          ret
16d5 :                               .unary_asc
16d5 : 5ce1 2dc0                     push  link
16d7 : adf0 15b5                     jsr  #evaluatestring
16d9 : 1001                          ldm  r0,r0,#1
16da : 60f0 00ff                     and  r0,#$00ff
16dc : 20a0                          stm  r0,r10,#esvalue1
16dd : 2ea1                          stm  r14,r10,#estype1
16de : adf0 17a2                     jsr  #checkrightbracket
16e0 : 1dc0 3ce1                     pop  link
16e2 : afd0                          ret
16e3 :                               .unary_peek
16e3 : 5ce1 2dc0                     push  link
16e5 : adf0 15bf                     jsr  #evaluateinteger
16e7 : 1000                          ldm  r0,r0,#0
16e8 : 20a0                          stm  r0,r10,#esvalue1
16e9 : adf0 17a2                     jsr  #checkrightbracket
16eb : 1dc0 3ce1                     pop  link
16ed : afd0                          ret
16ee :                               .unary_inkey
16ee : 5ce1 2dc0                     push  link
16f0 : adf0 17a2                     jsr  #checkrightbracket
16f2 : 1dc0 3ce1                     pop  link
16f4 :                               .unaryinkeynocheck
16f4 : 5ce1 2dc0                     push  link
16f6 : adea                          jsr  #osgetkeyboard
16f7 : 20a0                          stm  r0,r10,#esvalue1
16f8 : 2ea1                          stm  r14,r10,#estype1
16f9 : 2ea2                          stm  r14,r10,#esreference1
16fa : 1dc0 3ce1                     pop  link
16fc : afd0                          ret
16fd :                               .unary_get
16fd : 5ce1 2dc0                     push  link
16ff : adf0 17a2                     jsr  #checkrightbracket
1701 :                               ._ugwait
1701 : adf0 16f4                     jsr  #unaryinkeynocheck
1703 : 10a0                          ldm  r0,r10,#esvalue1
1704 : c0e0                          sknz r0
1705 : aff0 1701                     jmp  #_ugwait
1707 : 1dc0 3ce1                     pop  link
1709 : afd0                          ret
170a :                               .unary_rnd
170a :                               .unary_rnd2
170a : 5ce1 2dc0                     push  link
170c : adf0 0018                     jsr  #osrandom16
170e : 11b0                          ldm  r1,r11,#0
170f : 71f0 3228                     xor  r1,#tok_rparen
1711 : c1e0                          sknz  r1
1712 : aff0 1723                     jmp  #unary_rndexit
1714 : 0200                          mov  r2,r0,#0
1715 : adf0 15bf                     jsr  #evaluateinteger
1717 : 0300                          mov  r3,r0,#0
1718 : adf0 17ae                     jsr  #checkcomma
171a : adf0 15bf                     jsr  #evaluateinteger
171c : 0101                          mov  r1,r0,#1
171d : 5130                          sub  r1,r3,#0
171e : 0020                          mov  r0,r2,#0
171f : adf0 0014                     jsr  #osudivide16
1721 : 0010                          mov  r0,r1,#0
1722 : 3030                          add  r0,r3,#0
1723 :                               .unary_rndexit
1723 : 20a0                          stm  r0,r10,#esvalue1
1724 : 2ea1                          stm  r14,r10,#estype1
1725 : 2ea2                          stm  r14,r10,#esreference1
1726 : adf0 17a2                     jsr  #checkrightbracket
1728 : 1dc0 3ce1                     pop  link
172a : afd0                          ret
172b :                               .unary_val
172b :                               .unary_val2
172b : 5ce1 2dc0                     push  link
172d : adf0 15b5                     jsr  #evaluatestring
172f : adf0 17a2                     jsr  #checkrightbracket
1731 : 5ce3 29c0 2ac1 2bc2           push  r9,r10,r11
1735 : 7bb0                          clr  r11
1736 : 0a01                          mov  r10,r0,#1
1737 : 1900                          ldm  r9,r0,#0
1738 : 00f0 174a                     mov  r0,#stringextract
173a : 01ea                          mov  r1,#10
173b : adf0 001a                     jsr  #osstrtoint
173d : b1e0                          skz  r1
173e : aff0 1811                     jmp  #badnumbererror
1740 : 19c0 1ac1 1bc2 3ce3           pop  r9,r10,r11
1744 : 20a0                          stm  r0,r10,#esvalue1
1745 : 2ea1                          stm  r14,r10,#estype1
1746 : 2ea2                          stm   r14,r10,#esreference1
1747 : 1dc0 3ce1                     pop  link
1749 : afd0                          ret
174a :                               .stringextract
174a : 7000                          clr  r0
174b : c9e0                          sknz  r9
174c : afd0                          ret
174d : 59e1                          dec  r9
174e : 10a0                          ldm  r0,r10,#0
174f : bbe0                          skz  r11
1750 : 90e8                          ror  r0,#8
1751 : 60f0 00ff                     and  r0,#$00ff
1753 : 7be1                          xor  r11,#1
1754 : cbe0                          sknz  r11
1755 : 3ae1                          inc  r10
1756 : afd0                          ret
1757 :                               .unary_chr
1757 : 5ce1 2dc0                     push  link
1759 : adf0 15bf                     jsr  #evaluateinteger
175b : adf0 17a2                     jsr  #checkrightbracket
175d : 60f0 00ff                     and  r0,#$00ff
175f :                               .unaryreturncharacter
175f : 0100                          mov  r1,r0,#0
1760 : 00e2                          mov  r0,#2
1761 : adf0 1962                     jsr  #allocatetempmemory
1763 : 2101                          stm  r1,r0,#1
1764 : 01e1                          mov  r1,#1
1765 : 2100                          stm  r1,r0,#0
1766 : 20a0                          stm  r0,r10,#esvalue1
1767 : 2fa1                          stm  r15,r10,#estype1
1768 : 2ea2                          stm  r14,r10,#esreference1
1769 : 1dc0 3ce1                     pop  link
176b : afd0                          ret
176c :                               .unary_getstring
176c : 5ce1 2dc0                     push  link
176e : adf0 16fd                     jsr  #unary_get
1770 : 10a0                          ldm  r0,r10,#esvalue1
1771 : aff0 175f                     jmp  #unaryreturncharacter
1773 :                               .unary_inkeystring
1773 : 5ce1 2dc0                     push  link
1775 : adf0 16ee                     jsr  #unary_inkey
1777 : 10a0                          ldm  r0,r10,#esvalue1
1778 : aff0 175f                     jmp  #unaryreturncharacter
177a :                               .unary_str
177a :                               .unary_str2
177a : 5ce1 2dc0                     push  link
177c : adf0 15bf                     jsr  #evaluateinteger
177e : adf0 17a2                     jsr  #checkrightbracket
1780 : 01f0 800a                     mov  r1,#$800a
1782 : adf0 001c                     jsr  #osinttostr
1784 : 0100                          mov  r1,r0,#0
1785 : 00ea                          mov  r0,#maxistrsize
1786 : adf0 1962                     jsr  #allocatetempmemory
1788 : 20a0                          stm  r0,r10,#esvalue1
1789 : 2fa1                          stm  r15,r10,#estype1
178a : 2ea2                          stm  r14,r10,#esreference1
178b : 02ea                          mov  r2,#maxistrsize
178c :                               ._uscopy
178c : 1310                          ldm  r3,r1,#0
178d : 2300                          stm  r3,r0,#0
178e : 31e1                          inc  r1
178f : 30e1                          inc  r0
1790 : 52e1                          dec  r2
1791 : b2e0                          skz  r2
1792 : aff0 178c                     jmp  #_uscopy
1794 : 1dc0 3ce1                     pop  link
1796 : afd0                          ret
1797 :                               .checknexttoken
1797 : 5ce1 21c0                     push  r1
1799 : 11b0                          ldm  r1,r11,#0
179a : 3be1                          inc  r11
179b : 7010                          xor  r0,r1,#0
179c : b0e0                          skz  r0
179d : aff0 17e1                     jmp  #syntaxerror
179f : 11c0 3ce1                     pop  r1
17a1 : afd0                          ret
17a2 :                               .checkrightbracket
17a2 : 5ce1 20c0                     push  r0
17a4 : 10b0                          ldm  r0,r11,#0
17a5 : 3be1                          inc  r11
17a6 : 70f0 3228                     xor  r0,#tok_rparen
17a8 : b0e0                          skz  r0
17a9 : aff0 1809                     jmp  #missingbracketerror
17ab : 10c0 3ce1                     pop  r0
17ad : afd0                          ret
17ae :                               .checkcomma
17ae : 5ce1 20c0                     push  r0
17b0 : 10b0                          ldm  r0,r11,#0
17b1 : 3be1                          inc  r11
17b2 : 70f0 3229                     xor  r0,#tok_comma
17b4 : b0e0                          skz  r0
17b5 : aff0 182b                     jmp  #missingcommaerror
17b7 : 10c0 3ce1                     pop  r0
17b9 : afd0                          ret
17ba :                               .getcharactertype
17ba : 5ce1 21c0                     push  r1
17bc : 0100                          mov  r1,r0,#0
17bd : 51f0 0060                     sub  r1,#96
17bf : ffe0                          sklt
17c0 : 50f0 0020                     sub  r0,#32
17c2 : 7110                          clr  r1
17c3 : 50f0 0030                     sub  r0,#'0'
17c5 : ffe1                          skge
17c6 : aff0 17dd                     jmp  #_gctexit
17c8 : 01e2                          mov  r1,#2
17c9 : 50ea                          sub  r0,#10
17ca : ffe1                          skge
17cb : aff0 17dd                     jmp  #_gctexit
17cd : 7110                          clr  r1
17ce : 50e7                          sub  r0,#7
17cf : ffe1                          skge
17d0 : aff0 17dd                     jmp  #_gctexit
17d2 : 50f0 001a                     sub  r0,#26
17d4 : 01e1                          mov  r1,#1
17d5 : ffe1                          skge
17d6 : aff0 17dd                     jmp  #_gctexit
17d8 : 01e2                          mov  r1,#2
17d9 : 70f0 ffd3                     xor  r0,#'.'-'0'-10-7-26
17db : c0e0                          sknz  r0
17dc : 7110                          clr  r1
17dd :                               ._gctexit
17dd : 0010                          mov  r0,r1,#0
17de : 11c0 3ce1                     pop  r1
17e0 : afd0                          ret
17e1 :                               .syntaxerror
17e1 : adf0 18cb                     jsr  #generrorhandler
17e3 : 0006 7953 746e 7861           string "syntax"
17e7 :                               .typemismatcherror
17e7 : adf0 18cb                     jsr  #generrorhandler
17e9 : 000a 7257 6e6f 2067 7974      string "wrong type"
17ef :                               .dividezeroerror
17ef : adf0 18cb                     jsr  #generrorhandler
17f1 : 0010 6944 6976 6973 6e6f      string  "division by zero"
17fa :                               .asserterror
17fa : adf0 18cb                     jsr  #generrorhandler
17fc : 0006 7341 6573 7472           string  "assert"
1800 :                               .lineerror
1800 : adf0 18cb                     jsr  #generrorhandler
1802 : 000c 694c 656e 7520 6b6e      string  "line unknown"
1809 :                               .missingbracketerror
1809 : adf0 18cb                     jsr  #generrorhandler
180b : 0009 694d 7373 6e69 2067      string  "missing )"
1811 :                               .badnumbererror
1811 : adf0 18cb                     jsr  #generrorhandler
1813 : 000a 6142 2064 754e 626d      string  "bad number"
1819 :                               .badindexerror
1819 : adf0 18cb                     jsr  #generrorhandler
181b : 0009 6142 2064 6e49 6564      string  "bad index"
1821 :                               .memoryerror
1821 : adf0 18cb                     jsr  #generrorhandler
1823 : 000d 754f 2074 666f 4d20      string  "out of memory"
182b :                               .missingcommaerror
182b : adf0 18cb                     jsr  #generrorhandler
182d : 0009 694d 7373 6e69 2067      string  "missing ,"
1833 :                               .arrayautoerror
1833 : adf0 18cb                     jsr  #generrorhandler
1835 : 000d 6e55 6e6b 776f 206e      string  "unknown array"
183d :                               .arrayexistserror
183d : adf0 18cb                     jsr  #generrorhandler
183f : 000c 7241 6172 2079 7865      string  "array exists"
1846 :                               .callerror
1846 : adf0 18cb                     jsr  #generrorhandler
1848 : 0011 6e55 6e6b 776f 206e      string  "unknown procedure"
1852 :                               .stoperror
1852 : adf0 18cb                     jsr  #generrorhandler
1854 : 0004 7453 706f                string  "stop"
1857 :                               .strlenerror
1857 : adf0 18cb                     jsr  #generrorhandler
1859 : 000b 7453 6972 676e 5320      string  "string size"
1860 :                               .structureerror
1860 : adf0 18cb                     jsr  #generrorhandler
1862 : 0010 7453 7572 7463 7275      string  "structures wrong"
186b :                               .returnerror
186b : adf0 18cb                     jsr  #generrorhandler
186d : 0014 6552 7574 6e72 7720      string  "return without gosub"
1878 :                               .untilerror
1878 : adf0 18cb                     jsr  #generrorhandler
187a : 0014 6e55 6974 206c 6977      string  "until without repeat"
1885 :                               .wenderror
1885 : adf0 18cb                     jsr  #generrorhandler
1887 : 0012 6557 646e 7720 7469      string  "wend without while"
1891 :                               .elseerror
1891 : adf0 18cb                     jsr  #generrorhandler
1893 : 000f 6c45 6573 7720 7469      string  "else without if"
189c :                               .endiferror
189c : adf0 18cb                     jsr  #generrorhandler
189e : 0010 6e45 6964 2066 6977      string  "endif without if"
18a7 :                               .endprocerror
18a7 : adf0 18cb                     jsr  #generrorhandler
18a9 : 0014 6e45 5064 6f72 2063      string  "endproc without proc"
18b4 :                               .nexterror
18b4 : adf0 18cb                     jsr  #generrorhandler
18b6 : 0010 654e 7478 7720 7469      string  "next without for"
18bf :                               .returnstackerror
18bf : adf0 18cb                     jsr  #generrorhandler
18c1 : 0012 7453 7572 7463 7275      string  "structure too deep"
18cb :                               .generrorhandler
18cb : 01d0                          mov  r1,r13,#0
18cc : 00f0 0011                     mov  r0,#$11
18ce : ade4                          jsr  #osprintcharacter
18cf : 0010                          mov  r0,r1,#0
18d0 : ade8                          jsr  #osprintstring
18d1 : 10f0 4024                     ldm  r0,#currentline
18d3 : 1001                          ldm  r0,r0,#1
18d4 : c0e0                          sknz  r0
18d5 : aff0 18e2                     jmp  #_ehexit
18d7 : ade6                          jsr  #osprintinline
18d8 : 0003 4020 0020                string  " @ "
18db : 01ea                          mov  r1,#10
18dc : adf0 001c                     jsr  #osinttostr
18de : ade8                          jsr  #osprintstring
18df : ade6                          jsr  #osprintinline
18e0 : 0002 120d                     string  "[0d][12]"
18e2 :                               ._ehexit
18e2 : aff0 1011                     jmp  #warmstart
18e4 :                               .skipstructure
18e4 : 7330                          clr  r3
18e5 :                               ._ssloop
18e5 : 12b0                          ldm  r2,r11,#0
18e6 : c2e0                          sknz  r2
18e7 : aff0 1918                     jmp  #_ssnextline
18e9 : b3e0                          skz  r3
18ea : aff0 18f5                     jmp  #_ssnext
18ec : 7200                          xor  r2,r0,#0
18ed : c2e0                          sknz  r2
18ee : aff0 1916                     jmp  #_ssfound
18f0 : 12b0                          ldm  r2,r11,#0
18f1 : 7210                          xor  r2,r1,#0
18f2 : c2e0                          sknz  r2
18f3 : aff0 1916                     jmp  #_ssfound
18f5 :                               ._ssnext
18f5 : 12b0                          ldm  r2,r11,#0
18f6 : 62f0 ff00                     and  r2,#$ff00
18f8 : 72f0 0100                     xor  r2,#$0100
18fa : c2e0                          sknz  r2
18fb : aff0 1910                     jmp  #_ssstring
18fd : 12b0                          ldm  r2,r11,#0
18fe : 0420                          mov  r4,r2,#0
18ff : 3be1                          inc  r11
1900 : 62f0 f800                     and  r2,#$f800
1902 : 72f0 3800                     xor  r2,#$3800
1904 : b2e0                          skz  r2
1905 : aff0 18e5                     jmp  #_ssloop
1907 : 94e9                          ror  r4,#9
1908 : 64e3                          and  r4,#3
1909 : 54e2                          sub  r4,#2
190a : 3340                          add  r3,r4,#0
190b : e3e0                          skm  r3
190c : aff0 18e5                     jmp  #_ssloop
190e : aff0 1860                     jmp  #structureerror
1910 :                               ._ssstring
1910 : 12b0                          ldm  r2,r11,#0
1911 : 62f0 00ff                     and  r2,#$00ff
1913 : 3b20                          add  r11,r2,#0
1914 : aff0 18e5                     jmp  #_ssloop
1916 :                               ._ssfound
1916 : 3be1                          inc  r11
1917 : afd0                          ret
1918 :                               ._ssnextline
1918 : 3be1                          inc  r11
1919 : 12b0                          ldm  r2,r11,#0
191a : c2e0                          sknz  r2
191b : aff0 1860                     jmp  #structureerror
191d : 2bf0 4024                     stm  r11,#currentline
191f : 3be2                          add  r11,#2
1920 : aff0 18e5                     jmp  #_ssloop
1922 :                               .stackreset
1922 : 10f0 402b                     ldm  r0,#returnstacktop
1924 : 20f0 402d                     stm  r0,#returnstackptr
1926 : 2e00                          stm  r14,r0,#0
1927 : afd0                          ret
1928 :                               .stackpushposition
1928 : 10f0 402d                     ldm  r0,#returnstackptr
192a : 50e2                          sub  r0,#2
192b : 20f0 402d                     stm  r0,#returnstackptr
192d : 2b00                          stm  r11,r0,#0
192e : 11f0 4024                     ldm  r1,#currentline
1930 : 2101                          stm  r1,r0,#1
1931 : afd0                          ret
1932 :                               .stackpopposition
1932 : 10f0 402d                     ldm  r0,#returnstackptr
1934 : 1b01                          ldm  r11,r0,#1
1935 : 1002                          ldm  r0,r0,#2
1936 : 20f0 4024                     stm  r0,#currentline
1938 : afd0                          ret
1939 :                               .stackpushmarker
1939 : 10f0 402d                     ldm  r0,#returnstackptr
193b : 50e1                          dec  r0
193c : 20f0 402d                     stm  r0,#returnstackptr
193e : 11d0                          ldm  r1,link,#0
193f : 2100                          stm  r1,r0,#0
1940 : 3de1                          inc  link
1941 : 11f0 402c                     ldm  r1,#returnstackbottom
1943 : 5010                          sub  r0,r1,#0
1944 : ffe1                          skge
1945 : aff0 18bf                     jmp  #returnstackerror
1947 : afd0                          ret
1948 :                               .stackcheckmarker
1948 : 10f0 402d                     ldm  r0,#returnstackptr
194a : 1000                          ldm  r0,r0,#0
194b : 11d0                          ldm  r1,link,#0
194c : 3de1                          inc  link
194d : 7010                          xor  r0,r1,#0
194e : c0e0                          sknz  r0
194f : 3de2                          add  link,#2
1950 : afd0                          ret
1951 :                               .stackpopwords
1951 : 11f0 402d                     ldm  r1,#returnstackptr
1953 : 3010                          add  r0,r1,#0
1954 : 20f0 402d                     stm  r0,#returnstackptr
1956 : afd0                          ret
1957 :                               .stackpushr0
1957 : 5ce1 21c0                     push  r1
1959 : 11f0 402d                     ldm  r1,#returnstackptr
195b : 51e1                          dec  r1
195c : 21f0 402d                     stm  r1,#returnstackptr
195e : 2010                          stm  r0,r1,#0
195f : 11c0 3ce1                     pop  r1
1961 : afd0                          ret
1962 :                               .allocatetempmemory
1962 : 5ce1 21c0                     push  r1
1964 : 11f0 402a                     ldm  r1,#tempstringalloc
1966 : b1e0                          skz  r1
1967 : aff0 196d                     jmp  #_atmnoinitialise
1969 : 11f0 4027                     ldm  r1,#memalloctop
196b : 51f0 0080                     sub  r1,#(maxstringsize>>1)+1
196d :                               ._atmnoinitialise
196d : 5100                          sub  r1,r0,#0
196e : 21f0 402a                     stm  r1,#tempstringalloc
1970 : 10f0 4028                     ldm  r0,#memallocbottom
1972 : 5010                          sub  r0,r1,#0
1973 : ffe0                          sklt  r0
1974 : aff0 1821                     jmp  #memoryerror
1976 : 0010                          mov  r0,r1,#0
1977 : 11c0 3ce1                     pop  r1
1979 : afd0                          ret
197a :                               .stringassign
197a : 5ce6 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,link
1981 : 0200                          mov  r2,r0,#0
1982 : adf0 0022                     jsr  #oswordlength
1984 : 13f0 4027                     ldm  r3,#memalloctop
1986 : 1410                          ldm   r4,r1,#0
1987 : 5430                          sub  r4,r3,#0
1988 : ffe1                          skge
1989 : aff0 1993                     jmp  #_ssaconcrete
198b : 1410                          ldm  r4,r1,#0
198c : 54e1                          dec  r4
198d : 1340                          ldm  r3,r4,#0
198e : 53e1                          dec  r3
198f : 5300                          sub  r3,r0,#0
1990 : ffe0                          sklt
1991 : aff0 19a4                     jmp  #_ssausecurrent
1993 :                               ._ssaconcrete
1993 : 0409                          mov  r4,r0,#1+extrastringalloc
1994 : 13f0 4027                     ldm  r3,#memalloctop
1996 : 5340                          sub  r3,r4,#0
1997 : 23f0 4027                     stm  r3,#memalloctop
1999 : 2430                          stm  r4,r3,#0
199a : 33e1                          inc  r3
199b : 2310                          stm  r3,r1,#0
199c : 14f0 4028                     ldm  r4,#memallocbottom
199e : 34f0 0100                     add  r4,#256
19a0 : 5430                          sub  r4,r3,#0
19a1 : ffe0                          sklt
19a2 : aff0 1821                     jmp  #memoryerror
19a4 :                               ._ssausecurrent
19a4 : 1310                          ldm  r3,r1,#0
19a5 :                               ._ssacopy
19a5 : 1420                          ldm  r4,r2,#0
19a6 : 2430                          stm  r4,r3,#0
19a7 : 32e1                          inc  r2
19a8 : 33e1                          inc  r3
19a9 : 50e1                          dec  r0
19aa : e0e0                          skm  r0
19ab : aff0 19a5                     jmp  #_ssacopy
19ad : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,link
19b4 : afd0                          ret
19b5 :                               .varerasehashtables
19b5 : 00f0 40a9                     mov  r0,#variablehashtable
19b7 : 01f0 0040                     mov  r1,#hashtablesize*4
19b9 :                               ._vehtloop
19b9 : 2e00                          stm  r14,r0,#0
19ba : 30e1                          inc  r0
19bb : 51e1                          dec  r1
19bc : b1e0                          skz  r1
19bd : aff0 19b9                     jmp  #_vehtloop
19bf : afd0                          ret
19c0 :                               .getvariablereference
19c0 : 10b0                          ldm  r0,r11,#0
19c1 : 50f0 6000                     sub  r0,#$6000
19c3 : 50f0 001b                     sub  r0,#26+1
19c5 : ffe0                          sklt  r0
19c6 : aff0 19d0                     jmp  #_gvrnotfixedvariable
19c8 : 01f0 40a9                     mov  r1,#fixedvariables+26
19ca : 3100                          add  r1,r0,#0
19cb : 21a0                          stm  r1,r10,#esvalue1
19cc : 2fa2                          stm  r15,r10,#esreference1
19cd : 2ea1                          stm  r14,r10,#estype1
19ce : 3be1                          inc  r11
19cf : afd0                          ret
19d0 :                               ._gvrnotfixedvariable
19d0 : 5ce8 20c0 21c1 22c2 23c3      push  r0,r1,r2,r3,r4,r5,r6,link
19d9 : adf0 1a03                     jsr  #findvariable
19db : b0e0                          skz  r0
19dc : aff0 19e6                     jmp  #_gvrhavevariable
19de :                               ._gvrnotfound
19de : 10b0                          ldm  r0,r11,#0
19df : 90ec                          ror  r0,#12
19e0 : d0e0                          skp  r0
19e1 : aff0 1833                     jmp  #arrayautoerror
19e3 : 00e3                          mov  r0,#3
19e4 : adf0 1a2b                     jsr  #createvariablerecord
19e6 :                               ._gvrhavevariable
19e6 : 11b0                          ldm  r1,r11,#0
19e7 : 0210                          mov  r2,r1,#0
19e8 : 3be1                          inc  r11
19e9 : 91ee                          ror  r1,#14
19ea : e1e0                          skm  r1
19eb : aff0 19e6                     jmp  #_gvrhavevariable
19ed : 91ee                          ror  r1,#14
19ee : d1e0                          skp  r1
19ef : adf0 1a49                     jsr  #indexarray
19f1 : e1e0                          skm  r1
19f2 : 30e2                          add  r0,#2
19f3 : 20a0                          stm  r0,r10,#esvalue1
19f4 : 2fa2                          stm  r15,r10,#esreference1
19f5 : 62f0 1000                     and  r2,#$1000
19f7 : 22a1                          stm  r2,r10,#estype1
19f8 : 10c0 11c1 12c2 13c3 14c4      pop  r0,r1,r2,r3,r4,r5,r6,link
1a01 : afd0                          ret
1a02 :                               ._gvrnullstring
1a02 : 0000                          word  0
1a03 :                               .findvariable
1a03 : 10b0                          ldm  r0,r11,#0
1a04 : 60f0 c000                     and  r0,#$c000
1a06 : 70f0 4000                     xor  r0,#$4000
1a08 : b0e0                          skz  r0
1a09 : aff0 17e1                     jmp  #syntaxerror
1a0b : 16b0                          ldm  r6,r11,#0
1a0c : 0060                          mov  r0,r6,#0
1a0d : 90e6                          ror  r0,#6
1a0e : 3600                          add  r6,r0,#0
1a0f : 66ef                          and  r6,#hashtablesize-1
1a10 : 10b0                          ldm  r0,r11,#0
1a11 : 60f0 1800                     and  r0,#$1800
1a13 : 90e7                          ror  r0,#11-hashtablepower
1a14 : 3600                          add  r6,r0,#0
1a15 : 36f0 40a9                     add  r6,#variablehashtable
1a17 : 0060                          mov  r0,r6,#0
1a18 :                               ._fvrsearch
1a18 : 1000                          ldm  r0,r0,#0
1a19 : c0e0                          sknz  r0
1a1a : aff0 1a2a                     jmp  #_fvrexit
1a1c : 1101                          ldm  r1,r0,#1
1a1d : 02b0                          mov  r2,r11,#0
1a1e :                               ._fvrcompare
1a1e : 1310                          ldm  r3,r1,#0
1a1f : 1420                          ldm  r4,r2,#0
1a20 : 7340                          xor  r3,r4,#0
1a21 : b3e0                          skz  r3
1a22 : aff0 1a18                     jmp  #_fvrsearch
1a24 : 31e1                          inc  r1
1a25 : 32e1                          inc  r2
1a26 : 94ee                          ror  r4,#14
1a27 : e4e0                          skm  r4
1a28 : aff0 1a1e                     jmp  #_fvrcompare
1a2a :                               ._fvrexit
1a2a : afd0                          ret
1a2b :                               .createvariablerecord
1a2b : 11f0 4028                     ldm  r1,#memallocbottom
1a2d : 1260                          ldm  r2,r6,#0
1a2e : 2210                          stm  r2,r1,#0
1a2f : 2b11                          stm  r11,r1,#1
1a30 : 13b0                          ldm  r3,r11,#0
1a31 : 93ed                          ror  r3,#13
1a32 : 7220                          clr  r2
1a33 : d3e0                          skp  r3
1a34 : 02f0 1a02                     mov  r2,#_gvrnullstring
1a36 : 2212                          stm  r2,r1,#2
1a37 : 0210                          mov  r2,r1,#0
1a38 : 3200                          add  r2,r0,#0
1a39 : ffe0                          sknc
1a3a : aff0 1821                     jmp  #memoryerror
1a3c : 22f0 4028                     stm  r2,#memallocbottom
1a3e : 13f0 4027                     ldm  r3,#memalloctop
1a40 : 53f0 0100                     sub  r3,#256
1a42 : 5230                          sub  r2,r3,#0
1a43 : ffe0                          sklt
1a44 : aff0 1821                     jmp  #memoryerror
1a46 : 2160                          stm  r1,r6,#0
1a47 : 0010                          mov  r0,r1,#0
1a48 : afd0                          ret
1a49 :                               .indexarray
1a49 : 5ce5 21c0 22c1 23c2 24c3      push  r1,r2,r3,r4,link
1a4f : 0300                          mov  r3,r0,#0
1a50 : adf0 15bf                     jsr  #evaluateinteger
1a52 : 1232                          ldm  r2,r3,#2
1a53 : 5200                          sub  r2,r0,#0
1a54 : ffe1                          skge
1a55 : aff0 1819                     jmp  #badindexerror
1a57 : 11b0                          ldm  r1,r11,#0
1a58 : 71f0 3229                     xor  r1,#tok_comma
1a5a : c1e0                          sknz  r1
1a5b : aff0 1a6b                     jmp  #_iadimension2
1a5d : 1233                          ldm  r2,r3,#3
1a5e : b2e0                          skz  r2
1a5f : aff0 182b                     jmp  #missingcommaerror
1a61 :                               ._iadone
1a61 : 3034                          add  r0,r3,#4
1a62 : adf0 17a2                     jsr  #checkrightbracket
1a64 : 11c0 12c1 13c2 14c3 1dc4      pop  r1,r2,r3,r4,link
1a6a : afd0                          ret
1a6b :                               ._iadimension2
1a6b : 3be1                          inc  r11
1a6c : 0400                          mov  r4,r0,#0
1a6d : adf0 15bf                     jsr  #evaluateinteger
1a6f : 1233                          ldm  r2,r3,#3
1a70 : c2e0                          sknz  r2
1a71 : aff0 1809                     jmp  #missingbracketerror
1a73 : 5200                          sub  r2,r0,#0
1a74 : ffe1                          skge
1a75 : aff0 1819                     jmp  #badindexerror
1a77 : 1232                          ldm  r2,r3,#2
1a78 : 8021                          mult  r0,r2,#1
1a79 : 3040                          add  r0,r4,#0
1a7a : aff0 1a61                     jmp  #_iadone
1a7c :                               .tokeniserwords
1a7c : 0102 4231 6004                word $0102,$4231,$6004
1a7f : 0101 62df                     word $0101,$62df
1a81 : 0102 4270 6012                word $0102,$4270,$6012
1a84 : 0201 803e                     word $0201,$803e
1a86 : 0201 bd3e                     word $0201,$bd3e
1a88 : 0201 803c                     word $0201,$803c
1a8a : 0201 bd3c                     word $0201,$bd3c
1a8c : 0201 803d                     word $0201,$803d
1a8e : 0201 be3c                     word $0201,$be3c
1a90 : 0301 802b                     word $0301,$802b
1a92 : 0301 802d                     word $0301,$802d
1a94 : 0401 802a                     word $0401,$802a
1a96 : 0401 802f                     word $0401,$802f
1a98 : 0402 4265 6004                word $0402,$4265,$6004
1a9b : 0501 8021                     word $0501,$8021
1a9d : 0801 8028                     word $0801,$8028
1a9f : 0801 8026                     word $0801,$8026
1aa1 : 0801 8025                     word $0801,$8025
1aa3 : 0801 ffff                     word $0801,$ffff
1aa5 : 0802 4851 6813                word $0802,$4851,$6813
1aa8 : 0802 4af9 6803                word $0802,$4af9,$6803
1aab : 0802 5943 7812                word $0802,$5943,$7812
1aae : 0802 48cf 6814                word $0802,$48cf,$6814
1ab1 : 0802 58cf 7814                word $0802,$58cf,$7814
1ab4 : 0803 4a39 48d3 6819           word $0803,$4a39,$48d3,$6819
1ab8 : 0803 5a39 58d3 7819           word $0803,$5a39,$58d3,$7819
1abc : 0802 58d4 7b26                word $0802,$58d4,$7b26
1abf : 0802 48d4 680e                word $0802,$48d4,$680e
1ac2 : 0802 5975 7804                word $0802,$5975,$7804
1ac5 : 0802 48d8 69bd                word $0802,$48d8,$69bd
1ac8 : 0803 597a 5947 7814           word $0803,$597a,$5947,$7814
1acc : 0802 4a42 6804                word $0802,$4a42,$6804
1acf : 0802 492b 680e                word $0802,$492b,$680e
1ad2 : 0802 5b33 7812                word $0802,$5b33,$7812
1ad5 : 0802 483e 680c                word $0802,$483e,$680c
1ad8 : 0803 48d4 4926 6954           word $0803,$48d4,$4926,$6954
1adc : 0803 483a 48ae 6a17           word $0803,$483a,$48ae,$6a17
1ae0 : 0805 5a6c 5b1d 5ae4 5a39      word $0805,$5a6c,$5b1d,$5ae4,$5a39,$7807
1ae6 : 0805 4a6c 4a55 4a1d 48ca      word $0805,$4a6c,$4a55,$4a1d,$48ca,$6812
1aec : 0802 497b 6a37                word $0802,$497b,$6a37
1aef : 0901 8029                     word $0901,$8029
1af1 : 0901 802c                     word $0901,$802c
1af3 : 0901 803b                     word $0901,$803b
1af5 : 0901 626c                     word $0901,$626c
1af7 : 0902 4333 6285                word $0902,$4333,$6285
1afa : 0f02 425e 6012                word $0f02,$425e,$6012
1afd : 0f01 60f9                     word $0f01,$60f9
1aff : 0f03 40da 40d8 6321           word $0f03,$40da,$40d8,$6321
1b03 : 0f03 4157 41e9 6005           word $0f03,$4157,$41e9,$6005
1b07 : 0d03 4235 416c 6006           word $0d03,$4235,$416c,$6006
1b0b : 0d02 40d6 6338                word $0d02,$40d6,$6338
1b0e : 0d02 4154 6235                word $0d02,$4154,$6235
1b11 : 0d03 4245 417c 600c           word $0d03,$4245,$417c,$600c
1b15 : 0d02 40df 60ae                word $0d02,$40df,$60ae
1b18 : 0e01 8027                     word $0e01,$8027
1b1a : 0e01 803a                     word $0e01,$803a
1b1c : 0e03 42f9 40db 6332           word $0e03,$42f9,$40db,$6332
1b20 : 0e02 402b 61ec                word $0e02,$402b,$61ec
1b23 : 0e03 41e3 402d 6012           word $0e03,$41e3,$402d,$6012
1b27 : 0e02 416c 600d                word $0e02,$416c,$600d
1b2a : 0e02 41e5 60db                word $0e02,$41e5,$60db
1b2d : 0e02 4235 6004                word $0e02,$4235,$6004
1b30 : 0e04 4235 4284 426a 6003      word $0e04,$4235,$4284,$426a,$6003
1b35 : 0e03 425f 435b 6002           word $0e03,$425f,$435b,$6002
1b39 : 0e02 425f 626c                word $0e02,$425f,$626c
1b3c : 0e03 4239 4358 6014           word $0e03,$4239,$4358,$6014
1b40 : 0e02 40d4 6014                word $0e02,$40d4,$6014
1b43 : 0e02 4174 6333                word $0e02,$4174,$6333
1b46 : 0e02 4264 60a1                word $0e02,$4264,$60a1
1b49 : 0e02 40d6 6017                word $0e02,$40d6,$6017
1b4c : 0e02 41ef 6004                word $0e02,$41ef,$6004
1b4f : 0e02 4268 60d3                word $0e02,$4268,$60d3
1b52 : 0e03 42e0 4239 6014           word $0e03,$42e0,$4239,$6014
1b56 : 0e02 42e0 6087                word $0e02,$42e0,$6087
1b59 : 0e02 40da 600d                word $0e02,$40da,$600d
1b5c : 0e03 40da 435c 6242           word $0e03,$40da,$435c,$6242
1b60 : 0e02 435a 600e                word $0e02,$435a,$600e
1b63 : 0e02 403b 60de                word $0e02,$403b,$60de
1b66 : 0e02 4333 628f                word $0e02,$4333,$628f
1b69 : 0e02 43fb 6013                word $0e02,$43fb,$6013
1b6c : 0000                          word $0000
1b6d :                               .tokenvectors
1b6d : 142e                          word binaryop_and
1b6e : 1439                          word binaryop_or
1b6f : 144a                          word binaryop_xor
1b70 : 14e5                          word binaryop_greater
1b71 : 149e                          word binaryop_greaterequal
1b72 : 14eb                          word binaryop_less
1b73 : 14c4                          word binaryop_lessequal
1b74 : 14da                          word binaryop_equal
1b75 : 1488                          word binaryop_notequal
1b76 : 13eb                          word binaryop_add
1b77 : 13fa                          word binaryop_sub
1b78 : 1405                          word binaryop_mult
1b79 : 1410                          word binaryop_divide
1b7a : 141f                          word binaryop_mod
1b7b : 1455                          word binaryop_indirect
1b7c : 16a2                          word unary_parenthesis
1b7d : 16a0                          word unary_hex
1b7e : 16a0                          word unary_bin
1b7f : 1597                          word constshifthandler
1b80 : 16ab                          word unary_abs
1b81 : 16d5                          word unary_asc
1b82 : 1757                          word unary_chr
1b83 : 16fd                          word unary_get
1b84 : 176c                          word unary_getstring
1b85 : 16ee                          word unary_inkey
1b86 : 1773                          word unary_inkeystring
1b87 : 167f                          word unary_left
1b88 : 16c9                          word unary_len
1b89 : 162d                          word unary_mid
1b8a : 16e3                          word unary_peek
1b8b : 168c                          word unary_right
1b8c : 170a                          word unary_rnd
1b8d : 16b9                          word unary_sgn
1b8e : 177a                          word unary_str
1b8f : 172b                          word unary_val
1b90 : 16c9                          word unary_len2
1b91 : 170a                          word unary_rnd2
1b92 : 177a                          word unary_str2
1b93 : 172b                          word unary_val2
1b94 : 16b9                          word unary_sgn2
1b95 : 12b7                          word dummy1
1b96 : 12b7                          word dummy2
1b97 : 12b7                          word dummy3
1b98 : 12b7                          word dummy4
1b99 : 12b7                          word dummy5
1b9a : 10df                          word command_for
1b9b : 1149                          word command_if
1b9c : 132e                          word command_repeat
1b9d : 13c3                          word command_while
1b9e : 118e                          word command_endif
1b9f : 1114                          word command_next
1ba0 : 12b7                          word dummy6
1ba1 : 1338                          word command_until
1ba2 : 13dc                          word command_wend
1ba3 : 12ab                          word commentcommand1
1ba4 : 12b6                          word colonhandler
1ba5 : 128b                          word commandassert
1ba6 : 101b                          word command_call
1ba7 : 1078                          word command_clear
1ba8 : 1094                          word command_dim
1ba9 : 117c                          word command_else
1baa : 1011                          word warmstart
1bab : 1040                          word command_endproc
1bac : 13a5                          word command_gosub
1bad : 138d                          word command_goto
1bae : 17e1                          word syntaxerror
1baf : 119b                          word command_let
1bb0 : 11bf                          word command_list
1bb1 : 17e1                          word syntaxerror
1bb2 : 12b7                          word command_new
1bb3 : 12be                          word command_old
1bb4 : 1293                          word commandpoke
1bb5 : 12dc                          word command_print
1bb6 : 103e                          word command_proc
1bb7 : 12ab                          word commentcommand2
1bb8 : 13b4                          word command_return
1bb9 : 134f                          word runprogram
1bba : 17e1                          word syntaxerror
1bbb : 1852                          word stoperror
1bbc : 12a0                          word commandsys
1bbd :                               .basicprogram
1bbd : 0004 03de 3c43 0000 0010      word $0004,$03de,$3c43,$0000,$0010,$03e8,$3c48,$80
1c0d : 0000                          word $0000
1c0e :                               .endbasicprogram
4023 :                               .initialsp
4024 :                               .currentline
4025 :                               .programcode
4026 :                               .endmemory
4027 :                               .memalloctop
4028 :                               .memallocbottom
4029 :                               .proctable
402a :                               .tempstringalloc
402b :                               .returnstacktop
402c :                               .returnstackbottom
402d :                               .returnstackptr
402e :                               .lastlisttoken
402f :                               .evalstack
408f :                               .fixedvariables
40a9 :                               .variablehashtable
40e9 :                               .tokenbuffer
41e9 :                               .endofdata
41e9 :                               freebasiccode = ramstart + $200
