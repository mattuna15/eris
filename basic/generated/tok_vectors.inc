;
;	Automatically generated
;
.TokenVectors
	word	BinaryOp_And             ; $2200 AND
	word	BinaryOp_Or              ; $2201 OR
	word	BinaryOp_Xor             ; $2202 XOR
	word	BinaryOp_Greater         ; $2403 >
	word	BinaryOp_GreaterEqual    ; $2404 >=
	word	BinaryOp_Less            ; $2405 <
	word	BinaryOp_LessEqual       ; $2406 <=
	word	BinaryOp_Equal           ; $2407 =
	word	BinaryOp_NotEqual        ; $2408 <>
	word	BinaryOp_Add             ; $2609 +
	word	BinaryOp_Sub             ; $260a -
	word	BinaryOp_Mult            ; $280b *
	word	BinaryOp_Divide          ; $280c /
	word	BinaryOp_Mod             ; $280d MOD
	word	BinaryOp_Indirect        ; $2a0e !
	word	Unary_Parenthesis        ; $300f (
	word	Unary_Hex                ; $3010 &
	word	Unary_Bin                ; $3011 %
	word	ConstShiftHandler        ; $3012 |CONSTSHIFT
	word	Unary_Abs                ; $3013 ABS(
	word	Unary_Asc                ; $3014 ASC(
	word	Unary_Chr                ; $3015 CHR$(
	word	Unary_Get                ; $3016 GET(
	word	Unary_GetString          ; $3017 GET$(
	word	Unary_Inkey              ; $3018 INKEY(
	word	Unary_InkeyString        ; $3019 INKEY$(
	word	Unary_Left               ; $301a LEFT$(
	word	Unary_Len                ; $301b LEN(
	word	Unary_Mid                ; $301c MID$(
	word	Unary_Peek               ; $301d PEEK(
	word	Unary_Right              ; $301e RIGHT$(
	word	Unary_Rnd                ; $301f RND(
	word	Unary_Sgn                ; $3020 SGN(
	word	Unary_Str                ; $3021 STR$(
	word	Unary_Val                ; $3022 VAL(
	word	Unary_True               ; $3023 TRUE
	word	Unary_False              ; $3024 FALSE
	word	Unary_Len2               ; $3025 LENGTH(
	word	Unary_Rnd2               ; $3026 RANDOM(
	word	Unary_Str2               ; $3027 TO.STRING$(
	word	Unary_Val2               ; $3028 TO.NUMBER(
	word	Unary_Sgn2               ; $3029 SIGN(
	word	Dummy1                   ; $322a )
	word	Dummy2                   ; $322b ,
	word	Dummy3                   ; $322c ;
	word	Dummy4                   ; $322d TO
	word	Dummy5                   ; $322e STEP
	word	Command_FOR              ; $3e2f FOR
	word	Command_If               ; $3e30 IF
	word	Command_Repeat           ; $3e31 REPEAT
	word	Command_While            ; $3e32 WHILE
	word	Command_Proc             ; $3e33 PROC
	word	Command_ENDIF            ; $3a34 ENDIF
	word	Command_Next             ; $3a35 NEXT
	word	Dummy6                   ; $3a36 THEN
	word	Command_Until            ; $3a37 UNTIL
	word	Command_Wend             ; $3a38 WEND
	word	Command_EndProc          ; $3a39 ENDPROC
	word	CommentCommand1          ; $3c3a '
	word	ColonHandler             ; $3c3b :
	word	Command_Print2           ; $3c3c ?
	word	CommandAssert            ; $3c3d ASSERT
	word	Command_Call             ; $3c3e CALL
	word	Command_Clear            ; $3c3f CLEAR
	word	Command_DIM              ; $3c40 DIM
	word	Command_Dir              ; $3c41 DIR
	word	Command_ELSE             ; $3c42 ELSE
	word	Command_End              ; $3c43 END
	word	SyntaxError              ; $3c44 FKEY
	word	Command_GOSUB            ; $3c45 GOSUB
	word	Command_GOTO             ; $3c46 GOTO
	word	Command_Input            ; $3c47 INPUT
	word	Command_Let              ; $3c48 LET
	word	Command_List             ; $3c49 LIST
	word	Command_Load             ; $3c4a LOAD
	word	Command_New              ; $3c4b NEW
	word	Command_Old              ; $3c4c OLD
	word	CommandPoke              ; $3c4d POKE
	word	Command_Print            ; $3c4e PRINT
	word	CommentCommand2          ; $3c4f REM
	word	Command_RETURN           ; $3c50 RETURN
	word	RunProgram               ; $3c51 RUN
	word	Command_Save             ; $3c52 SAVE
	word	Command_Stop             ; $3c53 STOP
	word	CommandSys               ; $3c54 SYS
