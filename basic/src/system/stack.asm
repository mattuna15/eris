; *****************************************************************************
; *****************************************************************************
;
;		Name:		stack.asm
;		Purpose:	BASIC Stack routines
;		Created:	10th March 2020
;		Author:		Paul Robson (paul@robsons.org.uk)
;
; *****************************************************************************
; *****************************************************************************

; *****************************************************************************
;
;			Push the current position in R11, and the current line 
;			pointer on the return stack.
;
; *****************************************************************************

.StackPushPosition 		

; *****************************************************************************
;
;			Restore current position and line from the 2nd and 3rd
;			words on the return stack (top of stack is the marker)
;
; *****************************************************************************

.StackPopPosition

; *****************************************************************************
;
;			Push the word following this call onto the stack, this 
;			will be a marker to keep the structures aligned
;
; *****************************************************************************

.StackPushMarker

; *****************************************************************************
;
;			Check that the stack top value is the word following the
;			call. If not, return +1, else return +3 
;
; *****************************************************************************

.StackCheckMarker

; *****************************************************************************
;
;			Remove R0 words off the stack
;
; *****************************************************************************

.StackPopWords

