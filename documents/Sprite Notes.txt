Each sprite has:

current X,Y    (offset by 8,8)
current Status (if 0 sprite is not operational)
	bit 15 : 	set if needs redrawing
	bit 14 : 	horizontal flip
	bit 13 : 	vertical flip
	bit 12 : 	reserved zero
	bit 11 : 	check test
	bit 8..10 : colour
	bit 0..7 : 	sprite graphic #

new X,Y,Status
	these are set to $0800 when no change is made. When one is updated
	they are copied to current (except the redraw bit 15)
	the test is to add them together and get $3000. Very weird values
	could fail an update test once in a blue moon

CLS turns sprites off and erases ; this is also done on reset. 
Sprite drawing is enabled by the SPRITE command which errors if there is no sprite bitmaps.

SPRITE LOAD "" 			- load sprite data
SPRITE 1 TO x,y 		- move sprite
SPRITE 1 DRAW 12 		- set graphic #
SPRITE 1 INK 4 			- set colour #
SPRITE 1 FLIP n 		- set sprite flip bits

Sprite Repaint (if enabled)
===========================

1) Erase / Check phase

	Look through each sprite in turn.
		If new Values added together are not $C000, something has changed and
		that sprite needs redrawing.
			- 	If the sprite is actually on the screen
				-	Erase the sprite at its current position.
				- 	For every other sprite, check to see if it overlaps this one
					(don't bother if it is already marked for redrawing)
				-	If it does, set the redraw bit but we don't have to erase it if
					it doesn't change.
			- 	Copy the new X/Y/Status over as appropriate (e.g. if not $0800)					
				making sure the redraw bit is set whether you copy or not.
				(technically wastes a repaint if moving off screen)

2) Repaint Phase

	Look through each sprite in turn.
		If the repaint bit is set, then repaint it.

3) Completion Phase		

	Clear all repaint bits and reset all new values to $0800.

	
