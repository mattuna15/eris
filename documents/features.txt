					Features List
					=============

The reference machine is driven by the cheapest hardware, the ESP32 
board implementation.

Hardware
- 16 bit 100% orthogonal RISC-style CPU running at slightly under 1 MIPS
- 24k RAM and 16k ROM 16 bit words, max 47.75k RAM words
- 320x240 4 bit colour display driven by blitter, does not use Program RAM.
- 2 tone and 1 noise channels.
- Running on ESP32 , Raspian and Windows/Linux emulator (only uses SDL)
- Uses system storage - Local HD, SPIFFS (and SDCard)

System Software
===============
- Python Cross Assembler
- 53 x 30 text display
- Redefinable function keys
- Standard joystick interface
- Keyboard internationalisation
- Background sound generation
- 16 single colour sprite system
- Commodore style screen editor
- Kernel support for just about everything

Integer Basic
=============
- Integer and String, one and two dimension array types 
- Approx 12-13 times quicker than C64 Basic
- For, While, If, Repeat structures
- Long variable names
- Named procedures and parameters
- Commands for sound, sprites, joystick, keypress.
- Indirection operator
- Inline Assembler
- Indented colour lister
- Local variables
- Message internationalisation
- Hidden lines for support code

Things being worked on actively
===============================
- Working on RaspiZero port (do not have a RaspiZero yet)
- Working on emscripten port
- Asynchronous procedure calls "after 400 call do.something()"
- Color Forth type language for it

Things sort of considered
=========================
- Machine code monitor (the emulator has a debugger)
- Not complex to implement in FPGA or indeed just about anything.
